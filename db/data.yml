
---
users:
  columns:
  - id
  - created_at
  - updated_at
  - provider
  - uid
  - name
  - email
  - encrypted_password
  - reset_password_token
  - reset_password_sent_at
  - remember_created_at
  - sign_in_count
  - current_sign_in_at
  - last_sign_in_at
  - current_sign_in_ip
  - last_sign_in_ip
  - fb_user_id
  records: 
  - - 1
    - '2013-01-08 04:08:43.439693'
    - '2013-01-08 04:08:43.439693'
    - 
    - 
    - Ryo Akitani
    - akitani.r@gmail.com
    - ''
    - 
    - 
    - 
    - 0
    - 
    - 
    - 
    - 
    - 100003914794185

---
blog_tags:
  columns:
  - id
  - blog_id
  - tag_id
  - created_at
  - updated_at
  records: 
  - - 1
    - 1
    - 1
    - '2013-01-08 04:09:16.622486'
    - '2013-01-08 04:09:16.622486'
  - - 2
    - 2
    - 1
    - '2013-01-08 04:09:16.726090'
    - '2013-01-08 04:09:16.726090'
  - - 3
    - 3
    - 2
    - '2013-01-08 04:09:16.783828'
    - '2013-01-08 04:09:16.783828'
  - - 4
    - 4
    - 2
    - '2013-01-08 04:09:16.814466'
    - '2013-01-08 04:09:16.814466'
  - - 5
    - 5
    - 3
    - '2013-01-08 04:09:16.893018'
    - '2013-01-08 04:09:16.893018'
  - - 6
    - 6
    - 4
    - '2013-01-08 04:09:16.936201'
    - '2013-01-08 04:09:16.936201'
  - - 7
    - 7
    - 5
    - '2013-01-08 04:09:16.973798'
    - '2013-01-08 04:09:16.973798'
  - - 8
    - 8
    - 6
    - '2013-01-08 04:09:17.008857'
    - '2013-01-08 04:09:17.008857'
  - - 9
    - 9
    - 6
    - '2013-01-08 04:09:17.039882'
    - '2013-01-08 04:09:17.039882'
  - - 10
    - 10
    - 6
    - '2013-01-08 04:09:17.071988'
    - '2013-01-08 04:09:17.071988'
  - - 11
    - 11
    - 6
    - '2013-01-08 04:09:17.104752'
    - '2013-01-08 04:09:17.104752'
  - - 12
    - 12
    - 6
    - '2013-01-08 04:09:17.136845'
    - '2013-01-08 04:09:17.136845'
  - - 13
    - 13
    - 6
    - '2013-01-08 04:09:17.200116'
    - '2013-01-08 04:09:17.200116'
  - - 14
    - 14
    - 6
    - '2013-01-08 04:09:17.220634'
    - '2013-01-08 04:09:17.220634'
  - - 15
    - 15
    - 6
    - '2013-01-08 04:09:17.255280'
    - '2013-01-08 04:09:17.255280'
  - - 16
    - 16
    - 7
    - '2013-01-08 04:09:17.302420'
    - '2013-01-08 04:09:17.302420'
  - - 17
    - 17
    - 2
    - '2013-01-08 04:09:17.334995'
    - '2013-01-08 04:09:17.334995'
  - - 18
    - 18
    - 6
    - '2013-01-08 04:09:17.370665'
    - '2013-01-08 04:09:17.370665'
  - - 19
    - 19
    - 7
    - '2013-01-08 04:09:17.398517'
    - '2013-01-08 04:09:17.398517'
  - - 20
    - 20
    - 7
    - '2013-01-08 04:09:17.422913'
    - '2013-01-08 04:09:17.422913'
  - - 21
    - 21
    - 7
    - '2013-01-08 04:09:17.443068'
    - '2013-01-08 04:09:17.443068'
  - - 22
    - 22
    - 8
    - '2013-01-08 04:09:17.483742'
    - '2013-01-08 04:09:17.483742'
  - - 23
    - 23
    - 7
    - '2013-01-08 04:09:17.507244'
    - '2013-01-08 04:09:17.507244'
  - - 24
    - 24
    - 7
    - '2013-01-08 04:09:17.530811'
    - '2013-01-08 04:09:17.530811'
  - - 25
    - 25
    - 7
    - '2013-01-08 04:09:17.561936'
    - '2013-01-08 04:09:17.561936'
  - - 26
    - 26
    - 9
    - '2013-01-08 04:09:17.625842'
    - '2013-01-08 04:09:17.625842'
  - - 27
    - 27
    - 7
    - '2013-01-08 04:09:17.677596'
    - '2013-01-08 04:09:17.677596'
  - - 28
    - 28
    - 1
    - '2013-01-08 04:09:17.692044'
    - '2013-01-08 04:09:17.692044'
  - - 29
    - 29
    - 7
    - '2013-01-08 04:09:17.707702'
    - '2013-01-08 04:09:17.707702'
  - - 30
    - 30
    - 7
    - '2013-01-08 04:09:17.722767'
    - '2013-01-08 04:09:17.722767'
  - - 31
    - 31
    - 10
    - '2013-01-08 04:09:17.747348'
    - '2013-01-08 04:09:17.747348'
  - - 32
    - 32
    - 9
    - '2013-01-08 04:09:17.761848'
    - '2013-01-08 04:09:17.761848'
  - - 33
    - 33
    - 10
    - '2013-01-08 04:09:17.778899'
    - '2013-01-08 04:09:17.778899'
  - - 34
    - 34
    - 3
    - '2013-01-08 04:09:17.793384'
    - '2013-01-08 04:09:17.793384'
  - - 35
    - 35
    - 9
    - '2013-01-08 04:09:17.846282'
    - '2013-01-08 04:09:17.846282'
  - - 36
    - 36
    - 7
    - '2013-01-08 04:09:17.886282'
    - '2013-01-08 04:09:17.886282'
  - - 37
    - 37
    - 4
    - '2013-01-08 04:09:17.906437'
    - '2013-01-08 04:09:17.906437'
  - - 38
    - 38
    - 4
    - '2013-01-08 04:09:17.927763'
    - '2013-01-08 04:09:17.927763'
  - - 39
    - 39
    - 4
    - '2013-01-08 04:09:17.946858'
    - '2013-01-08 04:09:17.946858'
  - - 40
    - 40
    - 4
    - '2013-01-08 04:09:17.968861'
    - '2013-01-08 04:09:17.968861'
  - - 41
    - 41
    - 11
    - '2013-01-08 04:09:17.998344'
    - '2013-01-08 04:09:17.998344'
  - - 42
    - 42
    - 11
    - '2013-01-08 04:09:18.020992'
    - '2013-01-08 04:09:18.020992'
  - - 43
    - 43
    - 9
    - '2013-01-08 04:09:18.041999'
    - '2013-01-08 04:09:18.041999'
  - - 44
    - 44
    - 12
    - '2013-01-08 04:09:18.073562'
    - '2013-01-08 04:09:18.073562'
  - - 45
    - 45
    - 9
    - '2013-01-08 04:09:18.092394'
    - '2013-01-08 04:09:18.092394'
  - - 46
    - 46
    - 2
    - '2013-01-08 04:09:18.114507'
    - '2013-01-08 04:09:18.114507'
  - - 47
    - 47
    - 12
    - '2013-01-08 04:09:18.134758'
    - '2013-01-08 04:09:18.134758'
  - - 48
    - 48
    - 13
    - '2013-01-08 04:09:18.172458'
    - '2013-01-08 04:09:18.172458'
  - - 49
    - 49
    - 13
    - '2013-01-08 04:09:18.201159'
    - '2013-01-08 04:09:18.201159'
  - - 50
    - 50
    - 14
    - '2013-01-08 04:09:18.233678'
    - '2013-01-08 04:09:18.233678'
  - - 51
    - 51
    - 14
    - '2013-01-08 04:09:18.252578'
    - '2013-01-08 04:09:18.252578'
  - - 52
    - 52
    - 14
    - '2013-01-08 04:09:18.274246'
    - '2013-01-08 04:09:18.274246'
  - - 53
    - 53
    - 7
    - '2013-01-08 04:09:18.295304'
    - '2013-01-08 04:09:18.295304'
  - - 54
    - 54
    - 13
    - '2013-01-08 04:09:18.315454'
    - '2013-01-08 04:09:18.315454'
  - - 55
    - 55
    - 13
    - '2013-01-08 04:09:18.336840'
    - '2013-01-08 04:09:18.336840'
  - - 56
    - 56
    - 13
    - '2013-01-08 04:09:18.400785'
    - '2013-01-08 04:09:18.400785'
  - - 57
    - 57
    - 15
    - '2013-01-08 04:09:18.426282'
    - '2013-01-08 04:09:18.426282'
  - - 58
    - 58
    - 15
    - '2013-01-08 04:09:18.445329'
    - '2013-01-08 04:09:18.445329'
  - - 59
    - 59
    - 15
    - '2013-01-08 04:09:18.466576'
    - '2013-01-08 04:09:18.466576'
  - - 60
    - 60
    - 15
    - '2013-01-08 04:09:18.486164'
    - '2013-01-08 04:09:18.486164'
  - - 61
    - 61
    - 15
    - '2013-01-08 04:09:18.512363'
    - '2013-01-08 04:09:18.512363'
  - - 62
    - 62
    - 7
    - '2013-01-08 04:09:18.531284'
    - '2013-01-08 04:09:18.531284'
  - - 63
    - 63
    - 16
    - '2013-01-08 04:09:18.592265'
    - '2013-01-08 04:09:18.592265'
  - - 64
    - 64
    - 15
    - '2013-01-08 04:09:18.615210'
    - '2013-01-08 04:09:18.615210'
  - - 65
    - 65
    - 17
    - '2013-01-08 04:09:18.647586'
    - '2013-01-08 04:09:18.647586'
  - - 66
    - 66
    - 13
    - '2013-01-08 04:09:18.668557'
    - '2013-01-08 04:09:18.668557'
  - - 67
    - 67
    - 13
    - '2013-01-08 04:09:18.692230'
    - '2013-01-08 04:09:18.692230'
  - - 68
    - 68
    - 15
    - '2013-01-08 04:09:18.713842'
    - '2013-01-08 04:09:18.713842'
  - - 69
    - 69
    - 7
    - '2013-01-08 04:09:18.731780'
    - '2013-01-08 04:09:18.731780'
  - - 70
    - 70
    - 13
    - '2013-01-08 04:09:18.750256'
    - '2013-01-08 04:09:18.750256'
  - - 71
    - 71
    - 13
    - '2013-01-08 04:09:18.765218'
    - '2013-01-08 04:09:18.765218'
  - - 72
    - 72
    - 13
    - '2013-01-08 04:09:18.780420'
    - '2013-01-08 04:09:18.780420'
  - - 73
    - 73
    - 14
    - '2013-01-08 04:09:18.797065'
    - '2013-01-08 04:09:18.797065'
  - - 74
    - 74
    - 14
    - '2013-01-08 04:09:18.810961'
    - '2013-01-08 04:09:18.810961'
  - - 75
    - 75
    - 18
    - '2013-01-08 04:09:18.836007'
    - '2013-01-08 04:09:18.836007'
  - - 76
    - 76
    - 15
    - '2013-01-08 04:09:18.851128'
    - '2013-01-08 04:09:18.851128'
  - - 77
    - 77
    - 4
    - '2013-01-08 04:09:18.901763'
    - '2013-01-08 04:09:18.901763'
  - - 78
    - 78
    - 13
    - '2013-01-08 04:09:18.916675'
    - '2013-01-08 04:09:18.916675'
  - - 79
    - 79
    - 19
    - '2013-01-08 04:09:18.943632'
    - '2013-01-08 04:09:18.943632'
  - - 80
    - 80
    - 15
    - '2013-01-08 04:09:18.958512'
    - '2013-01-08 04:09:18.958512'
  - - 81
    - 81
    - 18
    - '2013-01-08 04:09:18.975809'
    - '2013-01-08 04:09:18.975809'
  - - 82
    - 82
    - 19
    - '2013-01-08 04:09:18.993667'
    - '2013-01-08 04:09:18.993667'
  - - 83
    - 83
    - 15
    - '2013-01-08 04:09:19.015462'
    - '2013-01-08 04:09:19.015462'
  - - 84
    - 84
    - 15
    - '2013-01-08 04:09:19.037094'
    - '2013-01-08 04:09:19.037094'
  - - 85
    - 85
    - 13
    - '2013-01-08 04:09:19.062324'
    - '2013-01-08 04:09:19.062324'
  - - 86
    - 86
    - 20
    - '2013-01-08 04:09:19.094440'
    - '2013-01-08 04:09:19.094440'
  - - 87
    - 87
    - 13
    - '2013-01-08 04:09:19.116338'
    - '2013-01-08 04:09:19.116338'
  - - 88
    - 88
    - 4
    - '2013-01-08 04:09:19.137362'
    - '2013-01-08 04:09:19.137362'
  - - 89
    - 89
    - 15
    - '2013-01-08 04:09:19.157592'
    - '2013-01-08 04:09:19.157592'
  - - 90
    - 90
    - 7
    - '2013-01-08 04:09:19.180194'
    - '2013-01-08 04:09:19.180194'
  - - 91
    - 91
    - 15
    - '2013-01-08 04:09:19.201375'
    - '2013-01-08 04:09:19.201375'
  - - 92
    - 92
    - 13
    - '2013-01-08 04:09:19.224750'
    - '2013-01-08 04:09:19.224750'
  - - 93
    - 93
    - 15
    - '2013-01-08 04:09:19.257379'
    - '2013-01-08 04:09:19.257379'
  - - 94
    - 94
    - 15
    - '2013-01-08 04:09:19.287637'
    - '2013-01-08 04:09:19.287637'
  - - 95
    - 95
    - 3
    - '2013-01-08 04:09:19.317163'
    - '2013-01-08 04:09:19.317163'
  - - 96
    - 96
    - 13
    - '2013-01-08 04:09:19.341471'
    - '2013-01-08 04:09:19.341471'
  - - 97
    - 97
    - 21
    - '2013-01-08 04:09:19.397836'
    - '2013-01-08 04:09:19.397836'
  - - 98
    - 98
    - 21
    - '2013-01-08 04:09:19.418960'
    - '2013-01-08 04:09:19.418960'
  - - 99
    - 99
    - 4
    - '2013-01-08 04:09:19.500223'
    - '2013-01-08 04:09:19.500223'
  - - 100
    - 100
    - 17
    - '2013-01-08 04:09:19.523401'
    - '2013-01-08 04:09:19.523401'
  - - 101
    - 101
    - 22
    - '2013-01-08 04:09:19.560429'
    - '2013-01-08 04:09:19.560429'
  - - 102
    - 102
    - 17
    - '2013-01-08 04:09:19.584197'
    - '2013-01-08 04:09:19.584197'
  - - 103
    - 103
    - 15
    - '2013-01-08 04:09:19.607369'
    - '2013-01-08 04:09:19.607369'
  - - 104
    - 104
    - 23
    - '2013-01-08 04:09:19.639272'
    - '2013-01-08 04:09:19.639272'
  - - 105
    - 105
    - 21
    - '2013-01-08 04:09:19.662861'
    - '2013-01-08 04:09:19.662861'
  - - 106
    - 106
    - 17
    - '2013-01-08 04:09:19.683547'
    - '2013-01-08 04:09:19.683547'
  - - 107
    - 107
    - 17
    - '2013-01-08 04:09:19.706041'
    - '2013-01-08 04:09:19.706041'
  - - 108
    - 108
    - 13
    - '2013-01-08 04:09:19.738535'
    - '2013-01-08 04:09:19.738535'
  - - 109
    - 109
    - 17
    - '2013-01-08 04:09:19.760814'
    - '2013-01-08 04:09:19.760814'
  - - 110
    - 110
    - 21
    - '2013-01-08 04:09:19.783099'
    - '2013-01-08 04:09:19.783099'
  - - 111
    - 111
    - 7
    - '2013-01-08 04:09:19.804245'
    - '2013-01-08 04:09:19.804245'
  - - 112
    - 112
    - 14
    - '2013-01-08 04:09:19.827470'
    - '2013-01-08 04:09:19.827470'
  - - 113
    - 113
    - 17
    - '2013-01-08 04:09:19.848579'
    - '2013-01-08 04:09:19.848579'
  - - 114
    - 114
    - 14
    - '2013-01-08 04:09:19.870784'
    - '2013-01-08 04:09:19.870784'
  - - 115
    - 115
    - 14
    - '2013-01-08 04:09:19.893145'
    - '2013-01-08 04:09:19.893145'
  - - 116
    - 116
    - 17
    - '2013-01-08 04:09:19.911596'
    - '2013-01-08 04:09:19.911596'
  - - 117
    - 117
    - 12
    - '2013-01-08 04:09:19.934482'
    - '2013-01-08 04:09:19.934482'
  - - 118
    - 118
    - 17
    - '2013-01-08 04:09:19.956140'
    - '2013-01-08 04:09:19.956140'
  - - 119
    - 119
    - 7
    - '2013-01-08 04:09:19.980770'
    - '2013-01-08 04:09:19.980770'
  - - 120
    - 120
    - 13
    - '2013-01-08 04:09:20.056304'
    - '2013-01-08 04:09:20.056304'
  - - 121
    - 121
    - 7
    - '2013-01-08 04:09:20.084111'
    - '2013-01-08 04:09:20.084111'
  - - 122
    - 122
    - 13
    - '2013-01-08 04:09:20.156376'
    - '2013-01-08 04:09:20.156376'
  - - 123
    - 123
    - 13
    - '2013-01-08 04:09:20.178669'
    - '2013-01-08 04:09:20.178669'
  - - 124
    - 124
    - 14
    - '2013-01-08 04:09:20.196608'
    - '2013-01-08 04:09:20.196608'
  - - 125
    - 125
    - 18
    - '2013-01-08 04:09:20.215968'
    - '2013-01-08 04:09:20.215968'
  - - 126
    - 126
    - 13
    - '2013-01-08 04:09:20.236258'
    - '2013-01-08 04:09:20.236258'
  - - 127
    - 127
    - 13
    - '2013-01-08 04:09:20.256696'
    - '2013-01-08 04:09:20.256696'
  - - 128
    - 128
    - 17
    - '2013-01-08 04:09:20.276634'
    - '2013-01-08 04:09:20.276634'
  - - 129
    - 129
    - 13
    - '2013-01-08 04:09:20.295922'
    - '2013-01-08 04:09:20.295922'
  - - 130
    - 130
    - 13
    - '2013-01-08 04:09:20.318392'
    - '2013-01-08 04:09:20.318392'
  - - 131
    - 131
    - 13
    - '2013-01-08 04:09:20.343500'
    - '2013-01-08 04:09:20.343500'
  - - 132
    - 132
    - 13
    - '2013-01-08 04:09:20.364568'
    - '2013-01-08 04:09:20.364568'
  - - 133
    - 133
    - 13
    - '2013-01-08 04:09:20.385935'
    - '2013-01-08 04:09:20.385935'
  - - 134
    - 134
    - 13
    - '2013-01-08 04:09:20.404542'
    - '2013-01-08 04:09:20.404542'
  - - 135
    - 135
    - 17
    - '2013-01-08 04:09:20.424812'
    - '2013-01-08 04:09:20.424812'
  - - 136
    - 136
    - 17
    - '2013-01-08 04:09:20.444957'
    - '2013-01-08 04:09:20.444957'
  - - 137
    - 137
    - 13
    - '2013-01-08 04:09:20.464713'
    - '2013-01-08 04:09:20.464713'
  - - 138
    - 138
    - 13
    - '2013-01-08 04:09:20.489253'
    - '2013-01-08 04:09:20.489253'
  - - 139
    - 139
    - 17
    - '2013-01-08 04:09:20.509897'
    - '2013-01-08 04:09:20.509897'
  - - 140
    - 140
    - 7
    - '2013-01-08 04:09:20.536019'
    - '2013-01-08 04:09:20.536019'
  - - 141
    - 141
    - 15
    - '2013-01-08 04:09:20.559577'
    - '2013-01-08 04:09:20.559577'
  - - 142
    - 142
    - 7
    - '2013-01-08 04:09:20.588428'
    - '2013-01-08 04:09:20.588428'
  - - 143
    - 143
    - 16
    - '2013-01-08 04:09:20.644319'
    - '2013-01-08 04:09:20.644319'
  - - 144
    - 144
    - 13
    - '2013-01-08 04:09:20.665208'
    - '2013-01-08 04:09:20.665208'
  - - 145
    - 145
    - 13
    - '2013-01-08 04:09:20.740503'
    - '2013-01-08 04:09:20.740503'
  - - 146
    - 146
    - 13
    - '2013-01-08 04:09:20.761967'
    - '2013-01-08 04:09:20.761967'
  - - 148
    - 147
    - 15
    - '2013-01-08 04:09:31.936208'
    - '2013-01-08 04:09:31.936208'
  - - 149
    - 148
    - 24
    - '2013-01-08 04:09:45.034087'
    - '2013-01-08 04:09:45.034087'

---
blogs:
  columns:
  - id
  - title
  - content
  - created_at
  - updated_at
  - user_id
  records: 
  - - 1
    - コンテキストルート
    - ! '<span style="color:#FF6600">J2EE 環境では、1 台のサーバーインスタンスで実行している複数の独立した Web アプリケーションをサポートしているため、サーバーで実行している
      J2EE web アプリケーションのルートは、コンテキストルート (またはコンテキストパス) と呼ばれる固有の URL になります。J2EE アプリケーションサーバーは、URL
      の最初の部分 (http://hostnameの直後の部分) を使用して、受信要求する Web アプリケーションサービスを決定します。


      たとえば、ColdFusion MX を cfmx のコンテキストルートで実行している場合、http://localhost/cfmx/

      CFIDE/administrator/index.cfm の URL を使用する ColdFusion MX Administrator が表示されます。


      ほとんどの J2EE アプリケーションサーバーでは、各サーバーインスタンスのアプリケーションのコンテキストルートにスラッシュ (/) を使用できます。コンテキストルートを
      / に設定すると、ColdFusion MX の以前のリリースに最も近い機能がサポートされるため、CFM ページを Web サーバーから提供する場合に特に便利です。また、/
      のコンテキストルートを使用する場合、RDS Web アプリケーションは必要ありません。


      ColdFusion MX を EAR ファイルとしてデプロイする際には、インストールウィザードを実行するときに指定したコンテキストルートが使用されます
      (指定した値が META-INF/application.xml ファイルの context-root 要素にコピーされる)。ColdFusion MX
      を WAR ファイルとしてデプロイする際には、アプリケーションサーバー固有の機能を使用してコンテキストルートを定義します。


      メモ: サーバーインスタンス上で実行する各 Web アプリケーションには、それぞれ固有のコンテキストルートが必要です。JRun のデフォルト Web アプリケーションは、コンテキストルートとして
      / を使用します。このため、ColdFusion MX を JRun にデプロイして / をコンテキストルートに使用する場合は、"default-ear/META-INF/application.xml"
      ファイルを編集して、default-war アプリケーションを削除するか default-war のコンテキストルートを変更する必要があります。</span>


      とか・・・

      <span style="color:#00FF00">

      コンテキストルートとは、各アプリケーションごとに作成

      された領域のルートディレクトリです。

      コンテキストとはTomcatで管理される一まとまりのアプリ

      ケーションのことを言います。コンテキストには一まとまり

      のアプリケーションの動作に必要なJSP、サーブレット、

      HTML、画像、jar、web.xmlなどが含まれます。

      通常$CATALINA_HOME\webappsディレクトリ配下に設置されます。</span>


      つまり・・・127.0.0.1/hoge/index.jsp の「/hoge」の事をコンテキストルートって呼ぶ！・・・のかもね。

'
    - '2011-05-30 00:00:00.000000'
    - '2011-05-30 00:00:00.000000'
    - 1
  - - 2
    - ルートコンテキスト
    - ! 'ルートコンテキストとは，コンテキストルートが空文字""のコンテキストです。ルートコンテキストにwelcomeファイルを作成すると，「http://www.cosminexus.com/」のようなドメイン名だけのURLからJ2EEアプリケーションのトップページを表示できるようになります。

'
    - '2011-05-30 00:00:00.000000'
    - '2011-05-30 00:00:00.000000'
    - 1
  - - 3
    - Tomcat6のlibフォルダの場所とその他
    - ! "Tomcat5のcommon、shared、serverの各ディレクトリがTomcat6ではlibディレクトリに統合した（ようはここに全部Jarとか入れる）（さらに具体的にいうと${CATALINA_HOME}/libの事）\n\n
      \   libディレクトリの構成を変更する場合にはconf/catalina.propertiesファイルを書き換える\n    必要なJARおよびclassファイルはlibディレクトリに配置する\n
      \   全Webアプリケーションがwebappsディレクトリに配置された\n"
    - '2011-05-31 00:00:00.000000'
    - '2011-05-31 00:00:00.000000'
    - 1
  - - 4
    - Tomcatに作ったWebシステムを認識させる方法
    - ! "<span style=\"color:#FF00FF\">3.4 Tomcatとの統合\n\n    $TOMCAT_HOME/webapps/ディレクトリ内のサブディレクトリに、配備されているディレクトリ構造をコピーします。
      Tomcatは、あなたの選んだサブディレクトリ名をベースにして、アプリケーションをコンテキストパスに割り当てます。開発時にはこのテクニックがもっとも早く簡単なので。私たちは私たちが設定したbuild.xmlファイルで使用します。\n\n
      \   Tomcatのserver.xml設定ファイルに、<Context> エントリに追加する。この方法は以下で簡単に説明しますが、 $TOMCAT_HOME/webapps/ディレクトリ以外の場所に、あなたのWebアプリケーションのドキュメントルートを設定することができます。これを行うには、(Tomcat
      3.2では)以下の手順が必要です。 \n\nTomcatのserver.xmlファイルに新しく <Context> エントリを追加するためには、(Tomcat
      3.2では)以下のステップが必要です。\n\n    $TOMCAT_HOME/conf/server.xmlファイルをエディタで開きます。\n\n    ファイルの最後に移動します(最後にある<Context>要素の後ろです)。\n\n
      \   ガイドにある例を参照しながら、あなたのアプリケーション用に新しく<Context> 要素を追加します。以下の属性がサポートされています。\n        path.
      これはあなたのアプリケーションのためのコンテキストパスで、どのアプリケーションがこのリクエストを処理するために使用するかをTomcatに伝えるためのリクエストのURIのプレフィックスです。たとえば、パスを\"/catalog\"と設定した場合には、\"/catalog\"で始まるリクエストのURIは、すべてこのアプリケーションで処理します。この属性は、スラッシュ('/')文字で始まらなければなりません。\n
      \       docBase. このWebアプリケーションのためのドキュメント・ルートディレクトリです。これは、あなたのアプリケーションが含まれるディレクトリへの(Tomcatが起動されたディレクトリからの)相対パスか絶対パスです。
      Windowsプラットフォームでは、絶対パスを指定する場合にはドライブ文字とコロンを使用しなければなりません。 この属性は、必須です。\n        debug.
      デバッグ詳細レベル(\"0\"～\"9\")で、あなたのアプリケーションがインストールされ開始し、シャットダウンするときに、どれぐらいTomcatのログメッセージを出力するかを定義します。異なる値を指定しない限り、デフォルト値は\"0\"(最小ロギング)になります。\n
      \       reloadable. WEB-INF/classディレクトリのJavaクラスファイルやWEB-INF/libディレクトリのJARファイルの変更をTomcatに監視させたい場合には、これを\"true\"に設定します。変更を検出した場合には、この変更を反映させるために、Tomcatは自動的にあなたのアプリケーションをシャットダウンして、再ロードします。デフォルト値(\"false\")では、そのような変更は無視します。注:
      この機能は開発時にはとても便利ですが、調べるためにオーバーヘッドが発生します。この機能は、一般的に、配備された製品のアプリケーションでは使用しません。\n
      \       trusted. このアプリケーションがTomcat 3.2 内部クラスにアクセス要求がある場合に\"ture\"にセットします。通常これはTomcatとともに出荷される管理アプリケーションのために必要とされます。
      \n\n\n</span>\n\nようは$TOMCAT_HOME/webapps/に作ったwebシステムのフォルダをコピーするか、$TOMCAT_HOME/conf/server.xmlファイルに場所を明示的に記述せよってこと。（例：Context
      path=\"/index\" docBase=\"C:\\lain003\\workspace\\eclipseEE\\Transportation
      application\"）\n"
    - '2011-05-31 00:00:00.000000'
    - '2011-05-31 00:00:00.000000'
    - 1
  - - 5
    - Eclipse使用時のTomcatの止め方
    - ! '積年のバグがとれたのでメモ。


      Eclipseに導入したプラグイン上で動いているTomcatは「サーバを停止」というボタンでとめなければいけない。

      コンソール画面の「停止」ボタンはTomcatを動かしているJavaプログラムを強制終了させる方法と一緒である。

      これを使用した場合、Tomcatは謎のエラー（キャッシュが変に残ったり、XMLを読み込まなくなったり）にみまわれる。

'
    - '2011-06-01 00:00:00.000000'
    - '2011-06-01 00:00:00.000000'
    - 1
  - - 6
    - SQL文殴り書き
    - ! "プライマリキーの制約を削除する\nALTER TABLE [テーブル名] DROP PRIMARY KEY\n\nプライマリーとかnot nullとか\n
      \ CREATE TABLE 商品表\n  (\n     商品コード  INTEGER PRIMARY KEY ,\n     商品名      CHAR(16)
      UNIQUE NOT NULL ,\n     商品単価    INTEGER\n  ) ;\n\nあとSQLは統一規格はどこぞが発表しているが、発表が遅すぎたため、各種ベンダーが自己流に色々実装。完全な規格統一はされていない。\n"
    - '2011-06-09 00:00:00.000000'
    - '2011-06-09 00:00:00.000000'
    - 1
  - - 7
    - JNDIとDataSource
    - ! "JNDIとは・・・\nデータのまとまりを提供するもの？今回はDatasourceとともにしようした。\nJNDI用プロパティの設定のXML例を下記に記す\n<!--
      \n   - 「データベースがH2DBの場合の設定」\n   - 【記述書式】\n   - driverClassName=[ドライバ名称]\n   -
      username=[データベースログイン名称]\n   - password=[データベースログインパスワード]\n   - url=jdbc:h2:tcp://[データベースサーバIPアドレス]:[ポート番号]/[データベース名称]\n
      \  - 【設定例】\n-->\n<Context>\n  <Resource\n     name=\"jdbc/TerasolunaSampleDataSource\"\n
      \    type=\"javax.sql.DataSource\"\n     driverClassName=\"org.h2.Driver\"\n
      \    username=\"sa\"\n     password=\"sa\"\n     url=\"jdbc:h2:tcp://localhost/~/terasoluna\"\n
      \    maxIdle=\"2\"\n     maxWait=\"5000\"\n     maxActive=\"4\"/>\n</Context>\n\nDataSourceとは・・・\nDriverManager（例：DriverManager.getConnection(\"jdbc:sqlite:sample.db\")）の進化した手段、\nDriverManagerでの実装は現在推奨されておらず、こっちを使うことを進められている。\n具体的な実装方法としては、Javax.sql.DataSourceというインターフェスを継承したクラスを\n各ベンダー（オラクルとか）が作成して提供している。\nこのクラスの役割はデータベースに接続すること\n"
    - '2011-07-07 00:00:00.000000'
    - '2011-07-07 00:00:00.000000'
    - 1
  - - 8
    - DIコンテナについて
    - ! 'DIとは・・・

      Dependency Injectionの略で、直訳すると「依存性の注入」という意味。

      依存している物の対象はオブジェクト、注入は依存している処理を注入するということである。


      DIコンテナとは・・・

      オブジェクトの生成から、関連付けまで行う機能の総称

      オブジェクトの生成は~context.xml内の<bean id = ~>ではじまる例のあれ。

      関連付けは<bean id = a class = org.apache.spring.test>のclassの部分で行う。

      ようはこのDIを使えば、new test();とかかかなくていいし、interface z = new test2();

      みたいなnew するクラスを変えたい場合もxmlの変更するだけでいいんで便利だよねってこと


      SpringでのDIコンテナの使い方・・・

      Spring DIコンテナのクラス（XMLを読み込み、クラスとかつくるクラス？）は

      BeanFactoryかApplicationContextのどちらかのインターフェースを実装している。

      BeanFactoryはスタンドアローン用、ApplicationContextはBeanFactoryに国際化機能等を付け加えたバージョン。


      Factory実装クラス・・・

      XmlBeanFactory

      ApplicationContext実装クラス・・・

      ClassPathXmlAplicationContext

      FileSystemXmlApplicationContext

      XmlWebApplicationContext（こいつが主にWebアプリで使われる）


      AplicationContextとBeanFactoryの関係性とか・・・

      BeanFactoryにWeb用の機能を追加したもの。具体的にはメッセージ管理、イベント管理などの機能

      が追加された。どっちつかうかまよったらとりあえずこっちでおｋ

      （分かりやすいクラス図がのってるサイト：http://www.fireproject.jp/feature/spring/beans_context/beanfactory.html）

'
    - '2011-07-07 00:00:00.000000'
    - '2011-07-07 00:00:00.000000'
    - 1
  - - 9
    - DIコンテナについて2
    - ! "Javaファイル内で、JDIコンテナからBeanを引っ張りだす方法・・・\nApplicationContext ac = new ClassPathXmlApplicationContext(\"/example/bean.xml\");\nMyClass
      class = (MyClass)ac.getBean(\"myClass\");\n\n<bean>タグ内で新たなbeanを定義する方法・・・\n<bean
      id=\"outer\" class=\"...\">\n  <property name=\"target\">\n    <bean class=\"com.mycompany.PersonImpl\"><!--　新たなbean
      -->\n      <property name=\"name\"><value>Tony</value></property>\n      <property
      name=\"age\"><value>51</value></property>\n    </bean>\n  </property>\n</bean>\n"
    - '2011-07-07 00:00:00.000000'
    - '2011-07-07 00:00:00.000000'
    - 1
  - - 10
    - DIコンテナについて3（propertyに設定できるもの）
    - ! "DIコンテナのBean定義の<property>に設定できるもの・・・\nvalue=stringとかintとかに使う\nref=他のbeanクラス参照\nidref=?\nnull=明示的に何もないことを宣言するために書く\nbean=?\nutil:list=list型のsetに使う\nutil:map＝map型\nutil:set＝set型\nprop=Properties型\n\n以下にXMLの例をしめす\n\n<bean
      id=\"exampleBean\" class=\"com.techscore.spring.di.ExampleBean\">\n  <property
      name=\"list\">\n    <list>\n      <value>list 1</value>\n      <value>list 2</value>\n
      \   </list>\n  </property>\n  <property name=\"map\">\n    <map>\n      <entry
      key=\"mapKey1\">\n        <value>map 1</value>\n      </entry>\n      <entry
      key=\"mapKey2\">\n        <value>map 2</value>\n      </entry>\n    </map>\n
      \ </property>\n  <property name=\"set\">\n    <set>\n      <value>set 1</value>\n
      \     <value>set 2</value>\n    </set>\n  </property>\n  <property name=\"properties\">\n
      \   <props>\n      <prop key=\"propKey1\">prop 1</prop>\n      <prop key=\"propKey2\">prop
      2</prop>\n    </props>\n  </property>\n</bean>\n"
    - '2011-07-07 00:00:00.000000'
    - '2011-07-07 00:00:00.000000'
    - 1
  - - 11
    - DIコンテナについて4(autowire)
    - ! 'Bean定義のXMLの中で提供されるautowire機能を使うと、明示的に<property ~>とかかなくてもbeanで定義したseterにクラスがセットされる。autowireが提供する機能は色々あるがポピュラーなのがbyNameモード。これはセッターの名前とIDが一致するなら自動的にセッターにセットする（例：http://aotan2008.eco.coocan.jp/blog/archives/2009/06/17233402.php）。

      他には

      byType = セッターと同じ型のbeanを探し出しセットする。ただし探している型と同じものが複数定義されていた場合は例外を投げる。

      constructor = byTypeのコンストラクタ版。

      autodetect = byTypeとconstrutorの複合版。

      がある。


      Bean定義の継承方法・・・

      Bean定義を継承することができる具体的にはparent属性で親になるbeanを指定して継承。

      継承すると、定義したプロパティの内容(どんな値をセットしたか)を引き継いだりできる。

      また親の<property>で定義したセッターをオーバライドすることによって値を書き換えることこともできる。

'
    - '2011-07-07 00:00:00.000000'
    - '2011-07-07 00:00:00.000000'
    - 1
  - - 12
    - DIコンテナについて5(import)
    - ! 'よそのxmlで書かれたbean定義ファイルを引っ張ってくる方法・・・

      <import>つかえばおｋ。具体的には以下のような感じ

      <import resource="hoge/example.xml" />

'
    - '2011-07-07 00:00:00.000000'
    - '2011-07-07 00:00:00.000000'
    - 1
  - - 13
    - DIコンテナについて6(MesseageSourceについて)
    - ! "MesseageSourceの使い方とか定義の仕方・・・\nApplicationContextはMessageSourceインタフェースを実装している。\n定義方法はこんな感じ\n<bean
      id=\"messageSource\"\n\tclass=\"org.springframework.context.support.ResourceBundleMessageSource\">\n\t<property
      name=\"basenames\" value=\"application-messages, system-messages\" />\n</bean>\n\n実際にJavaファイル内での使い方・・・\nMessageSource
      ms =　new ClassPathXmlApplicationContext(\"com/example/bean.xml\");\nString msg
      =　ms.getMessage(\"hello\",new Object[] {\"spring\"}, null);\nSystem.out.println(msg);\n"
    - '2011-07-07 00:00:00.000000'
    - '2011-07-07 00:00:00.000000'
    - 1
  - - 14
    - AOPについて
    - ! "大まかなAOPの作成方法・・・\nまずAOPの適用対象になるインターフェースを作成し、実装クラスを作成する（SpringFrameworkはinterfaceで定義したメソッドしか、AOPの対象にできないという制約がある）\n次に、Adviceクラスを作成する。これにはSpringが提供しているインターフェースを継承する方法と全て自前で作成する方法の２種類がある。\nspringが提供するインターフェスは\nMethodInterceptor・・・Around
      Advice\nMethodBeforeAdvice・・Before Advice\nAfterReturningAdvice・・・After Returning
      Advice\nThrowsAdvice・・・After Throwing Advice\n\n次に、Adviceクラスを作成する。\nimport java.lang.refletct.Method;\n\npublic
      class AfterReturunalAdvice implements org.springframework.aop.AfterReturningAdvice{\n　　　　@override\n
      \   public void afterReturning(~){\n         System.out.println(after advice);\n
      \   }\n}\n\n次に、Adviceと適用対象を結び付けるためのBean定義ファイルを書く。具体的にはaop:advisorでどのようにポイントカットするのかと、アドバイスはどれにするのかを決定する。（ただし、advisorで指定できるのはspringのインターフェースをインプリメントしたクラスだけ。）\n以下具体XML例：\n<bean
      id=\"transactionInterceptor\" class=\"com.example.AopExAdvice\" />\n<!-- AOPの定義
      -->\n<!-- 下記で指定したパターンのBeanに対してインタセプタを適用する。 applicationContext.xmlで定義されたBeanのみ対象となるので注意すること。
      -->\n<aop:config>\n\t<aop:pointcut id=\"daoBeans\" expression=\"bean(*DAO)\"
      />\n\t<aop:advisor pointcut-ref=\"daoBeans\" advice-ref=\"transactionInterceptor\"
      />\n</aop:config>\n"
    - '2011-07-07 00:00:00.000000'
    - '2011-07-07 00:00:00.000000'
    - 1
  - - 15
    - Springの主な処理の流れ
    - ! '①まずJSPからDispatcherServletにリクエストがいく

      ②DispatcherServletがリクエストをHandlerMappingに渡して適切なControllerを選んでもらう

      HandlerMappingのxmlの中身はこんな感じ

      <beans>

      <bean id="handlerMapping"

      class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>

      <bean name="/editaccount.form"←このパスにSimpleFormCountorllerが適用される

      class="org.springframework.web.servlet.mvc.SimpleFormController">

      <property name="formView" value="account"/>

      <property name="successView" value="account-created"/>

      <property name="commandName" value="account"/>

      <property name="commandClass" value="samples.Account"/>

      </bean>

      </beans>

      ③そのコントローラでなんかする（何をするのかよくわからない・・・）

      自分なりの解釈

      ３−１、JSPからのリクエストをValidationにかける？・・・ここはかなり怪しい

      ３−２、DataBinderにリクエストを投げる

      ３−３、DataBinderはクライアントのリクエストを解析してCommandクラスに格納する

      ３−４、Commandクラスをビジネスロジックになげる

      ３−５、ビジネスロジックの結果を元にModelAndViewを作成し、DipatchSerVletに返す。

      ④ViewResolverを呼び出し、ビュー名をもとに実際のビューとマッピングとする。

'
    - '2011-07-07 00:00:00.000000'
    - '2011-07-07 00:00:00.000000'
    - 1
  - - 16
    - コントローラやCommnadクラスの具体的例とそれに関連するクラスの説明
    - ! 'コントローラの具体的なソース：

      public class CalculatorController extends SimpleFormController {//コントローラクラスを継承する


      protected Logic logic = null;//ロジックの定義


      public void setLogic(Logic logic) {

      this.logic = logic;

      }


      public ModelAndViewonSubmit(HttpServletRequest　request,HttpServletResponse　response,
      Object command, BindException　errors)throws Exception {

      CalculatorCommandcalculatorCommand= (CalculatorCommand)command;//ここでわたされきたCommandクラスを具体的なクラスに直す

      int numberA= calculatorCommand.getNumberA();//ここでCommandクラスから値を取り出してロジックに投げる準備をする

      int numberB= calculatorCommand.getNumberB();

      int answer= this.logic.calculate(numberA, numberB);//Commnadクラスのデータをビジネスロジック人がゲル

      ModelAndView mav= new ModelAndView(getSuccessView());//getSuccessView?

      mav.addObject("answer", answer);//作成されたModelAndViewにロジックの結果を格納する

      return mav;//ModelAndViewを返す

      }


      }




      Commnadクラス・・・

      クライアントからの入力データを格納するDTOクラス（入力クラスみたいなもの？）

      Commandクラスには、POJOで実装したクラスを使う。たとえば以下のようなもの

      public class Fortune {

      private String fortune = null;

      private String source = null;

      public void setFortune(String fortune) {

      this.fortune = fortune;

      }

      public String getFortune() {

      return this.fortune;

      }

      public void setSource(String source) {

      this.source = source;

      }

      public String getSource() {

      return this.source;

      }

      }



      ModelAndView・・・

      ビジネスロジックからの結果の示したデータと、遷移先ビュー名（どこにわたすか？）を一緒にしたクラス

      ビジネスロジックから渡ってきた結果を元に、ControllerがModelAndViewを作る。

      それをDispatcherServletに返す。


      ViewResolver・・・

      ModelAndViewを受け取ったDispatcherServletによって呼び出せれる。

      役割はControllerとViewの仲介役に入り、それぞれの独立性を高める。

      具体的な動きはビュー名(ModelAndViewで設定された)とビュー(xxx.jsp)をマッピングする。

      いかにXMLの例を示す。

      この例ではビュー名がtestだとすると、/WEB=INF/jsp/フォルダ内にあるtest.jspを取り出す。

      <bean id="viewResolver"

      class="org.springframework.web.servlet.view.InternalResourceViewResolver">

      <property name="prefix" value="/WEB-INF/jsp/"/>

      <property name="suffix" value=".jsp"/>

      </bean>

'
    - '2011-07-07 00:00:00.000000'
    - '2011-07-07 00:00:00.000000'
    - 1
  - - 17
    - Web.xmlについてと、その要素について説明
    - ! "web.xmlはDD(Deployment Descriptor)と呼ばれるものの一つで、 Webアプリケーションのインストール先\nの環境において、
      どのようなURLに対するリクエストがあったらServlet を呼び出すかを定義したり、\n各Servletに関する初期設定情報を記述します。また、Webアプリケーション内のコンテンツの認証の制御\nなども
      このファイルの設定によって可能になります。\nいかにweb.xmlの各要素の説明を行う。\n<listener>・・・\nリスナーとは、Webアプリケーションに何らかのイベントが発生した際にそれをプログラムに通知する\n機能です。この機能により、イベントの発生と連動したプログラムの実行を行うことができるように\nなります。具体例をいかに示す。\n<listener>\n<listener-class>\norg.springframework.web.context.ContextLoaderListener\n</listener-class>\n</listener>\n\n<context-param>・・・\nこのWebアプリケーション全体で共通の初期パラメタを記述できます。\nnameで指定された値が、valueで指定された値に置き換えられる。\nweb.xml
      ::\n<context-param>\n<param-name>webmaster</param-name>\n<param-value>myaddress@mycompany.com</param-value>\n</context-param>\nソースコード内
      ::\nString value = getServletContext().getInitParameter(\"webmaster\");//ここでmyaddress~を会得できる\n\n<servlet>・・・サーブレットに対して名前を付けることができる。あとのマッピングと合わせて使う。\n<servlet>\n
      \ <servlet-name>helloworld</servlet-name>・・・サーブレット名\n  <servlet-class>HelloWorld</servlet-class>・・・クラスファイル名\n</servlet>\n\n<servlet-mapping>・・・サーブレット名に対してURLパス名を指定する\n<servlet-mapping>\n
      \ <servlet-name>helloworld</servlet-name>・・・サーブレット名\n  <url-pattern>/helloworld</url-pattern>・・・呼び出す時につけるURLパス名\n</servlet-mapping>\n\n<jsp-config>タグ内の<taglib>の使い方・・・\n<taglib-url>・・・JSPプログラムのtaglibディレクティブのuri属性で指定した値を設定します。\n設定したURLに実際のファイルが配置されているわけではありません。このタグで設定した値は単に\ntaglibディレクティブのuri属性で指定された値と紐付けする値として使用されます。\n<taglib-location>・・・tldファイルの配置場所をコンテキストルートからの相対パスで指定します。\n"
    - '2011-07-07 00:00:00.000000'
    - '2011-07-07 00:00:00.000000'
    - 1
  - - 18
    - Springのその他の便利機能の概要
    - ! 'springその他機能・・・

      メッセージソース機能・・・メッセージをプロパティファイルに書いておけば、どこからともなく

      ひっぱてこれる。おそらくTerasolunaの機能はこれを拡張したものだろう。


      入力チェック機能・・・validateみたいな物


      クエリバインドエラー・・・リクエストデータのバインド（変換？結びつけ？明示的変換？）に

      失敗した場合はクエリバインドエラーが発生する。

      発生した場合はformView(どこにあるの？)に指定された転移さきに移動する。

      またその際に表示されるメッセージはどこぞのプロパティファイルに書かれている（多分・・・）


      コントローラ内での例外処理・・・

      Controllerの処理内で例外が発生した場合の遷移先ビュー名を規定することができる。


      フィルター・・・

      クライアントからのリクエストをサーブレットが受け取る前に、何らかの処理を行う為の機能

      ユーザ認証、ログの取得や文字コード変換などを行う。

      OncePerRequestFilter・・・フィルターの基底クラス。1リクエストにつき1回実行されることを保証する

      AbstractRequestLoggingFilter・・・リクエストログ取得用の抽象クラス

      Log4jNestedDiagnosticContextFilter・・・リクエストログをLog4jを使って出力する

      CharacterEncodingFilter・・・リクエストの文字コード変換を行う

      などの機能をSpringが提供している。

'
    - '2011-07-07 00:00:00.000000'
    - '2011-07-07 00:00:00.000000'
    - 1
  - - 19
    - JRE構築方法
    - ! 'http://libro.tuyano.com/index3?id=87002

      上をみてがんばる。


      注意点としては以下の点が上げられる

      １、http://dl.google.com/eclipse/plugin/3.5　って書いてある場所の数字の部分はeclipseのバージョンにあわせて変更しなければいけない


      ２、java1.6以上でしか動かないので、eclipseのプロジェクトのプロパティで明示的に設定する必要性がある（デフォルトは1.5の場合もあるので）。


      ３、JREはeclipse上でシュミレーションできるし、ページを表示する際もローカルホストにアクセスするが、必要なlibは何気にインターネットからとってきている。つまりインターネットがないとシュミレーションできないし、どのように動いているか(例えばjettyのソースを追跡する）を見ようとしても、そもそもソースがないので見れない。

'
    - '2011-10-02 00:00:00.000000'
    - '2011-10-02 00:00:00.000000'
    - 1
  - - 20
    - TomcatをWTPで作成する際に気をつけること
    - ! 'http://www.javaroad.jp/bbs/answer.jsp?q_id=2011100305424685

      上記参照。


      上に書いてない注意点としては

      動的Webプロジェクトを作成する際に「ターゲットランタイム」という項目がある。ここがデフォルトでは指定されていないが、動かすTomcatに対応したバージョンを指定しないと、おそらく動いてくれない。

'
    - '2011-10-04 00:00:00.000000'
    - '2011-10-04 00:00:00.000000'
    - 1
  - - 21
    - struts2.2.3.1環境構築方法
    - ! '実にめんどくさかった・・・

      http://codezine.jp/article/detail/2296?p=3

      基本は上の記事を参考にする。


      ただしいれるlibは以下のとおり

      ・commons-fileupload-1.2.2.jar

      ・commons-io-2.0.1.jar

      ・commons-lang-2.5.jar

      ・commons-logging-1.1.1.jar

      ・freemarker-2.3.16.jar

      ・javassist-3.11.0.GA.jar

      ・ognl-3.0.1.jar

      ・struts2-core-2.2.3.1.jar

      ・xwork-core-2.2.3.1.jar


      他のＸＭＬはそのまんま、ただしStruts.xmlのアクションタグのclass属性はプロジェクト内にそうように合わせること。

'
    - '2011-10-04 00:00:00.000000'
    - '2011-10-04 00:00:00.000000'
    - 1
  - - 22
    - バグ取テクニック　総集編
    - ! '・causd by

      EclipseのログでよくみるCausud by~　これはバグの発生元をしめす！・・・らしい。よくわからんけどthrowを書いた場所ってことかな？で一番上に来るのがcatchされた場所って事なんかもしれない。

      なので一番上をみてわからんかったら、一番下のcausd byのログを呼んでみること！←ここ重要


      ・枯れてないフレームワークでの環境構築時の注意点

      -バージョンが違うと設定や必要なlibも変わってくる可能性がある。バージョンでぐぐってみると幸せになれるかもね。

'
    - '2011-10-04 00:00:00.000000'
    - '2011-10-04 00:00:00.000000'
    - 1
  - - 23
    - ! '# Struts2の動き（メモ）'
    - ! 'http://codezine.jp/article/detail/2296?p=2

      上記を元にこのページを書いている。


      いかに上記のページのプログラムの流れを書く。なお正確性は保障されない。というか間違ってる。きっと・・・。


      １）ＪＳＰのページから？？？.actionという引数を

      ２）Web.xmlに書かれているorg.apache.struts2.dispatcher.FilterDispatcherに対して渡す。←何をしているかは現在のところ不明。

      ３）struts.xmlが参照され、その中のactionタグに書かれているクラスを呼び出す。

      ４）このクラスの中で、jspのページに書かれている内容を変更したり計算したりして、return successのようなStruts1と同様のものをstruts.xmlに再度戻す

      ５）struts.xmlは返された文字列を元にresultタグ内に記述されたjspを呼び出す。

      ６）jspを表示する。

'
    - '2011-10-04 00:00:00.000000'
    - '2011-10-04 00:00:00.000000'
    - 1
  - - 24
    - ! '# Struts2の動き（メモ）'
    - ! "http://codezine.jp/article/detail/2296?p=2\nいかに上記のページのプログラムの流れを書く。なお正確性は保障されない。というか間違ってる。きっと・・・。\n\n１）ＪＳＰのページから？？？.actionという引数を\n２）Web.xmlに書かれているorg.apache.struts2.dispatcher.FilterDispatcherに対して渡す。←何をしているかは現在のところ不明。\n３）struts.xmlが参照され、その中のactionタグに書かれているクラスを呼び出す。\n４）このクラスの中で、jspのページに書かれている内容を変更したり計算したりして、return
      successのようなStruts1と同様のものをstruts.xmlに再度戻す\n５）struts.xmlは返された文字列を元にresultタグ内に記述されたjspを呼び出す。\n６）jspを表示する。\n\nstruts2のバリデーションについて\n\n・バリデーションのやり方は３種類ある？\n１、xmlファイル(tranzaction_xml)を用意してそれに書く方法\n２、jspファイルでs;formタグの
      validate=\"true\"を設定する方法（ただし、ここの入力フォームごとにチェックするしないっていうのをわけることはできない）\n３、javaファイルで設定する方法\n３−１、３の設定方法では定義したJavaファイルにあるすべてのActionメソッドに対して定義したバリデーションがおこなわれてしまう。そこで@SkipValidationをつけることでそのActionメソッドに対してはバリデーションが行われなくなる。\n\n・バリデーションの結果エラーになった場合は？\nエラーになった場合は、Actionメソッドは実行されずに、代わりにinputという文字列を返す。つまり、エラー後の遷移はinput~みたいにstruts.xmlで書けばよいのだ。\n\n\n\n\nhttp://codezine.jp/article/detail/2391\nいかに上記のページのプログラムを実行する際の注意点を記述する。\n\n1)上記のページに書かれているファイル構成\n
      <ContextRoot>\n ├ /WEB-INF\n │ ├ /classes\n │ │ ├ /part2\n │ │ │ └ Research.class\n
      │ │ └ struts.xml\n │ ├ /lib\n │ └ web.xml\n ├ /part2\n │ ├ research.jsp\n │
      └ confirm.jsp\n └ index.jsp\nと書いてあるがContext-Rootってwebappsや、WebCountentのことらしい。\n"
    - '2011-10-05 00:00:00.000000'
    - '2011-10-05 00:00:00.000000'
    - 1
  - - 25
    - ! '# Struts2：CodeZineのStruts2入門を読み進める際のメモ'
    - ! "■http://codezine.jp/article/detail/2296?p=2\nいかに上記のページのプログラムの流れを書く。なお正確性は保障されない。というか間違ってる。きっと・・・。\n\n１）ＪＳＰのページから.actionという引数を\n２）Web.xmlに書かれているorg.apache.struts2.dispatcher.FilterDispatcherに対して渡す。\n３）struts.xmlが参照され、その中のactionタグに書かれているクラスを呼び出す。\n４）このクラスの中で、jspのページに書かれている内容を変更したり計算したりして、return
      successのようなStruts1と同様のものをstruts.xmlに再度戻す\n５）struts.xmlは返された文字列を元にresultタグ内に記述されたjspを呼び出す。\n６）jspを表示する。\n\n■http://codezine.jp/article/detail/2391\n上記のページのプログラムを実行する際の注意点を記述する。\n1)上記のページに書かれているファイル構成\n
      <ContextRoot>\n ├ /WEB-INF\n │ ├ /classes\n │ │ ├ /part2\n │ │ │ └ Research.class\n
      │ │ └ struts.xml\n │ ├ /lib\n │ └ web.xml\n ├ /part2\n │ ├ research.jsp\n │
      └ confirm.jsp\n └ index.jsp\nと書いてあるがContext-Rootってwebappsや、WebCountentのことらしい。\n\n■struts2のバリデーションについて\n\n・バリデーションのやり方は３種類ある？\n１、xmlファイル(tranzaction_xml)を用意してそれに書く方法\n２、jspファイルでs;formタグの
      validate=\"true\"を設定する方法（ただし、ここの入力フォームごとにチェックするしないっていうのをわけることはできない）\n３、javaファイルで設定する方法\n３−１、３の設定方法では定義したJavaファイルにあるすべてのActionメソッドに対して定義したバリデーションがおこなわれてしまう。そこで@SkipValidationをつけることでそのActionメソッドに対してはバリデーションが行われなくなる。\n\n・バリデーションの結果エラーになった場合は？\nエラーになった場合は、Actionメソッドは実行されずに、代わりにinputという文字列を返す。つまり、エラー後の遷移はinput~みたいにstruts.xmlで書けばよいのだ。\n\n・自分でバリデーションを定義したり、エラーメッセージを特定のファイルにまとめたりできる\nここはStruts
      2入門（3）～バリデーションの仕組みを理解する（後編）～ を参照。\n\n■Struts2には自作でバリデーション（Springで提供していたやつ）つくったり、デフォルトで便利なバリデーションが用意されている\n詳しくはStruts
      2入門（4）参照。また提供されているバリデーションの機能一覧はhttp://codezine.jp/article/detail/3264にかいてある\n\n■別のＵＲＬに飛ばしたり、htmlではなくtext形式で出力したりする方法\nstruts.xmlのresultタグにいろいろ設定できるらしい。詳しくはStruts
      2入門（5）参照。\n\nクラス名が「Action」で終わっているクラス\n"
    - '2011-10-07 00:00:00.000000'
    - '2011-10-07 00:00:00.000000'
    - 1
  - - 26
    - Struts2：CodeZineのStruts2入門を読み進める際のメモ
    - ! "■http://codezine.jp/article/detail/2296?p=2\nいかに上記のページのプログラムの流れを書く。なお正確性は保障されない。というか間違ってる。きっと・・・。\n\n１）ＪＳＰのページから.actionという引数を\n２）Web.xmlに書かれているorg.apache.struts2.dispatcher.FilterDispatcherに対して渡す。\n３）struts.xmlが参照され、その中のactionタグに書かれているクラスを呼び出す。\n４）このクラスの中で、jspのページに書かれている内容を変更したり計算したりして、return
      successのようなStruts1と同様のものをstruts.xmlに再度戻す\n５）struts.xmlは返された文字列を元にresultタグ内に記述されたjspを呼び出す。\n６）jspを表示する。\n\n■http://codezine.jp/article/detail/2391\n上記のページのプログラムを実行する際の注意点を記述する。\n1)上記のページに書かれているファイル構成\n
      <ContextRoot>\n ├ /WEB-INF\n │ ├ /classes\n │ │ ├ /part2\n │ │ │ └ Research.class\n
      │ │ └ struts.xml\n │ ├ /lib\n │ └ web.xml\n ├ /part2\n │ ├ research.jsp\n │
      └ confirm.jsp\n └ index.jsp\nと書いてあるがContext-Rootってwebappsや、WebCountentのことらしい。\n\n■struts2のバリデーションについて\n\n・バリデーションのやり方は３種類ある？\n１、xmlファイル(tranzaction_xml)を用意してそれに書く方法\n２、jspファイルでs;formタグの
      validate=\"true\"を設定する方法（ただし、ここの入力フォームごとにチェックするしないっていうのをわけることはできない）\n３、javaファイルで設定する方法\n３−１、３の設定方法では定義したJavaファイルにあるすべてのActionメソッドに対して定義したバリデーションがおこなわれてしまう。そこで@SkipValidationをつけることでそのActionメソッドに対してはバリデーションが行われなくなる。\n\n・バリデーションの結果エラーになった場合は？\nエラーになった場合は、Actionメソッドは実行されずに、代わりにinputという文字列を返す。つまり、エラー後の遷移はinput~みたいにstruts.xmlで書けばよいのだ。\n\n・自分でバリデーションを定義したり、エラーメッセージを特定のファイルにまとめたりできる\nここはStruts
      2入門（3）～バリデーションの仕組みを理解する（後編）～ を参照。\n\n■Struts2には自作でバリデーション（Springで提供していたやつ）つくったり、デフォルトで便利なバリデーションが用意されている\n詳しくはStruts
      2入門（4）参照。また提供されているバリデーションの機能一覧はhttp://codezine.jp/article/detail/3264にかいてある\n\n■別のＵＲＬに飛ばしたり、htmlではなくtext形式で出力したりする方法\nstruts.xmlのresultタグにいろいろ設定できるらしい。詳しくはStruts
      2入門（5）参照。\n\n■ゼロコンフィグレーション\nプログラムの流れはhttp://codezine.jp/article/detail/3837?p=2に書いてある\n１）JSPからhoge.action（正確にはhttp://localhost:8080/ZeroConfTest/hoge.action）というURLにアクセスする。この際.actionは省略できる。\n２）するとHogeAction.javaというクラスをactionと名前がついている（ほかにもstrutsなどいろいろある）パッケージから探し始める。\n3)みつかるとHogeActionを実行する。\n4)そのクラスがsuccessを返した場合、Hoge.jsp(Actionクラスの名前と紐付けられている)というファイルを探して実行する。\n"
    - '2011-10-07 00:00:00.000000'
    - '2011-10-07 00:00:00.000000'
    - 1
  - - 27
    - JavaScriptの＝は参照渡しか値渡しか。
    - ! 'document.getElementById(''latitude'').innerHTML = ''helo'';


      これと


      var inner =　document.getElementById(''latitude'').innerHTML;

      inner = ''helo'';


      この二つは挙動がことなる。具体的には後ろのやり方ではHTMLは変更されない。

      このことから、JavaScriptの＝はアドレスをコピーするのではなく、値をコピーするだけであるといえる。

'
    - '2011-10-08 00:00:00.000000'
    - '2011-10-08 00:00:00.000000'
    - 1
  - - 28
    - GitとGithubのWindowsでの環境構築方法
    - ! 'http://www.koikikukan.com/archives/2010/08/04-235555.php

      ここを見る。とてもわかりやすい。

'
    - '2011-10-11 00:00:00.000000'
    - '2011-10-11 00:00:00.000000'
    - 1
  - - 29
    - GAE上のデータストアとJDOの使い方
    - ! 'http://libro.tuyano.com/index3?id=112001・・・①

      基本は上記のページをベースにしつつ、わからないことがあれば

      http://code.google.com/intl/ja/appengine/docs/java/datastore/・・・②

      を参照する。


      ここからさきはGoogle Plugin for Eclipseを使っていないものとする。（詳しくは②参照）

      ①まず先んじ「App Engine Java SDK」からＪＲＥをダウンロードしていくる。

      ②次にデータストアに永続化したいオブジェクトを定義する。この際にアノテーションを記述しなければならない。

      ③PersistenceManagerFactoreからデータを取得する。この際Per~は作成コストが高いためシングルトンで管理したほうがよい。

'
    - '2011-10-14 00:00:00.000000'
    - '2011-10-14 00:00:00.000000'
    - 1
  - - 30
    - Javaのstaticメンバ変数はいつ初期化されるか
    - ! "public static final int a = hoge();\n\n    private static int hoge(){\n        System.out.println(\"a\");\n
      \   \treturn a;\n    }\n\n    private PMF(){}\n\n    public static PersistenceManagerFactory
      getPMF(){\n    \tSystem.out.println(a);\n    \treturn null;\n    }\n\nたとえばこんなプログラムが書いてあるクラスがあっとして、このメンバ変数であるaはいつ初期化されるのか、つまりaがいつ表示されるのかというと、このgetPMFが呼ばれたときである。\n\nこのことからstaticなメンバ変数は、定義したクラスのメソッドが外部から呼ばれたときに初期化されるものであると推測される。コンパイル時じゃないんだね。\n"
    - '2011-10-14 00:00:00.000000'
    - '2011-10-14 00:00:00.000000'
    - 1
  - - 31
    - maven2の使い方、インストールの仕方
    - ! 'http://www.jxpath.com/maven2/step1/index.html

      上記参照。

'
    - '2011-10-19 00:00:00.000000'
    - '2011-10-19 00:00:00.000000'
    - 1
  - - 32
    - Struts2のソースのコンパイルの仕方
    - ! 'http://www.javaroad.jp/bbs/answer.jsp?q_id=20111017002347699

      上記参照。


      struts2はオープンソースなので、ソースコードが公開されている。

      ならばコンパイル、ビルドも簡単！・・・そう思っていた時期が私にもありました。

      失敗談は上記のＵＲＬを参照してもらうとして、具体的にstruts2をコンパイルするまでの流れを説明する


      1)struts2のソースをapacheからダウンロードしてくる(SVNからとってくるのはダメ。pom.xmlが入っていない)

      2)srcの直下にpom.xmlがはいっているので、ここのdependenciesをコピペする。

      3)maven2で作った適当なダミープロジェクトを作って、それのpom.xmlに上記のdependenciesを追加する。

      4)ダミープロジェクトをコンパイルして、その中から上記で追加したdependenciesのjarを確保する。

      5)次にstruts2のサイトを参照して、SVNをＵＲＬをゲット、ＳＶＮからチェックアウトしてソースを入手する。（なぜこんなことをするかというと普通にソースを落とした場合ディレクトリの構造がおかしいので、javaのpackage宣言と合わない）

      6)eclipseに5のソースをインポートする。

      7)eclipseに「外部jarの追加」で4で確保したjarを追加する。


      以上。

'
    - '2011-10-19 00:00:00.000000'
    - '2011-10-19 00:00:00.000000'
    - 1
  - - 33
    - pom.xmlのdependenciesについて
    - ! 'http://www.jxpath.com/maven2/step2/pom.html

      基本的なpom.xmlの中身は上記参照。


      dependenciesに書かれているjarファイルはどこからやってくるのだろうか？

      それはおそらくhttp://mvnrepository.com/このサイトからやってくる。

      このサイトにたいしてartifactIdタグに記述されている内容で検索するとversionの一覧と、そのjarが出てくる。

'
    - '2011-10-19 00:00:00.000000'
    - '2011-10-19 00:00:00.000000'
    - 1
  - - 34
    - eclipse3.5のjarとソースの結びつけ
    - ! 'http://96inu.blogspot.com/2009/09/eclipse.html

      上記参照


      eclipse3.5ではなぜか「ソースの追加」のボタンがない。そのため「ソースルックアップ・パスの編集」を行う必要性がある。

      やり方は上記のURL参照

'
    - '2011-10-22 00:00:00.000000'
    - '2011-10-22 00:00:00.000000'
    - 1
  - - 35
    - Struts2をGAE上で動かす際にはまったこと
    - ! "GAEでStruts2を動かそうとしたが、なぜかトップページにアクセスできずにエラーがでる。\nたとえばEclipse上のシュミレーターを使って、http://localhost:8888/にアクセスして、トップページにアクセスすると\nThere
      is no Action mapped for namespace / and action name . - [unknown location]\n\tat
      com.opensymphony.xwork2.DefaultActionProxy.prepare(DefaultActionProxy.java:189)\n\tat
      org.apache.struts2.impl.StrutsActionProxy.prepare(StrutsActionProxy.java:61)\n\tat
      org.apache.struts2.impl.StrutsActionProxyFactory.createActionProxy(StrutsActionProxyFactory.java:39)\n\tat
      com.opensymphony.xwork2.DefaultActionProxyFactory.createActionProxy(DefaultActionProxyFactory.java:58)\n\tat
      org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:488)\n\tat
      org.apache.struts2.dispatcher.ng.ExecuteOperations.executeAction(ExecuteOperations.java:77)\n\tat
      org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:91)\n\tat
      org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\n\tat
      com.google.appengine.tools.development.HeaderVerificationFilter.doFilter(HeaderVerificationFilter.java:35)\nこんなエラーがでる。\nそこでまずはStruts2で上位に引っかかっているtorg.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:91)\nここの部分のソースをJetty(GAEはJettyを使用している)とTomcat(こっちは正常に動作する)でブレークポイントを入れて比較してみた。そうすると一部の値（詳しくは後述のメモ参照）がおかしいことがわかった。これを元に深堀していくと、「request.getServletPath();」このメソッドの戻り値が2つのサーバで違うことがわかった（<span
      style=\"color:#FF3333\">Tomcatはindex.jspを返し、Jettyではnullを返す</span>）。\n\nそこで問題をよりシンプルにするために、次はjava.servlet.filterを使用して（トップページにアクセスする際の結果が違うためフィルターを使う必要性がある）簡単なアプリケーションを作成してみた。そして内部でrequest.getServletPath();を呼び出すと確かに結果が違う。\n\nこれを元にいろいろ試行錯誤してみた結果、Tomcatがおせっかいなのではないかという結論にたっした。\nというのもトップページにアクセスする際のＵＲＬはhttp://localhost:8888/のためそもそも<span
      style=\"color:#FF0000\">Tomcat上でgetServletPath()を呼び出して「index.jsp」が返ってくるおかしい</span>のだ。ここから先は検証していないがおそらくTomcatの内部でrequestに対して、index.jspの情報を付加しているのだろう。しかしJettyではそんなことをしないため、値が取れないのだ。\n\n長くなったが、結論としてはGAEでトップページにアクセスする際は「http://localhost:8888/index.jsp」というようにどこにアクセスするかを宣言してやる必要性がある。\n\n\n&#45;&#45;&#45;&#45;&#45;--以下バグ取の際のメモ&#45;&#45;&#45;&#45;&#45;---\n今なにが知りたいのか？\njettyでなぜエラーになるのか知りたい。\nそれはxmlで指定したフィルターが動作しているからではないか？\nそれをいってしまえば全てのURLに対してfileterが作動しているはずではないか？\nそれもそうだ。Tomcatで動かした場合はxmlで指定したfileterは動作していないのか？\ntomcat:chain.doFilter(request.response)がよびだされている。\njetty:Mappingがnullじゃない。だからchain.doFileterまでたどりつかずに、execute.executeActionが呼ばれている。おそらくこのexcuteActionとうのはゼロコンフィグレーションをマッピングするためのクラスだろう。そこに変なデータがはいっているからエラーとなる。\nということは原因はprepare.findActionMapping(request,
      response, true);こいつがnullかえすかnullを返さないかの、一点に集約されるというわけだ。\nならば先んじてjettyでそいつの内部がどうなっているか見てみよう。\ndispatcher.getContainer().getInstance(ActionMapper.class).getMapping(request,
      dispatcher.getConfigurationManager());こいつがmappingにデータを代入している。\nいろいろなインターフェースが呼ばれているが最終的にはDefaultActionMapper.getMappingが呼ばれている\nこいつはtomcatの場合は、uriにindex.jspが代入された後、最後はnullを代入されて消えている。だが、jettyの場合は消えてない。\nこの２つの差異はどこからうまれているかというとgetUri(request)という処理が返す値が異なるためである。\ngetUri何者なんだ・・・\nとまあなんだかんだあって最終的にはStruts2のRequestUtils.getServletPath内のrequest.getServletPath();が原因であることがわかった。Tomcatの場合は\"index.jsp\"と返しているが、jettyの場合は\"/\"しか返していない。\nこの問題はトップページにアクセスする際に明示的にindex.jspを書けば解決するのだが・・・。\n\njettyではgetServletPathがまずいことはわかった。\nではこの問題を再現し、原因を突き止めよう。\n再現するためにまずjettyのweb.xmlでフィルタリングをかけるサンプルプログラムを作成する。\nこの中でgetServeltPathを呼び出して問題を再現するのだ。\nというわけでgetSを呼び出してそれに対してブレークポイントを作成した。\nそして中身を追っていくと、TomcatのRequest.getServletPathがよびだされていることがわかった。\nこの中ではreturn
      (mappingData.wrapperPath.toString());という一文が実行されているのみである。\nじゃあこのmappingDataはどこで設定されているのか？\nsetContextPath　setPathInfo　setServletPath　３つあるが最後のやつがどうみても怪しい。\nいろいろ見た結果どうもmappingDataはページ更新時に変更されているらしい（つまりxml等のローカルのファイルからはとってきてないみたいだ）\nでもRequestの内容が違うということは、Tomcatが何か裏でやっているのだろう。\n"
    - '2011-10-23 00:00:00.000000'
    - '2011-10-23 00:00:00.000000'
    - 1
  - - 36
    - SQLServer2008インストール方法
    - ! 'http://awoni.net/fc/sql-server-2008-express/

      上記参照


      ただし途中ででてくるユーザアカウントの設定の際にしようする、Network Serviceなどについては

      http://www.atmarkit.co.jp/fwin2k/win2ktips/1159svcacnt/svcacnt.html

      参照。

      上記の内容をまとめるとこのアカウントはWindows OSがサービスを起動するための専用アカウントとして提供しているものであるということだ。

'
    - '2011-11-14 00:00:00.000000'
    - '2011-11-14 00:00:00.000000'
    - 1
  - - 37
    - mysqlのインストールとＧＵＩ管理ツールとｊｄｂｃとiBatis
    - ! "mysqlのインストールは\nhttp://www.dbonline.jp/mysqlinstall/を参照\n\nＧＵＩ管理ツールは\nhttp://dev.mysql.com/downloads/gui-tools/5.0.htmlからダウンロード。\nこのツールの使い方は\nhttp://www.geocities.jp/xmldtp/my_guitool.htmを参照。\n\njdbcつなぐまでは\nhttp://www.javadrive.jp/servlet/database/index1.htmlここからjarをダウンロードして、\nhttp://www.javadrive.jp/servlet/database/index3.htmlを参考にしてソースを書く。\n\niBatisの導入、設定は\nhttp://d.hatena.ne.jp/absj31/20101011/1286811656を参照。\n\n\n以下はmySqlへJDBCから接続した際の実際のソース\n\t\t\tConnection
      conn = null;\n\t\t\tString url = \"jdbc:mysql://localhost/mysql\";\n\t\t\tString
      user = \"root\";\n\t\t\tString password = \"\";\n\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\").newInstance();\n\n\t\t\ttry{\n\t\t\t\tconn
      = DriverManager.getConnection(url, user, password);\n\n\t\t\t\t// ３．SQL ステートメント・オブジェクトの作成\n\t\t\t\tStatement
      stmt = conn.createStatement();\n\t\t\t\t// ４．SQL ステートメントの発行\n\t\t\t\tResultSet
      rs = stmt.executeQuery(\"SELECT * from testtable\");\n\t\t\t\t// ５．結果の出力\n\t\t\t\twhile
      (rs.next()) {\n\t\t\t\t\tSystem.out.println(rs.getString(\"name\"));\n\t\t\t\t}\n\n\t\t\t\t//
      ６．データベースのクローズ\n\t\t\t\trs.close();\n\t\t\t\tstmt.close();\n\t\t\t\tconn.close();\n\t\t\t}
      catch (SQLException ex) {\n\t\t\t\t// handle any errors\n\t\t\t\tSystem.out.println(\"SQLException:
      \" + ex.getMessage());\n\t\t\t\tSystem.out.println(\"SQLState: \" + ex.getSQLState());\n\t\t\t\tSystem.out.println(\"VendorError:
      \" + ex.getErrorCode());\n\t\t\t}\n"
    - '2012-01-12 00:00:00.000000'
    - '2012-01-12 00:00:00.000000'
    - 1
  - - 38
    - iBatisでSELECT文に対して、複数の値を渡す方法
    - ! 'はまったのでメモ。

      http://m97087yh.seesaa.net/article/111055438.html

      上記参照。

      平たくまとめると、複数の値をiBatisに渡したかったら、HashMapを使うか、Beanクラスを使えって事。

'
    - '2012-01-19 00:00:00.000000'
    - '2012-01-19 00:00:00.000000'
    - 1
  - - 39
    - mysqlが起動しない
    - ! 'どはまりしたのでメモ。


      mySQLを起動しようとするとエラーが出る。


      120126 12:40:58 [Note] Plugin ''FEDERATED'' is disabled.

      MySQL: Table ''mysql.plugin'' doesn''t exist・・・①

      120126 12:40:58 [ERROR] Can''t open the mysql.plugin table. Please run mysql_upgrade
      to create it.・・・②

      120126 12:40:58 InnoDB: The InnoDB memory heap is disabled

      120126 12:40:58 InnoDB: Mutexes and rw_locks use Windows interlocked functions

      120126 12:40:58 InnoDB: Compressed tables use zlib 1.2.3

      120126 12:40:58 InnoDB: Initializing buffer pool, size = 107.0M

      120126 12:40:58 InnoDB: Completed initialization of buffer pool

      InnoDB: Error: log file .\ib_logfile0 is of different size 0 5242880 bytes

      InnoDB: than specified in the .cnf file 0 56623104 bytes!

      120126 12:40:58 [ERROR] Plugin ''InnoDB'' init function returned error.

      120126 12:40:58 [ERROR] Plugin ''InnoDB'' registration as a STORAGE ENGINE failed.

      120126 12:40:58 [ERROR] Unknown/unsupported storage engine: INNODB

      120126 12:40:58 [ERROR] Aborting


      ①はデフォルトで出るから問題なし。（セキリティの問題で廃止になったんだとか）

      ②は一見するとtableが開けないから、データベースの指定が間違っている気がするが、これはmySQLにデフォルトで定義している既存のテーブルを削除すると出る。

      これを解決するためには、おとなしく新しいＤＢを作ってコピーしたほうが早いだろう。


      以下その再のやりとり（mySQLの設定とか、オプションとかのことも書いてる）

      http://oshiete.goo.ne.jp/qa/7261360.html

'
    - '2012-01-26 00:00:00.000000'
    - '2012-01-26 00:00:00.000000'
    - 1
  - - 40
    - ! '# iBatisのデータの戻り値についての考察'
    - ! '今回は、iBtaisの戻り値の挙動について色々はまったのでメモ。



      前回iBatis導入の際の参考ＵＲＬとしてあげた

      http://d.hatena.ne.jp/absj31/20101011/1286811656を参考に説明する。


      Person.xmlに書かれているresultClassに基本的に結果がキャストされて返ってくる。

      ま

'
    - '2012-01-26 00:00:00.000000'
    - '2012-01-26 00:00:00.000000'
    - 1
  - - 41
    - Windows+java上でのmemcachedの構築方法
    - ! 'memCached本体は

      http://www.urielkatz.com/archive/detail/memcached-64-bit-windows/から落とす（６４bitの場合)

      インストールの仕方は

      memcached.exe -d install

      memcached.exe -d start　を実行する


      java上で動作させるために

      https://github.com/gwhalin/Memcached-Java-Client/downloadsを落とす。

      これの使い方は

      http://news.mynavi.jp/articles/2008/06/10/memcached/001.htmlを参照する(なおここで書かれている期限付きのデータ保存方法は間違っている。詳しくは後述の記事を参照)

'
    - '2012-01-31 00:00:00.000000'
    - '2012-01-31 00:00:00.000000'
    - 1
  - - 42
    - memCachedClientForJavaを使って、期限付きのデータを保存する際の注意点
    - ! '前回memCachedClientForJavaの使いかたは

      http://news.mynavi.jp/articles/2008/06/10/memcached/001.htmlを見ればいいといったが、ここでは一部嘘が書いてある。


      set()メソッドで値をセットする際にキャッシュに有効期限を指定することもできる。

      で

      // 現在時刻から1時間有効なキャッシュ

      long time = Calendar.getInstance().getTimeInMillis();

      time = time + 1000 * 60 * 60;

      Date date = new Date(time);

      mcc.set("name", "Naoki Takezoe", date);


      というソースが書いてあるが、これは正しくは

      logn time = 1000 * 60 * 60;

      Date date = new Date(time);

      mcc.set("name", "Naoki Takezoe", date);

      である。


      なぜかというとmemCachedClientForJavaのソースの中では最終的に

      /**

      * expiryがDateの日付

      */

      String cmd = String.format( "%s %s %d %d %d\r\n", cmdname, key, flags,(expiry.getTime()
      / 1000), val.length );

      sock.write( cmd.getBytes() );

      という処理をしている。

      このgetTimeは1970年1月1日午前0時からの経過時間をミリ秒で返すので、うん百万ぐらいの値が返るが

      http://l-w-i.net/t/memcached/command_001.txt

      でいわれているとおり、

      <<秒数が2592000 = 60 * 60 * 24 * 30 (30日)を超えることはできない

      のでデータは登録されない。

'
    - '2012-01-31 00:00:00.000000'
    - '2012-01-31 00:00:00.000000'
    - 1
  - - 43
    - JSPからのデータの文字化け
    - ! "JSPから送られてくるデータが文字化けしてはまったのでメモ。\n\nこういう風にsetを書けば解決\n\tpublic void setAddTag(String
      addTag) {\n\t\tbyte[] byteData;\n\t\ttry {\n\t\t\tbyteData = addTag.getBytes(\"ISO_8859_1\");\n\t\t\taddTag
      = new String(byteData, \"UTF-8\");\n\t\t\tthis.addTag = addTag;\n\t\t} catch
      (UnsupportedEncodingException e) {\n\t\t\t// TODO 自動生成された catch ブロック\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n"
    - '2012-02-08 00:00:00.000000'
    - '2012-02-08 00:00:00.000000'
    - 1
  - - 44
    - jQuery逆引き
    - ! "・html内の一部をajax風にロードしたい。\n$('body').load(\"url\");\n\n・htmlのエレメントの要素を書き換えたい\n$('button').attr(\"text\",\"hello\");\n\n・エレメントのイベントと処理を結び付けたい。\n$(\"#test\").bind(\"click\",
      function(){\n\t\talert(\"hello\");\n\t\t}\n});\n\n・画面読み込み完了後に処理を実行したい\n$(window).load(function(){\n}\n\n・idでエレメントを指定したい。\n$(\"#id\")と#をつけて書く。\n"
    - '2012-02-09 00:00:00.000000'
    - '2012-02-09 00:00:00.000000'
    - 1
  - - 45
    - struts2における日本語の取り扱いと不具合とその対策
    - ! 'struts2の<s:property/>タグによって書き込まれるマルチバイトのデータは自動的に10進数の文字コードに書き換えられる（org.apache.struts2.components.Property.javaでapacheの提供するStringEscapeUtilsメソッドを使っているため）


      この文字はhtmlではおそらくブラウザが自動的にデコードしてくれているが、javascript内部ではデコードされない。つまりjavascriptタグ内に<s:property/>を書き、かつ送ったデータが日本語の場合は１０進数のまま表示されてしまう。


      この対策は

      http://d.hatena.ne.jp/takahashikzn/20091026/1256467020

      を参照に、クラスを置き換えれば正常に表示されるようになる。

'
    - '2012-02-13 00:00:00.000000'
    - '2012-02-13 00:00:00.000000'
    - 1
  - - 46
    - Webプロジェクトを公開する方法
    - ! 'apacheを公開するまでは

      http://www.jitaku-server.net/apache_basic.html


      公開後のapacheのセキリィティ設定は

      http://www.ginnokagi.com/2009/04/apache_1.html


      tomcatとapacheを連動させるには

      http://thinkit.co.jp/free/article/0708/2/9/


      自分でつくったプロジェクトをtomcatにエクスポートするのは

      http://www.kkaneko.com/rinkou/tomcat/eclipsetomcat.html#4


      ドメインの無料取得は

      http://orz.hm/

'
    - '2012-02-16 00:00:00.000000'
    - '2012-02-16 00:00:00.000000'
    - 1
  - - 47
    - sessionStorageに画像データを保存する方法
    - ! "sessionStorageを使って、一度読み込んだ画像データを保存させようとしたが色々詰まったのでメモ。\n\nまず上記の処理をするために必要な処理を下記に記述する\n①画像データをgetでとってくる\n②そのデータをbase64でエンコードする\n③そのデータをsessionStorageに格納する（ただしすでに登録されていれば取り出す）\n④imgタグにセットする\n何故こんなことをするかというと、画像データは生でははいらずbase64にエンコードしなくてはならないから。\n\n以下に各手順のソースを書く\n①\n\tfunction
      getData(url) {\n\t\t  var req = new XMLHttpRequest();\n\t\t  req.open('GET',url,false);\n\t\t
      \ req.overrideMimeType('text/plain; charset=x-user-defined');\n\t\t  req.send(null);\n\t\t
      \ if (req.status != 200) return '';\n\t\t  return req.responseText;\n\t}\n②\nfunction
      base64encode(str) {\n\t\tvar base64EncodeChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\tvar
      base64DecodeChars = new Array(\n\t\t    -1, -1, -1, -1, -1, -1, -1, -1, -1,
      -1, -1, -1, -1, -1, -1, -1,\n\t\t    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
      -1, -1, -1, -1, -1, -1,\n\t\t    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
      62, -1, -1, -1, 63,\n\t\t    52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1,
      -1, -1, -1, -1,\n\t\t    -1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11,
      12, 13, 14,\n\t\t    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1,
      -1, -1,\n\t\t    -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
      40,\n\t\t    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);\n\t
      \   var out, i, len;\n\t    var c1, c2, c3;\n\n\t    len = str.length;\n\t    i
      = 0;\n\t    out = \"\";\n\t    while(i < len) {\n\t\tc1 = str.charCodeAt(i++)
      & 0xff;\n\t\tif(i == len)\n\t\t{\n\t\t    out += base64EncodeChars.charAt(c1
      >> 2);\n\t\t    out += base64EncodeChars.charAt((c1 & 0x3) << 4);\n\t\t    out
      += \"==\";\n\t\t    break;\n\t\t}\n\t\tc2 = str.charCodeAt(i++);\n\t\tif(i ==
      len)\n\t\t{\n\t\t    out += base64EncodeChars.charAt(c1 >> 2);\n\t\t    out
      += base64EncodeChars.charAt(((c1 & 0x3)<< 4) | ((c2 & 0xF0) >> 4));\n\t\t    out
      += base64EncodeChars.charAt((c2 & 0xF) << 2);\n\t\t    out += \"=\";\n\t\t    break;\n\t\t}\n\t\tc3
      = str.charCodeAt(i++);\n\t\tout += base64EncodeChars.charAt(c1 >> 2);\n\t\tout
      += base64EncodeChars.charAt(((c1 & 0x3)<< 4) | ((c2 & 0xF0) >> 4));\n\t\tout
      += base64EncodeChars.charAt(((c2 & 0xF) << 2) | ((c3 & 0xC0) >>6));\n\t\tout
      += base64EncodeChars.charAt(c3 & 0x3F);\n\t    }\n\t    return out;\n\t}\n\n③\n
      \   \tvar base64ImgData = sessionStorage.getItem(imageSrc);//imageSrcは一意ならばなんでもよい\n
      \   \tif(base64ImgData == null){\n    \t\tbase64ImgData = base64encode(getData(imageSrc));\n
      \   \t\tsessionStorage.setItem(imageSrc,base64ImgData);\n    \t}\n\n④（data:image/gif;base64,を付加してるのが味噌）\n$(\"#ComicsImage\").attr(\"src\",
      'data:image/gif;base64,'+ base64ImgData);\n"
    - '2012-02-29 00:00:00.000000'
    - '2012-02-29 00:00:00.000000'
    - 1
  - - 48
    - rails環境構築
    - ! '動作環境はUbuntu railsのバージョンは3 rubyは1.9


      解像度の設定はhttp://lain003.blog51.fc2.com/blog-entry-53.html参照。

      sudoの感覚がみじかすぎ長くしたい http://ref.layer8.sh/ja/entry/show/id/2411

      基本は

      http://www.rubylife.jp/rails/を参照しながら、進めていく。

      以下にはその際につまった点をかいていく。

      -railsのプロジェクトは作成した際にsqlite3関係のエラー。

      http://www.kinopyo.com/blog/install-sqlite3-ruby-gem-in-linux

      -railsでServerを立ち上げようとするとエラー

      http://d.karashi.org/20110917.html　ここのGemfileに書く方法で解決。



      エディタは apt-get install vim　でvimを使う。

      しかしながらこのコマンドを実効していれたvimはrubyをサポートしていない。vim --versionで-rubyなのが確認できる。そこでこれを＋にするための方法を書いていく。

      http://d.hatena.ne.jp/simabuki/20110501/1304252092 基本はここを参照してinstallする。しかし途中のNcursesがどうこういってるところは、http://debianj.com/debian/library/ncurses.htmlを参照してinstall。

      またこの方法でインストールした場合はシンタックハイライトなどが無効にされているため、

      http://krakenbeal.blogspot.jp/2011/02/vi.htmlを参照して設定すること。


      ・・・vimなんて恐ろしいソフト僕にはつかえませんでした。おとなしくnetbeansにします。

      しかし7.1ではrubyのサポートを終了している。そこで下記を見てインストール

      http://www.oiax.jp/rails/zakkan/how_to_install_rails_plugin_on_netbeans_7_1.html

      インストール後は、長ったらしいコマンドをうつのがいやなので

      vi ~/.bashrc　で末尾に

      alias netbeans=''/bin/sh "/usr/local/netbeans-7.1.2/bin/netbeans"''

      を追加すればおk

      文字コードの設定は

      /Applications/NetBeans/NetBeans (バージョン).app/Contents/Resources/NetBeans/etc/netbeans.conf　に

      netbeans_default_options="(いろいろオプション)... -J-Dfile.encoding=UTF-8"

      を追記すればおk。

'
    - '2012-03-28 00:00:00.000000'
    - '2012-03-28 00:00:00.000000'
    - 1
  - - 49
    - railsプロジェクト作成手順
    - ! '・rails new sampleProject

      これで新規プロジェクトを作成する


      ・gem ''execjs''　gem ''therubyracer''

      この2つをGemFileに追加する。


      ・rails generate model sampleModel title:string

      これで空のモデルとマイグレーション(DB作成ようのクラス)を作成する


      ・rake db:migrate

      これでマイグレーションを元にDBに対してテーブルを作成する


      ・vim db/seeds.rb

      テーブルに追加したいカラムを書く。ここに書くのはDBの初期値、例えば都道府県の緯度経度一覧とか。逆に可変的なものは書かない、データの最終更新日とか。

      例：Title.create(name: ''宇宙に行った日'', sales_date: ''2011-06-28'')


      ・rake db:seed

      db/seeds.rbに書かれているカラムをDBに登録する


      ・rails generate controller コントローラ名

      これでコントローラを作成。コントローラ名は迷う所だが、このコントローラを呼び出すViewの名前と一緒でいいと思う。


      ・vim app/controller/コントローラ名_controller.rb

      このファイルを開いて適切な記述をする。詳しくは

      http://www.rubylife.jp/rails/ini/index6.html　参照


      ・vim app/view/コントローラ名/コントローラ名のメソッド名

      これでviewを作成する


      ・vim fongi/routes.rb

      これでルーティング規則を書く。

      match '':cont～

      の部分をコメントアウトする。


      ・rails server

'
    - '2012-04-01 00:00:00.000000'
    - '2012-04-01 00:00:00.000000'
    - 1
  - - 50
    - VirtualBox上でのUbuntuの環境設定
    - ! 'ここではタイトルの環境を作成する際につまったことをかく


      ・画面の解像度がおかしい

      Guest Addtionsをいれる。VirtualBoxのウィンドウからインストールボタンがある。

      それでもダメなら、Ubuntu側の解像度を直接いじる。詳しくは下記参照

      https://forums.ubuntulinux.jp/viewtopic.php?id=13239

'
    - '2012-04-02 00:00:00.000000'
    - '2012-04-02 00:00:00.000000'
    - 1
  - - 51
    - gemでmysqlをインストール時のエラー
    - ! "mysqlをインストールするために下記のコマンド実効。\ngem install mysql -- --with-mysql-config=/usr/bin/mysql_config\n出力\nBuilding
      native extensions.  This could take a while...\nERROR:  Error installing mysql:\n\tERROR:
      Failed to build gem native extension.\n\n/usr/bin/ruby1.9.1 extconf.rb --with-mysql-config=/usr/bin/mysql_config\n***
      extconf.rb failed ***\nCould not create Makefile due to some reason, probably
      lack of\nnecessary libraries and/or headers.  Check the mkmf.log file for more\ndetails.
      \ You may need configuration options.\n\nこんな感じのエラーで止まる。そこでmkmf.logをみることに。\n\n\"gcc
      -o conftest -I/usr/include/ruby-1.9.1/i686-linux -I/usr/include/ruby-1.9.1/ruby/backward
      -I/usr/include/ruby-1.9.1 -I. -I/usr/local/include  -D_FILE_OFFSET_BITS=64  -fno-strict-aliasing
      -g -g -O2 -fPIC conftest.c  -L. -L/usr/lib -L/usr/local/lib -L. -Wl,-Bsymbolic-functions
      -rdynamic -Wl,-export-dynamic    -lnsl -lm  -lruby-1.9.1-static -lmysqlclient
      -lnsl -lm  -lpthread -lrt -ldl -lcrypt -lm   -lc\"\nconftest.c: 関数 ‘t’ 内:\nconftest.c:5:53:
      エラー: ‘mysql_query’ が宣言されていません (この関数内での最初の使用)\nconftest.c:5:53: 備考: 未宣言の識別子は出現した各関数内で一回のみ報告されます\nchecked
      program was:\n/* begin */\n1: #include \"ruby.h\"\n2: \n3: /*top*/\n4: int main()
      {return 0;}\n5: int t() { void ((*volatile p)()); p = (void ((*)()))mysql_query;
      return 0; }\n/* end */\n\nこんな感じのエラーがわさわさ(kill me baby)と出てくる。\n\nそこで「C言語　mysql_query」でぐぐった結果、libmysqlclient-devのメソッドらしい。\nよって\napt-get
      install libmysqlclient-devで無事解決。\n"
    - '2012-04-02 00:00:00.000000'
    - '2012-04-02 00:00:00.000000'
    - 1
  - - 52
    - vimメモ
    - ! '¥r　その場で実効

      :Opsplore ディレクトリ閲覧

      :BundleInstall! vimrcに書いたgemをインストール。


      なるべく覚えないvimコマンド集

      http://d.hatena.ne.jp/zariganitosh/20120227/minimum_vi

'
    - '2012-04-04 00:00:00.000000'
    - '2012-04-04 00:00:00.000000'
    - 1
  - - 53
    - fleximageプラグインインストール（未完）
    - ! 'fleximageをインストールでハマったのでメモ。


      RMagickに依存しているのでまずはこれをインストール。詳しくは下記URL参照。

      http://blog.livedoor.jp/sasata299/archives/51283068.html

      途中のリンクはるところは微妙に名前が変わっているの可能性があるので、注意してみる。


      また上記後、実効するとなぜかエラーがおこる。具体的にはrailse serverコマンドを実効すると

      エラーが起こる。このエラーを解消するためにはgemからfleximageをuninstallする。

      これ以外の解消法が見つかった場合は追記する。


      ちなみに使い方は

      http://www.clear-code.com/blog/2009/3/23.html参照

'
    - '2012-04-05 00:00:00.000000'
    - '2012-04-05 00:00:00.000000'
    - 1
  - - 54
    - file_column プラグイン導入
    - ! "rails3.2.2にfile_columnプラグインを導入して、そのごrails serverを実効すると下記のようなエラーがでた\n\n/var/lib/gems/1.9.1/gems/rails-3.2.2/MangaSite/vendor/plugins/file_column/lib/file_column.rb:597:in
      `<module:ClassMethods>': uninitialized constant FileColumn::ClassMethods::RAILS_ROOT
      (NameError)\n\nこれはboot.rbになぜかほとんどソースかかれていなかったから発生したようである（6行ほどしかかかれていない）。そのためboot.rbに対して\nRAILS_ROOT
      = \"#{File.dirname(__FILE__)}/..\" unless defined?(RAILS_ROOT)\nという記述を追加することでエラーは収まった。\n\n・インストール\n$sudo
      port install ImageMagick\n\nGemfikleに\ngem 'rmagick', :require => 'RMagick'\n\nrails
      plugin install git://github.com/tekin/file_column.git\n\n・使い方\nhttp://ishikawa.r-stone.net/2007/02/filecolumn-and-capistrano.html\nhttp://yasrails.blog33.fc2.com/blog-entry-16.html\nを参照。最終的なソースは以下のとおりとなった。\n\nrails
      generate scaffold Photo image:string\n\n-UP様のView\n  1 <%= form_for(@photo,
      :html => { :multipart => true }) do |f| %>\n  2   <div class=\"field\">\n  3
      \     <%= f.label :image %><br />\n  4      <%= file_column_field \"photo\",
      \"image\" %>\n  5   </div>\n  6   <div class=\"actions\">\n  7       <%= f.submit
      %>\n  8    </div>\n  9 <% end %>\n\nーコントローラ\n  1 class PhotosController < ApplicationController\n
      \ 2     def index\n  3         @photo = Photo.new\n  4     end\n  5 \n  6     def
      create\n  7         @photo = Photo.new(params[:photo])\n  8         @photo.save\n
      \ 9     end\n 10 end\n\nーモデル\n  1 class Photo < ActiveRecord::Base\n  2     attr_accessible
      :image\n  3     file_column :image\n  4 end\n\nー表示\n  1 <p>\n  2     <%= image_tag(url_for_file_column
      \"photo\", \"image\") %>\n  3 </p>\n~\n"
    - '2012-04-07 00:00:00.000000'
    - '2012-04-07 00:00:00.000000'
    - 1
  - - 55
    - rubyコーティング規約まとめ
    - ! 'ここを参照　http://shugo.net/ruby-codeconv/codeconv.html

      以下に得に注意したい点をピックアップで記述する。


      クラス・モジュール名は、各単語の一文字目を大文字にし、`_''などの区切文字は使用しない。ただし、HTTPなどの略語の場合はすべて大文字のままとする。


      メソッド名は、すべて小文字とし、単語の区切りに`_''を用いる。メソッド名には動詞の原形を使用する。


      真偽値を返すメソッド名は、動詞または形容詞に`?''を付け、形容詞に `is_''は付けない。


      変数名は、すべて小文字とし、単語の区切りに`_''を用いる。


      ファイル名は、すべて小文字とし、単語の区切りに`-''を用いる。また、ファイル中の主な定義クラスの名前を変換したものをファイル名に使用する。(モジュールを名前空間として使用する場合は、ディレクトリを使用して階層構造を表現する。)


      無限ループにはloopを使用する。


      メソッド定義の中にはコメントは記述しない。(コメントが必要だと思われるようなコードにはリファクタリングを行う。)ただし、クラス・モジュールやパブリックなメソッドには仕様をRDocスタイルで記述する。

'
    - '2012-04-08 00:00:00.000000'
    - '2012-04-08 00:00:00.000000'
    - 1
  - - 56
    - sqlite3導入後のエラー
    - ! 'railsを使うためにsqlite3を導入したが、sqlite3 コマンドを実効するとなぜか下記のエラーが表示される。


      SQLite header and source version mismatch


      自分がとった対象方法は、apt-get gemなどからすべてuninstallをした。

      しかしそれでも上記のエラーは消えない。原因はどうやら

      usr/local/bin以下にsqlite3というファイルが残っていたためである。

      よってこのファイルも削除して改めてapt-getでインストールした。

'
    - '2012-04-15 00:00:00.000000'
    - '2012-04-15 00:00:00.000000'
    - 1
  - - 57
    - ボタンなどの表示を遅らせる
    - ! "iPhoneアプリでボタンなどの表示を遅らせたいときにどのようにすればいいかメモ\n\n例えばボタンを押したら５秒後に色をかえるとか。\n\nこれは\nObjective-cのスレッドスリープ（例：[NSThread
      sleepForTimeInterval:0.5]）を使っても、表示はまたない。どうやらコントローラとViewは別々のスレッドで管理しているようだ。\n\nそのためどんな実装をすればいいかというと、performSelectorを使う。しかしperformSelectorは複数の引数を指定することができない。そのためdictionaryを使う具体的な実装はこうだ\nーー呼び出しもとーー\nNSDictionary
      *dic = [NSDictionary dictionaryWithObjectsAndKeys:\n                                 firstButton,
      @\"first\",\n                                 secondButton, @\"second\", nil];\n
      \           [self performSelector:@selector(delayMethod:) withObject:dic afterDelay:0.5];\n\nーー呼び出し先ーー\n-(void)delayMethod:(NSDictionary*)dic{\n
      \   UIButton *firstButton = [dic objectForKey:@\"first\"];\n    UIButton *secondButton
      = [dic objectForKey:@\"second\"];\n    [firstButton setTitle:@\"\" forState:UIControlStateNormal];\n
      \   [secondButton setTitle:@\"\" forState:UIControlStateNormal];    \n}\n"
    - '2012-04-23 00:00:00.000000'
    - '2012-04-23 00:00:00.000000'
    - 1
  - - 58
    - iPhoneでの実機テストのやり方
    - ! 'http://blog.hicoboo.com/2011/10/blog-post_30.html


      神サイト。一発で通った。

      閉鎖してる～っっw

      かくか・・・。


      とはいっても全体の流れは

      http://kids-education.blog.so-net.ne.jp/2011-08-06を参照。

      ーー以下には注意する点を書いていく。ーー


      まずは自分のMacと、developer.apple.comにあるアカウントを結びつけないといけない。

      それをするには、キーチェーンでの証明書発行。

      この際に気をつける事はdeveloperで登録したメールアドレスをいれてあげないといけないとうこと。

      ユーザ名も結びついておいたほうがいい？


      最後にこの作業が終わってあとにXcodeで設定しないといけない物がのこっている。

      Build SettingsのCode Singnginの各Any iOS SDKは落としてきた証明書をセットする。

'
    - '2012-04-27 00:00:00.000000'
    - '2012-04-27 00:00:00.000000'
    - 1
  - - 59
    - Objective-Cでのファイル保存
    - ! "環境：ios5\nファイルの保存の仕方をここに記述する。\n   NSArray *path = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,
      NSUserDomainMask, YES);\n    NSString *documentsDirectory = [path objectAtIndex:0];\n
      \   NSString *filepath = [documentsDirectory stringByAppendingPathComponent:@\"photodata2.plist\"];\n
      \   \n    NSMutableArray* datas;\n    \n    datas = [NSMutableArray arrayWithContentsOfFile:filepath];\n
      \   if(datas == NULL){\n        NSLog(@\"fileCreate\");\n        //ファイルが存在しなければファイルを作成する\n
      \       [[NSFileManager defaultManager] createFileAtPath:filepath contents:nil
      attributes:nil];\n    }\n"
    - '2012-04-29 00:00:00.000000'
    - '2012-04-29 00:00:00.000000'
    - 1
  - - 60
    - iPhone開発逆びき
    - ! "・メニューバー消したい\n～info.plistを開く。\nStatus bar is initially hidden　の　Keyを追加する。(一番したの方のRequired
      device capabilities　の横にある＋おせばいい）\n&#8232;ValueにYESを選択。\n\n・タッチした画像をとってきたい。\n//@override\n-
      (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {\n\t// タッチポイントの取得\n\tUITouch
      *touch = [touches anyObject];\n\tCGPoint pos = [touch locationInView:[self view]];\n\t\n\t//
      タッチされた対象を決定\n\tUIView *aView = [[self view] hitTest:pos withEvent:event];//ここのインスタンスに対象のインスタンスが入ってる。\n}\n\n・画像をUIkitで作って、画面に表示したい。\nUIImageView
      *imgView = [[UIImageView alloc] initWithImage:[UIImageimageNamed:@\"sample.png\"]];//こんな感じでインスタンスを作成して\n[imgView
      setTag:1];\nCGPoint pos = CGPointMake( edgeX+(x*2+1)*dw, edgeTop+edgeY+(y*2+1)*dh
      );\n[imgView setCenter:pos];\n[[self view] addSubview:imgView];\n\n・どんな方向に傾けても一生横\n-
      (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation\n{\n
      \  return (interfaceOrientation == UIInterfaceOrientationLandscapeRight);\n}\n\n・加速度センサーで値とりたい\n-
      (void)accelerometer:(UIAccelerometer *)accelerometer didAccelerate:(UIAcceleration
      *)acceleratio {\n\tNSLog(@\"%f,%f,%f\",[acceleratio x],[acceleratio y],[acceleratio
      z]);\n}\n\n・絵とかUIView継承した物を動かしたい。\n[uiview setCenter:CGPointMake(x,y)];\n\n\n・storyBoardに新しい画面とそれに対応するコントローラを追加したい\nhttp://d.hatena.ne.jp/hypercrab/20111212/1323695156\nタブの話だけど、他のにも応用できるはず。\nあとクラス選ぶときは、選んでるコントローラの外の枠が青の時でないといけない点は注意\n\n・クラス名を変更したい\nhttp://sazameki.jp/translations/xcode4/IDEs/Conceptual/Xcode4TransitionGuide/Refactoring/Refactoring.html\nださいけどこれをつかうしかないか？\nあとはファイルをクリックして、ファイル自体の名前を変えればおk。\n\n・ファイルを削除したい\nDelete→Move
      to trash\nmoveを選択しないと前のファイルがフォルダに残るからめんどい。\n\n・JSON形式のデータをうまいこと処理したい\nhttp://stig.github.com/json-framework/&#8232;・
      最新の安定版をダウンロード。&#8232;　 \n次の順で進んでzipをダウンロード1) ページ中程の「Browse or Download」の「Download」&#8232;　
      2) 「Download Packages」の「JSON v2.3.2 (iOS).zip」&#8232;・ zipを解凍。&#8232;　 \n解凍後に「Classes」というフォルダがあるのでこれをXcodeでAddして追加。\n--以下はコード---\n#import
      \"JSON.h\"\n\nNSDictionary *dicResult = [jsonString JSONValue];//jsonStringはjsonのデータ\nNSDictionary
      *dicData = [dicResult valueForKey:@\"data\"];\nNSArray *aryItems = [dicData
      valueForKey:@\"items\"];\nfor (NSDictionary *dic in aryItems) {\n\t\tNSString
      *videoTitle = [dic objectForKey:@\"title\"];\n}\n\n\n・別のコントローラが管理している画面を呼び出したい。\nまず『storyBoardに新しい画面とそれに対応するコントローラを追加したい』とかをよみつつ、新しい\nコントローラを作成する。今回はSecondViewControllerという名前にした。\nんで呼び出したいところで\n\nSecondViewController
      *viewController;\nviewController = [[SecondViewController alloc] init];\n    \n[self
      presentModalViewController:viewController\n                            animated:YES];\n\nを書けば画面がかわる。\n値の受け渡しはスマートではないが、SecondViewControllerのプロパティを使うしかないか？\n\n\n・xibに置いたUIViewとかのdelegateを指定のコントローラに追加したい。\nメソッドを結びつける画面開いて（→　みたいなアイコン）、Outletの欄のdelegateをつまんで、ViewControllerScenのViewControllerに引っ張ればできる。\n\n・画面の読み込み時にぐるぐるを表示させたい。\nUIActivityIndicatorViewを画面にはっつける(このコントローラ名はaIndicatorとする)。\n\n-
      (void)viewDidLoad\n{\n    [super viewDidLoad];\n    aIndicator.hidden = true;//見えっぱなしかっこわるい\n}\n\n-
      (IBAction)buttonDown:(id)sender {//読み込み始めたら\n    aIndicator.hidden = false;\n
      \   [aIndicator startAnimating];\n    [webView loadRequest:[NSURLRequest requestWithURL:[NSURL
      URLWithString:@\"http://www.google.co.jp\"]]];\n}\n\n- (void)webViewDidFinishLoad:(UIWebView
      *)webView {//デリゲート。読み込みが終わったら呼ばれる\n    [aIndicator stopAnimating];\n　　aIndicator.hidden
      = true;\n}\n\n・アニメーションをつける\nhttp://lain003.blog51.fc2.com/blog-entry-68.html\n\n・NSStringから改行を検索する。\n[line
      hasPrefix:@\"\\r\"]\n\\rがみそ。\n\n・全画面で共通するConfigを書きたい\nNSUserDefaults *ud = [NSUserDefaults
      standardUserDefaults];\n[ud setBool:YES forKey:@\"SOUND\"];\n[ud setBool:YES
      forKey:@\"VIBRATION\"];\nでもどうなんだろ・・・。自分でconfigクラス書いた方がいい気もする。keyの値いちいち覚えてらんない。\n\n・ボタンとかを押せなくしたい\nプロパティのHighligthed
      Adjusts image\n"
    - '2012-04-29 00:00:00.000000'
    - '2012-04-29 00:00:00.000000'
    - 1
  - - 61
    - TableViewの使い方
    - ! "まずXIBにUITableViewをはりつける。そしてそのdatasorceとdelegateをコントローラに紐付ける。\n\n次にソース内で以下の以下のメソッドを実装する。\nhファイルには\n
      UIViewController<UITableViewDelegate, UITableViewDataSource>\nこの２つのdelegateを宣言しておく。\n\n次にmファイルには以下のメソッドを書く。\n-
      (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section\n{\n
      \   // Return the number of rows in the section.\n    \n    return 10;//これは上でつくったテーブルにいくつのレコードを追加するか指定する。この数だけcellForRowAtIndexPathが呼ばれる。\n}\n\n-
      (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath
      *)indexPath\n{\n    static NSString *CellIdentifier = @\"Cell\";\n    UITableViewCell
      *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];//これは同名の物があるかどうか調べてあれば返す。逆にいうとないとnull。使い回すためにあるみたい。\n
      \   \n    if(cell == nil) {//上でnullなら新規にレコード（？）を作成。\n        cell = [[UITableViewCell
      alloc] initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:CellIdentifier];\n
      \   }\n    [[cell textLabel] setText:[NSString stringWithFormat:@\"%d 番目\",[indexPath
      row]]];\n    return cell;\n}\n"
    - '2012-05-02 00:00:00.000000'
    - '2012-05-02 00:00:00.000000'
    - 1
  - - 62
    - linux(RedHat)逆引き
    - ! '・このコマンドがどこで実行されているか探したい。

      which 探したいコマンド(gemとか)

'
    - '2012-05-08 00:00:00.000000'
    - '2012-05-08 00:00:00.000000'
    - 1
  - - 63
    - mac逆引き
    - ! '・macでssh接続したい

      sudo ssh -p ポート番号 ユーザ名@IPアドレス

'
    - '2012-05-08 00:00:00.000000'
    - '2012-05-08 00:00:00.000000'
    - 1
  - - 64
    - UIViewを継承したクラスに連続したアニメーションをつけたい
    - ! "タイトル通り。\n例えば、画像を小さくして、その後さらに大きくする。こんなアニメーションを実装したい時の処理を下記に書く。\n\nまずは画像を小さくするとき、\n
      \   [UIView beginAnimations:@\"1\" context:NULL];//こっからアニメーションの処理を書くよという宣言\n
      \   [UIView setAnimationDelegate:self];//delegate　今回は使わない\n    [UIView setAnimationDelay:
      0];//アニメーションが始まるまでの待ち時間\n    [UIView setAnimationDuration:1.0];//アニメーションを何秒かけて処理するか\n
      \  &#45;&#45;&#45;&#45;&#45;----ここにアニメーションをつけたい処理を書く。&#45;&#45;&#45;&#45;&#45;----\n
      \   CGAffineTransform scaling = CGAffineTransformMakeScale(0.5, 0.5);//最終的なサイズを半分にする\n
      \   ほげ.transform = scaling;\n    ほげ.alpha = 1.0;\n   &#45;&#45;&#45;&#45;&#45;----ここにアニメーションをつけたい処理を書く。&#45;&#45;&#45;&#45;&#45;----\n
      \   [UIView commitAnimations];//ここでアニメーション終わりだよという宣言\n\nこれで小さくなる。しかしさらに3秒後ほげを大きくしたいという処理を書く場合、timeを使う。\n具体的にはこんな感じ。\n\n
      \  &#45;&#45;&#45;&#45;&#45;----ここにアニメーションをつけたい処理を書く。&#45;&#45;&#45;&#45;&#45;----\n
      \   [UIView commitAnimations];//ここでアニメーション終わりだよという宣言\n [NSTimer scheduledTimerWithTimeInterval:3f
      target:self selector:@selector(hoge:) userInfo:nil repeats:NO];\n\n-(void)hoge:(NSTimer*)timer{\n
      \   [UIView beginAnimations:@\"2\" context:NULL];\n    [UIView setAnimationDelegate:self];\n
      \   [UIView setAnimationDidStopSelector:@selector(endAnimation)];\n    [UIView
      setAnimationDelay: 0];\n    [UIView setAnimationDuration:1.0];\n    \n    CGAffineTransform
      scaling2 = CGAffineTransformMakeScale(10, 10);\n    don.transform = scaling2;\n
      \   don.alpha = 1.0;\n    [UIView commitAnimations];\n}\n"
    - '2012-05-15 00:00:00.000000'
    - '2012-05-15 00:00:00.000000'
    - 1
  - - 65
    - ディレクトリ以下の全てファイルにアクセスする再起的処理
    - ! "あるディレクトリ以下のファイルやディレクトリ全てに対して、権限を変更したいということがあった。\nこれはそんときのプログラムである。こつはフルパスを意識すること。\n別にchmodでなくてもフォルダ以下を全部再起的に処理したい場合にも応用できそう。\n\nclass
      Hoge\n   def self.foo(file_path)\n        path = file_path\n        begin\n
      \               begin\n                        f=  File.open(path)\n                        f.chmod(0777)\n
      \               rescue => exc2\n                        print  \"chmod Error\"\n
      \                       p path\n                else\n                        print
      \"chmod Scess\"\n                        p path\n                end\n                s
      = Dir::glob(path + \"/*\")\n                for i in s\n                        if(i
      == \".\" || i == \"..\")\n                        else\n                                Hoge.foo(i)\n
      \                       end\n                end\n        rescue => exc\n                p
      exc\n        ensure\n        end\n   end\nend\n\nHoge.foo(File.expand_path(\".\"))\n"
    - '2012-05-17 00:00:00.000000'
    - '2012-05-17 00:00:00.000000'
    - 1
  - - 66
    - rails・ruby逆引き
    - ! "環境はrails3.2\n\n・うっかり間違えてgenerateコマンドを実効した。取り消したい。\nrails destroy model task　controllでも可。またDBの型までは書かないでよい。\n\n・ルーティングがどのようになっているか見たい\nrake
      routes コマンド実効\nここで表示されるテーブルの見方は\nhttp://d.hatena.ne.jp/zariganitosh/20080203/1202091772　を参照\n\n・gemコマンドでインストールしたファイルってどこにあるの？\ngem
      which ファイル名\n\n・sqlite3ってどこに保存されてるの？\ndb/development.sqlite3の中。そこにない場合はconfigのdatabase.ymlで参照先がみれる。\nここのdbのあけかたはsqlite3
      db/development.db で見れる。\n\n・新しくカラム追加したい\nrails g migration AddImageToUserMaster
      image:string\nimageが追加したいカラム。なんかimage２回書いてるけど、このコマンドがそういうもんだからしょうがないみたい。\nんで\nrake
      db:migrate　で更新。ログに\n==  AddImageToUserMaster: migrating ===========================================\n--
      add_column(:user_masters, :image, :string)\n   -> 0.0007s\n==  AddImageToUserMaster:
      migrated (0.0008s) ==================================\nってでればおk。\nそれでも不安ならsqlite3たたいて\nsqlite>
      explain on;\nsqlite> select * from テーブル名;\nでカラム一覧が見れる。\n\n.データ送信したい\nform_tag
      と form_forを使う方法がある。今回はform_tagの使い方を記述する。\nここでの注意点としては<%=で始まってるとこ。古いバージョンだと=がなくてもいいけど、3.2はだめ。\n<%=
      form_tag(:controller => \"user_masters\",:action => \"index\") do -%>\n　<div
      class=\"field\">\n  　<%= text_field_tag(\"sex\",\"性別\") %>\n  　<%= submit_tag
      \"送信\" %>\n　</div>\n<% end %>\n\n・railsで日本語使いたい\nhttp://rubist.blog77.fc2.com/blog-entry-67.html\nこれを参照。といいたい所だが、3.2ではいくつかエラーがでたのと、自分はsqliteだったので、ちょと変更。\n1.2なしで、3.4のみ使えばおk。１はエラーがでたし、2はmysqlだから。\n\n・このインスタンス何のクラス？\np
      hoge.class\n\n・link_toメソッドでビューヘルパーを利用したリンク。\n<%= link_to 'Edit', edit_project_path(project)
      %>\nここで注意なのは_pathの部分。rake routesで表示されるヘルパーにはedit_projectしか書かれていない。\nしかも/idみたいなのがある場合は()でidを渡さなければいけない。\n\n・link_toメソッドでgetの引数を渡すやり方\n<%=
      link_to 'Edit', edit_project_path(project,{:arg1 => \"aaa\"}) %>\n\n.ネストしたrouteに対するlinkの書き方\nproject_series_index_path(project)\n_でつなげるみたい。rake
      routesみれ。\n\n.ネストした際の親のIDの取り方\nhttp://127.0.0.1:3000/projects/2/series\nこんなのがあったとしてこの2ってどうやってとるねんって話。\nparams[:project_id]\nこれでおk。
      \n\n・ネストした際にshowがうまくいかない\n<%= link_to 'Show', project_series_path(params[:project_id],series.id)
      %>\nこうやって書き直した。具体的にはルーティングヘルパーを使って呼び出した。またなぜかproject_idを指定しないといけなかった。\n\n・html
      escapeを無効にしたい\n```\n<%= raw \"<p>hoge</p>\" %>\n```\nrawって書けば無効になる \n\n\n・テーブルを初期化したい。\nrake
      db:migrate:reset\n"
    - '2012-05-20 00:00:00.000000'
    - '2012-05-20 00:00:00.000000'
    - 1
  - - 67
    - ログイン機能の実装
    - ! "Deviseというプラグインを使う。\n\n以下に手順を書いていく。\n①gem 'devise'\n②bundle install\n③rails
      generate devise:install\n④config/environments/development.rb に記述を追加\nconfig.action_mailer.default_url_options
      = { :host => 'localhost:3000' }\n⑤routes.rbにdevise_for :usersを追加。\n⑥routes.rbにroot
      :to => \"action#controller\"を追加(action,controllerはお好きな画面を)\n。これはログイン、ログアウト後にrootに飛ぶからそれを指定して制御しようって話。あと、public/index.htmlをrmしとかないとそっちが優先される。\n⑦app/views/layouts/application.html.erbに下記を追加。\n<p
      class=\"notice\"><%= notice %></p>\n<p class=\"alert\"><%= alert %></p>\nこれはログインに成功したとか、失敗したとかの情報を表示する（多分）。\n考えたらログインするViewにだけ書けばよくね？ということでviews/devise/session/new.html.erbにだけかいた。\n⑧rails
      g devise User\n⑨rails g devise:views　これでログインフォームとかをカスタマイズするためのファイルが作成される。\n⑨db:migrate\n\n\nこれで初期設定は完了。次は＋@な事を書いていく。\n①<%=
      link_to \"ログアウト\", destroy_user_session_path, method: :delete %>\nこれでログアウトのリンクを作成。\n②before_filter
      :authenticate_user!\nこれをコントロール内の先頭に書けばログインしてないやつはアクセスできなくなる。\n自分の場合は全てのページにこれを適用したかったため、\nclass
      ApplicationController < ActionController::Base\n  before_filter :authenticate_user!\nend\nと書いた。\n\n\nデフォルトではsing_upはサインインしてなくてもだれもでできてしまう。\nこの制御をかけるためにはクラスをオーバライドする必要性がある。\n以下のコントローラを作成。\nclass
      RegistrationsController < Devise::RegistrationsController\n  def new\n    if
      user_signed_in? then\n      super\n    else\n      redirect_to new_user_session_path\n
      \   end\n    \n  end\nend\nその後、ルーティングテーブルに\ndevise_for :users, :controllers
      => { :registrations => \"registrations\" }\nと変更する必要性がある。\n\n\nあ、あとrspecでテストをする際のために以下の設定を\nspec_helper.rbに以下のように追記\nRSpec.configure
      do |config|\n  config.include Devise::TestHelpers, :type => :controller\nend\n\nあとはテストしたいコントローラに\nsign_in
      @user \nを書いておけばおk。@userのサンプルはRails Consoleとかで中身をのぞけばいいんじゃないかな。\n"
    - '2012-06-03 00:00:00.000000'
    - '2012-06-03 00:00:00.000000'
    - 1
  - - 68
    - Icon specified in the Info.plist not found under the top level app wrapper
    - ! 'Icon specified in the Info.plist not found under the top level app wrapper　Icon.png

      いざアップしようとした際に上記のエラーがでておこられた。


      これはなぜおこられるかというと、info.plistに定義されているファイル名であるIcon.pngがResourceフォルダに無いとおこるらしい。


      原因は２つあった。

      ひとつはinfo.plistに余計な定義を書いていて、存在しないアイコンがあった。icon-57とか。

      もうひとつはicon.pngになっていため。大文字必須。

'
    - '2012-06-05 00:00:00.000000'
    - '2012-06-05 00:00:00.000000'
    - 1
  - - 69
    - Apple Developerに登録したアカウントを別のMacに移し替える。
    - ! 'あるAというMacがあって、それでApple Developerに登録した（Certificatesを登録した）として、これを別のBというMacに権限を写し変える際のやり方。写し変えるの定義としては、AでつくったアプリをBでアップデートすることとする。


      まずなんでこれをするはめになったのかというと、AでアップしたファイルをBでアップすることができないとう状況が発生したから。


      まず

      Current Development Certificates　と　Current Distribution Certificate　に登録している証明書をRevokeする。


      その後、http://lain003.blog51.fc2.com/blog-entry-61.htmlを参考に

      自分のMacと、developer.apple.comにあるアカウントを結びつける。具体的には自分のキーチェーンで証明書を発行して、それをアップロードして、リロードして、ActionからDownloadを選択して落とす。


      No unexpired provisioning profiles found that contain any of the keychain''s
      signing certificates

      というエラーがでたら、アプリのプロビジョニングが登録されていないということ。つまりプロビジョニングを落として、ダブルクリックすればいいだけなのだが・・・。

      昔あげていたアプリのProvisioning Profilesは表示がなんか残念なことなっている（おせない）。Developmentはどうしようもないのだが、DistributionではActionを押して、何も変更せずに（正確には一度変更して再び元に戻す。これをしないとSubmitがおせない）終了すると、再びDownloadできるようになっている。

      また昔のプロビジョニングが残っていた場合は消した方がいい。


      なんらかの理由でキーチェーンに過去に登録していたプロビジョニングがある場合はそれを消す。でないとひとつしかだめとかいうエラーがでる。

'
    - '2012-06-06 00:00:00.000000'
    - '2012-06-06 00:00:00.000000'
    - 1
  - - 70
    - Ubuntuでrvmをインストール
    - ! 'Ubuntu 11にrvmをインストールしてrails sまでにかなりまったのでもメモ。

      ubuntuは新品とする。


      curl -L get.rvm.io | bash -s stable --rails


      rvm pkg install readline

      rvm pkg install zlib

      rvm pkg install openssl



      rvm reinstall 1.9.3


      sudo apt-get install build-essential g++

'
    - '2012-06-08 00:00:00.000000'
    - '2012-06-08 00:00:00.000000'
    - 1
  - - 71
    - ruby ブレークポイント
    - ! 'rubyでメンバの内容がわからずこまっていたところ、とあるツールを発見。

      gem ''pry-rails'', :group => :development

      でインストールして

      ブレークポイントを置きたいところで、

      binding.pry

      とかいておけば対話式に操作できる。


      詳しくは下記参照。

      http://qa.atmarkit.co.jp/questions/2130#note_297


      - roop時の終了のさせ方

      exit-program


      - メソッドが定義されている場所や、ソースを見る。

      $ to_s(メソッド名)


      - edit-methodで使うediterを設定する・

      ~/.pryrcをつくって、Pry.config.editor="vim"と書いておけばおk


      ----拡張plugin

      http://blog.kiftwi.net/2012/03/20/summary-of-pry-plugins/

      gem ''pry-nav''これ便利。

      ただし、なんか普通のrubyが動かなくなる様な……


      あと、rails consoleで起動するのをirbでなくpryに帰るのには

      gem ''pry-rails''

      をいれればおk。

'
    - '2012-06-10 00:00:00.000000'
    - '2012-06-10 00:00:00.000000'
    - 1
  - - 72
    - apacheでrailsを公開
    - ! "apache-passengerを使う。\n\nhttp://redmine.jp/tech_note/apache-passenger/を山椒すればおk。詳しく書いていくと・\nまずapache2をインストール。\nその後。公開したいプロジェクトのGemsetが選択されていることを確認。\nそのごGemfileに\ngem
      'passenger'\nを追加してbundle install\nその後\npassenger-install-apache2-module\nであれがたりないとかいってくれるので指示にしたがう。\n最後の方にでてくるしたみたいなのの内容をコピーして\n\nsudo
      vim /etc/apache2/httpd.conf\nではりつける。\n\nその後色々して最終的にはhttped.confはこうなった。\n注意するべき点としては\nRailsEnv
      development\nの行かな。デフォでは別の（公開用？）になっているので\ndeveを指定しないとDBまわりとかでエラーが起こる。\n\nLoadModule
      passenger_module /home/lain/.rvm/gems/ruby-1.9.3-p194@QuizManagement/gems/passenger-3.0.12/ext/apache2/mod_passenger.so\n
      \  PassengerRoot /home/lain/.rvm/gems/ruby-1.9.3-p194@QuizManagement/gems/passenger-3.0.12\n
      \  PassengerRuby /home/lain/.rvm/wrappers/ruby-1.9.3-p194@QuizManagement/ruby\n\n
      <VirtualHost *:80>\n    ServerName 123.456.78.901\n    DocumentRoot /home/lain/RailsProject/quizmanagement/public\n
      \   RailsEnv development\n    #RailsBaseURI /quizmanagement\n    <directory
      />\n        # CGIとか使えるように\n        Options All\n        # ディレクトリ一覧表示だけはしないように\n
      \       #Options -Indexes\n        # .htaccessで設定上書きできるように\n        AllowOverride
      All\n        Order allow,deny\n        # 全ホストからアクセス許可\n        allow from all\n
      \        # MultiViews must be turned off.\n         Options -MultiViews\n     </directory>\n\n</VirtualHost>\n\nこれでlovalhostと打てばルーティングテーブルに基づいた処理がされるはず。\n\n\nーー2012/11/5追記\nと上で書いたが、これは一つのアプリケーションを公開するにはいいのだが、複数のrailsアプリケーションを一つのサーバで公開することができない。\nそこで複数アップする場合を書く。多分最初からこっちでいい。\nhttp://rails3beginner.blogspot.jp/2012/03/centosapachepassenger.html\n上記を参考に設定した。\n\n--httpd.confの内容\nLoadModule
      passenger_module /home/lain/.rvm/gems/ruby-1.9.3-p194/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\nPassengerRoot
      /home/lain/.rvm/gems/ruby-1.9.3-p194/gems/passenger-3.0.17\nPassengerRuby /home/lain/.rvm/wrappers/ruby-1.9.3-p194/ruby\n\n<VirtualHost
      *:80>\n    ServerName 12.34.567.78#ipアドレス\n    DocumentRoot /home/lain/rails\n
      \   <Directory /home/lain/rails>\n        AllowOverride all\n        Options
      -MultiViews\n        Options -Indexes\n    </Directory>\n\n    RailsEnv development\n
      \   RackBaseURI /androidrsslink\n    <Directory /home/lain/rails/androidrs>\n
      \       Options -MultiViews\n        # ディレクトリ一覧表示だけはしないように\n        Options
      -Indexes\n    </Directory>\n\n    RackBaseURI /access_log_viewer_link\n    <Directory
      /home/lain/rails/access_log_viewer>\n        Options -MultiViews\n        #
      ディレクトリ一覧表示だけはしないように\n        Options -Indexes\n    </Directory>\n</VirtualHost>\n\nそしてシンボリックリンクを作成する\nln
      -s /home/lain/rails/access_log_viewer/public /home/lain/rails/access_log_viewer_link\nln
      -s /home/lain/rails/androidrss/public /home/lain/rails/androidrsslink\n\nここで注意するのはシンボリックリンクを通すこと。\n普通に/home/lain/rails/androidrss/publicを直接みればいいじゃんと考えてしまうのだが、おそらく　apacheは\nDocumentRoot以外のフォルダには直接アクセスできない。シンボリックリンクを踏ませなければいけないっぽい。\n最初に書いた方法がうまくいくのはDocumentRootがpublicを指定しているからであるとおもわれる。\n\n&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;---apache2をUbuntuにinstall&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-\nsudo
      aptitude update\nsudo aptitude install apache2\n\nsudo /etc/init.d/apache2 start\n"
    - '2012-06-11 00:00:00.000000'
    - '2012-06-11 00:00:00.000000'
    - 1
  - - 73
    - VitrualBox内のOSで公開サーバを立てる方法。
    - ! '環境はホストOS windows


      http://www.ashibit.net/blog/linux/519/

      ネットワークの設定で、割り当てで、Bridged Adapterを選択、名前をホストPCのNICに設定すればＯＫ。


      おおう・・・。VirtualBox　ブリッジ接続　でぐぐると幸せになれる。

'
    - '2012-06-11 00:00:00.000000'
    - '2012-06-11 00:00:00.000000'
    - 1
  - - 74
    - 桜VPSのUbuntu10.04にrvmをインストール
    - ! '桜VPSのカスタムOSインストーるのubutu10.04にrvmをインストールする際にはまっためも。

      とりあえずgccをインストール。これないと

      Error running '' ./configure --prefix="/home/lain/.rvm/usr"  '', please read
      /home/lain/.rvm/log/ruby-1.9.3-p194/yaml/configure.log

      みたいなエラーが出まくる。


      curl -L get.rvm.io | bash -s stable --rails

      rvm pkg install readline

      rvm pkg install zlib

      rvm pkg install openssl

      rvm reinstall 1.9.3

      sudo apt-get install sqlite3 ruby1.8-dev libsqlite3-dev libsqlite3-ruby



      そのほかにもrvm install 1.9.3とかうつ際に


      これとこれとこれ（bash とかcurlとかの基本的なやつ。）ないと動かないからさきにいれてね！（英語）

      please q


      みたいなんがでたけど、これがでたらおとなしくいれる。


      bundle installがうてない場合は

      rvm pkg install readline

      rvm pkg install zlib

      rvm pkg install openssl

      多分これうってない。


      Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.

      こんなんでたら、

      sudo apt-get install sqlite3 ruby1.8-dev libsqlite3-dev libsqlite3-ruby

      これうってない。



      Ubuntu12にインストール際にはこれでいけた。

      sudo apt-get install libgtk-3-dev libgtk-3-doc

      sudo apt-get install build-essential libtool manpages-dev manpages-ja-dev libtool-doc

      sudo apt-get install curl

      curl -L get.rvm.io | bash -s stable --rails

      source /home/akitani/.rvm/scripts/rvm

      sudo apt-get install sqlite3 ruby1.8-dev libsqlite3-dev libsqlite3-ruby

      sudo apt-get install nodejs

'
    - '2012-06-13 00:00:00.000000'
    - '2012-06-13 00:00:00.000000'
    - 1
  - - 75
    - apache2のディレクトリ構造とか
    - ! 'http://linuxer.seesaa.net/article/42208236.html

      神サイト。


      debian において apache2 パッケージを aptitude 経由でインストールすると、/etc/apache2/ 以下に設定ファイルが生成される。以下に各ディレクトリとファイルの役割を示す。



      /etc/init.d/apache2

      実行ファイル。 initスクリプトなので start, stop, restart　の引数を与えて動作する。


      /etc/apache2/

      以下に設定ファイルが置かれる。


      /etc/apache2/httpd.conf

      本来はこのファイルで設定するが、apache2.conf を include としかかかれていない。ここに設定を記述しても動作はするが、機能毎にファイルを分けるのがdebian流。


      /etc/apache2/apache2.conf

      メイン設定ファイルとなる。各種設定を記述するだけでなく、以下の設定ファイル群も include する。


      /etc/apache2/conf.d/

      文字コード等の設定ファイルが置かれる。


      /etc/apache2/envvars

      起動時オプションなどの追加設定ファイル。


      /etc/apache2/ports.conf

      使用ポートを記述するファイル。Listen行を記述する。


      /etc/apache2/mods-available/

      使用可能（インストール済み）なモジュールのファイルを置く。


      /etc/apache2/mods-enabled/

      現在利用中のモジュールファイルへのシンボリックリンクを置く。（ /etc/apache2/mods-available へのシンボリックリンク）


      /etc/apache2/sites-availble/

      使用可能な各サイトの設定ファイルを置く。内容は VirtualHost 行など。各 VirtualHost 毎に１ファイル（１サイト１ファイルずつ）が望ましい使い方だろう。


      /etc/apache2/sites-enabled/

      現在利用中のサイト設定ファイルへのシンボリックリンクを置く。（ /etc/apache2/sites-available へのシンボリックリンク）

'
    - '2012-06-13 00:00:00.000000'
    - '2012-06-13 00:00:00.000000'
    - 1
  - - 76
    - stpryboardでの画面遷移
    - ! 'ボタンおして別のViewとかはCTRL ドラッグ、ドロップでおk。


      http://d.hatena.ne.jp/SOMTD/20120123/1327763634


      TempViewController *tempVC;

      tempVC = [self.storyboard instantiateViewControllerWithIdentifier:@"TempViewController"];

      //モーダルの表示

      [self presentModalViewController:tempVC animated:YES];


      さらにGUIで

      上記のURLの所を"TempViewController"かけばおk。


      tempVC.modalTransitionStyle = UIModalTransitionStyleCrossDissolve;

      とかでアニメーションを変更できる。

'
    - '2012-06-15 00:00:00.000000'
    - '2012-06-15 00:00:00.000000'
    - 1
  - - 77
    - mongoDBをMACにインストール
    - ! "まず以下の２つのコマンド実行\n$brew update\n$brew install mongodb\nそしたら以下のようなメッセージがでる。\nIf
      this is your first install, automatically load on login with:\n    mkdir -p
      ~/Library/LaunchAgents\n    cp /usr/local/Cellar/mongodb/2.0.6-x86_64/homebrew.mxcl.mongodb.plist
      ~/Library/LaunchAgents/\n    launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mongodb.plist\n\nIf
      this is an upgrade and you already have the homebrew.mxcl.mongodb.plist loaded:\n
      \   launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mongodb.plist\n
      \   cp /usr/local/Cellar/mongodb/2.0.6-x86_64/homebrew.mxcl.mongodb.plist ~/Library/LaunchAgents/\n
      \   launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mongodb.plist\n\nOr
      start it manually:\n    mongod run --config /usr/local/etc/mongod.conf\n\nThe
      launchctl plist above expects the config file to be at /usr/local/etc/mongod.conf.\n\n自分はとりあえずstartupがどうこうってのをいってるコマンドを実行しといた。\n\n起動はこれ\n$mongod
      run --config /usr/local/etc/mongod.conf\n一回起動すれば次回からは以下で起動できる？\n$mongod\n\nんで起動したら、DBにアクセスしてみる。\n$mongo\nこれでおk！\nこんなオプションもある？\n&mongod
      --dbpath=/Users/electronica/mongodb_data &\n"
    - '2012-06-15 00:00:00.000000'
    - '2012-06-15 00:00:00.000000'
    - 1
  - - 78
    - mongoDBとrailsとの連携
    - ! "mongoidを使う。\nrails new hoge -O\nでActiverecoredをインストールしない。\n\ngem 'mongoid'\ngem
      'bson_ext'\nでインストール後、\nrails g  mongoid:config\nでDBとの接続を作成。\nあとは適当にModelでも作ればorマッパーを通してアクセスできる。\n\n・DBに直接アクセスする方法\n$
      mongo\n< show dbs \n< use <db_name> \n\n・timeスタンプを作成\nModelに下記追加\ninclude Mongoid::Timestamps\n"
    - '2012-06-17 00:00:00.000000'
    - '2012-06-17 00:00:00.000000'
    - 1
  - - 79
    - jsonでの配列の格納の仕方
    - ! "{ \"array\" : [\n  \"element1\",\n  \"element2\"\n] }\nこうする。\n\n{ \"array\"
      : [\n  \"element1\",\n  \"element2\",\n] }\n,が末尾にはいるとエラー・・・。\n"
    - '2012-06-18 00:00:00.000000'
    - '2012-06-18 00:00:00.000000'
    - 1
  - - 80
    - SBjsonでgeneratorを使う。
    - ! "SBjsonでnsdictionaryのデータをどうやってjsonにパースするか。\n\nネット探しても参考になりそうな記事が無かったので、ソースみた。\n\nとりあえず怪しげなSBJsonWritterクラスを観察。すると\n(NSString*)stringWithObject:(id)value\nというクラスが。しかしこれは結局\n-
      (NSData*)dataWithObject:(id)object\nをラッピングしてるだけみたい。\n- (NSData*)dataWithObject:(id)objectの中で\nif
      ([object isKindOfClass:[NSDictionary class]])\n\t\tok = [streamWriter writeObject:object];\n\t\n\telse
      if ([object isKindOfClass:[NSArray class]])\n\t\tok = [streamWriter writeArray:object];\n\t\t\n\telse
      if ([object respondsToSelector:@selector(proxyForJson)])\n\t\treturn [self dataWithObject:[object
      proxyForJson]];\n\telse {\n\t\tself.error = @\"Not valid type for JSON\";\n\t\treturn
      nil;\n\t}\nと書いてある。\nどうも引数をどのクラスか判定している様子。\n\nなので\n    NSDictionary *dict = [NSDictionary
      dictionaryWithObjectsAndKeys:  \n                          @\"The iPhone\",
      @\"Today\",  \n                          @\"The World\", @\"Tomorrow\",  \n
      \                         nil];  \n    NSLog(@\"%@\",[[[SBJsonWriter alloc]init]
      stringWithObject:dict]);\nとかくと問題なくデータがとれた。\n"
    - '2012-06-20 00:00:00.000000'
    - '2012-06-20 00:00:00.000000'
    - 1
  - - 81
    - macでphp環境構築
    - ! 'macのlocalhost内部でphpの動作が確認したかったため、phpサーバの環境を構築した。


      ①まずphpのインストール。適当にソース落として、make intall　オプションとかはなしでも問題なかった。

      ②apache2はデフォルトでmacに入っているので、「システム環境設定」の共有からwebサーバにチェックを入れるだけ。

      ③apache2の公開用のフォルダは

      /Library/WebServer/Documents

      にあるので、ここに適当なphpファイルを作っておく。（phpinfoでも書いとくといいんじゃないかな）

      ④これでhttp://localhost/test.phpでアクセスできるのだが、デフォはphpをhtmlとして認識するため、

      sudo vim /etc/apache2/mime.types（アクセスできない場合はchmodで変更）

      に

      AddType application/x-httpd-php .php

      AddType application/x-httpd-php-source .phps

      を最後に追加。

      ⑤httpd.confも

      LoadModule php5_module

      上見たいのなのがコメントアウトされずに書かれているか確認。

'
    - '2012-06-20 00:00:00.000000'
    - '2012-06-20 00:00:00.000000'
    - 1
  - - 82
    - json形式あれこれ
    - ! "jsoは \nkey:\"hoge\"\nでワンセットだが、\nkey:hogeはエラー。\n正し\nkey:nullは許される\n"
    - '2012-06-21 00:00:00.000000'
    - '2012-06-21 00:00:00.000000'
    - 1
  - - 83
    - NSStringでの改行の取り除き方
    - ! "NSMutableString *mst = [NSMutableString stringWithString:@\"hello\\nhello\"];\n
      \   [mst replaceOccurrencesOfString:@\"\\n\" withString:@\"\" options:0 range:NSMakeRange(0,
      [mst length])];\n    NSLog(@\"%@\",mst);\n\nこれでおk\n\n    NSString *str = [hoge
      stringByTrimmingCharactersInSet:\n                     [NSCharacterSet characterSetWithCharactersInString:@\"\\n\"]];\n
      \   NSString *str2 = [hoge stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];\n\nとかもかいたけどなぜかうまく取り除けなかった。\n"
    - '2012-06-21 00:00:00.000000'
    - '2012-06-21 00:00:00.000000'
    - 1
  - - 84
    - macアドレスの取り方
    - ! "Objective-cでどうやってMacアドレスをとるかだが、\n#include <sys/socket.h>\n#include <sys/sysctl.h>\n#include
      <net/if.h>\n#include <net/if_dl.h>\n\n\n\n- (NSString *)getMacAddress\n{\n    int
      \                mgmtInfoBase[6];\n    char                *msgBuffer = NULL;\n
      \   size_t              length;\n    unsigned char       macAddress[6];\n    struct
      if_msghdr    *interfaceMsgStruct;\n    struct sockaddr_dl  *socketStruct;\n
      \   NSString            *errorFlag = NULL;\n    \n    // Setup the management
      Information Base (mib)\n    mgmtInfoBase[0] = CTL_NET;        // Request network
      subsystem\n    mgmtInfoBase[1] = AF_ROUTE;       // Routing table info\n    mgmtInfoBase[2]
      = 0;              \n    mgmtInfoBase[3] = AF_LINK;        // Request link layer
      information\n    mgmtInfoBase[4] = NET_RT_IFLIST;  // Request all configured
      interfaces\n    \n    // With all configured interfaces requested, get handle
      index\n    if ((mgmtInfoBase[5] = if_nametoindex(\"en0\")) == 0) \n        errorFlag
      = @\"if_nametoindex failure\";\n    else\n    {\n        // Get the size of
      the data available (store in len)\n        if (sysctl(mgmtInfoBase, 6, NULL,
      &length, NULL, 0) < 0) \n            errorFlag = @\"sysctl mgmtInfoBase failure\";\n
      \       else\n        {\n            // Alloc memory based on above call\n            if
      ((msgBuffer = malloc(length)) == NULL)\n                errorFlag = @\"buffer
      allocation failure\";\n            else\n            {\n                // Get
      system information, store in buffer\n                if (sysctl(mgmtInfoBase,
      6, msgBuffer, &length, NULL, 0) < 0)\n                    errorFlag = @\"sysctl
      msgBuffer failure\";\n            }\n        }\n    }\n    \n    // Befor going
      any further...\n    if (errorFlag != NULL)\n    {\n        NSLog(@\"Error: %@\",
      errorFlag);\n        return errorFlag;\n    }\n    \n    // Map msgbuffer to
      interface message structure\n    interfaceMsgStruct = (struct if_msghdr *) msgBuffer;\n
      \   \n    // Map to link-level socket structure\n    socketStruct = (struct
      sockaddr_dl *) (interfaceMsgStruct + 1);\n    \n    // Copy link layer address
      data in socket structure to an array\n    memcpy(&macAddress, socketStruct->sdl_data
      + socketStruct->sdl_nlen, 6);\n    \n    // Read from char array into a string
      object, into traditional Mac address format\n    NSString *macAddressString
      = [NSString stringWithFormat:@\"%02X:%02X:%02X:%02X:%02X:%02X\", \n                                  macAddress[0],
      macAddress[1], macAddress[2], \n                                  macAddress[3],
      macAddress[4], macAddress[5]];\n    \n    // Release the buffer memory\n    free(msgBuffer);\n
      \   \n    return macAddressString;\n}\nでとれる。\n\nちなみにudidの取得の仕方はこれ\n[UIDevice
      currentDevice].uniqueIdentifier\n"
    - '2012-06-21 00:00:00.000000'
    - '2012-06-21 00:00:00.000000'
    - 1
  - - 85
    - ページネーションの作り方
    - ! 'kaminariを使う。

      gem ''kaminari''


      コントローラのindexメソッドに

      Quiz.where(project_id: params[:project_id]).page params[:page]

      と書いておいて

      indexのviewに

      <%= paginate @quizzes %>

      とかけばおk



      $ rails g kaminari:config

      で作ったファイルにデフォルトのページ数とか色々かける。

'
    - '2012-06-22 00:00:00.000000'
    - '2012-06-22 00:00:00.000000'
    - 1
  - - 86
    - git逆引き
    - ! '・うっかりファイルを消してしまった。でもまだコミットしてない。

      git checkout HEAD -- 消したファイル名


      ・色々ファイル変更した。でもまだコミットしてない（未確認要注意）

      git checkout -f


      ・ファイルをコミット対象から外す。

      $ vi .gitignore

      # 以下を追加

      cache/


      ・特定のバージョンに戻す。

      git reset --hard feafjowiejoaij//これだとgit logを抹消しただけで競合しているファイルは反映してない？

      git checkout -f//これでファイルが指定したバージョンの物に戻る。

      git clean -f

      ただし上の方法は戻すとこのバージョン以降にあった物は全て抹消されてしまう。そのため

      git checkout f2791447 のほうがいい？（これ未確認）


      ・Gitでマージした際にバイナリファイルがコンフリクトした場合

      現在いるブランチaにブランチbをマージした際に、db/development.sqlite3がコンフリクトした場合。

      ブランチaの方を採用する場合

      git checkout --ours db/development.sqlite3

      ブランチbの方を採用する場合

      git checkout --theirs db/development.sqlite3


      ・Gitでremote系

      git remote add origin(名前) url

      git push origin master

'
    - '2012-07-03 00:00:00.000000'
    - '2012-07-03 00:00:00.000000'
    - 1
  - - 87
    - 本番環境にする方法
    - ! 'railsをproductionで動かす手順


      rails s -e production　これで本番環境で起動する。


      が、まずdatabase.yml等の設定を変更しないといけない。

      mongoだったらmongoid.ymlを変更。


      次に

      ActionView::Template::Error (application.css isn''t precompiled)

      っていうエラーがでる。

      これはhttp://d.hatena.ne.jp/tetsuyai/20110920/1316504421をみてやればよいのだが

      個人的に

      FILE: $RAILS_ROOT/config/environments/production.rb


      # Don''t fallback to assets pipeline if a precompiled asset is missed

      config.assets.compile = true


      で無ければ作るっていうのが安全かと思う。

'
    - '2012-07-06 00:00:00.000000'
    - '2012-07-06 00:00:00.000000'
    - 1
  - - 88
    - mongodbのbackupを自動的に取る方法
    - ! "crontab expectを組み合わせて使う。\n保存場所はbitbuketに保存する。\n\nまず ~/.crontab\n\n* 0 * *
      * ~/crontab_shell/mongo_backup.sh\n\n次に~/crontab_shell/mongo_backup.sh\nまたchmod
      +x mongo_backup.sh\nまた~/backup/mongo/　で git initをしておく事。\n\n#!/bin/sh\n\n/usr/local/bin/mongodump
      -o ~/backup/mongo/\ncd ~/backup/mongo/\ngit add .\ngit commit -m \"auto_backup\"\nexpect
      -c \"\nset timeout 20\nspawn git push https://??????????/mongodump.git master\nexpect
      \\\"Password:\\\"\nsend \\\"hogehoge\\n\\\"\nexpect {\n    \\\"denied\\\" {
      exit 1 }\n    eof { exit 0 }\n  }\n\"   \n\nこれで\n$crontab ~/.crontab\n\nとすれば毎日24時に自動的にバックアップをとり、差分があればコミットする。\n"
    - '2012-07-06 00:00:00.000000'
    - '2012-07-06 00:00:00.000000'
    - 1
  - - 89
    - NSUserDefaultsに自作クラスを登録する
    - ! "NSUserDefaultsには自作クラスは登録できない。そこでNSData型にシリアライズして登録する必要性がある。\n\n自作クラス内部。siritoriは自作クラスのメンバ\n-
      (void)encodeWithCoder:(NSCoder *)coder {\n    [coder encodeInteger:stage_id
      forKey:@\"stage_id\"];\n    [coder encodeBool:is_clear forKey:@\"is_clear\"];\n
      \   [coder encodeBool:is_locked forKey:@\"is_locked\"];\n    [coder encodeFloat:best_time
      forKey:@\"best_time\"];\n    [coder encodeInteger:level forKey:@\"level\"];\n
      \   NSData* siritoriData = [NSKeyedArchiver archivedDataWithRootObject:siritori];\n
      \   [coder encodeObject:siritoriData forKey:@\"siritori\"];\n}\n- (id)initWithCoder:(NSCoder
      *)coder {\n    if (self = [super init]) {\n        stage_id = [coder decodeIntegerForKey:@\"stage_id\"];\n
      \       is_clear = [coder decodeBoolForKey:@\"is_clear\"];\n        is_locked
      = [coder decodeBoolForKey:@\"is_locked\"];\n        best_time = [coder decodeFloatForKey:@\"best_time\"];\n
      \       level = [coder decodeIntForKey:@\"level\"];\n        NSData* sititoriData
      = [coder decodeObjectForKey:@\"siritori\"];\n        siritori = [NSKeyedUnarchiver
      unarchiveObjectWithData:sititoriData];\n    }\n    return self;\n}\n\n\n\nNSUserDefaultに登録するNSMutableDictionry
      *stagesへの登録方法\n[stages setObject:[NSKeyedArchiver archivedDataWithRootObject:stage]
      forKey:[[NSString alloc] initWithFormat:@\"%d\",@\"key\"];//NSDataにシリアライズして登録。\n\n取り出し方法\nNSData
      *nsdata_stage = [nsdata_dic objectForKey:[keys objectAtIndex:i]];//NSDataからデシリアライズ\nStage
      *stage = [NSKeyedUnarchiver unarchiveObjectWithData:nsdata_stage];\n"
    - '2012-07-13 00:00:00.000000'
    - '2012-07-13 00:00:00.000000'
    - 1
  - - 90
    - iosでhtml parserを実装する
    - ! "libxml2とObjective-C-HMTL-Parserを組み合わせて実装する。\n\nxmlパーサーは色々あるんだけど、google.comを解析させてもエラーはいて止まる始末・・・。\nそこでhtmlのbodyは別から持ってくる。\n\nまずlibxml2.dylibをプロジェクトに追加する。やり方はぐぐる\nんでhttps://github.com/zootreeves/Objective-C-HMTL-Parserからソースをゲット。これはlibxml2のラッパーなのでlibxml2は必須。\nARCは非対応なので-fno-objc-arcを指定しておく。\n\n使い方はこう。\n#import
      \"HTMLParser.h\"\n\n    NSString *html = [http sendGetRequest:@\"http://google.com\"];//パクってきたlibらり\n
      \   HTMLParser *parser = [[HTMLParser alloc] initWithString:html error:&error];\n
      \   \n    if (error) {\n        NSLog(@\"Error: %@\", error);\n        return;\n
      \   }\n    \n    HTMLNode *bodyNode = [parser body];\n    \n    NSArray *inputNodes
      = [bodyNode findChildTags:@\"span\"];//spanタグの物を全部とってくる\n    \n    for (HTMLNode
      *inputNode in inputNodes) {\n        if([[inputNode getAttributeNamed:@\"class\"]
      isEqualToString:@\"name\"]){//そのなかでclass属性がnameの物にしぼる。\n            NSLog(@\"name
      = %@\", [inputNode contents]);//しぼった物のcontents(<span>hello</span>でいうhelloの部分)を取る。\n
      \       }\n    }\n"
    - '2012-07-19 00:00:00.000000'
    - '2012-07-19 00:00:00.000000'
    - 1
  - - 91
    - GameCenterの設置
    - ! 'http://golog.plus.vc/iphone/2867/

      をみてがんばる。


      固定小数点数を送りたい場合は

      Fixed Pointを指定すればいいのだが、

      scoreReporter.valueはintしか入らない。ただしこの場合1を送った場合は0.1になるので

      01*10とかして送ってあげる。


      ソートの順番は

      High to Row 　か　Row to High

      の２つから選ぶことができる。デフォルトはRow to Highなのでスコアー形式のタイプの人は要注意。

      Row to Highはタイマータイプに向いている。

      さらにこれは逆のデータで上書きできない事に注意。

      具体的にはHigh to Rowを選んだ場合、最初に500と送って、次に200を送っても値が200で上書きされることはない。500のままである。

'
    - '2012-07-27 00:00:00.000000'
    - '2012-07-27 00:00:00.000000'
    - 1
  - - 92
    - ソーシャルログイン機能のrailsへの実装
    - ! "oauthを使って実装する。そのラッパーとしてOmniauthを、さらにこのラッパーとしてomniauth-scaffoldを使う。\n\nhttps://github.com/shu0115/omniauth-scaffold\n基本上記参照。\n\n具体的には\ngem
      'rails_config'#これはなくていい？\ngem 'omniauth-scaffold', :group => :development\ngem
      'omniauth-twitter'\ngem 'omniauth-facebook'\ngem 'omniauth-github'\n\nをインストールして、\n$
      rails g omniauth:scaffold\n\nconfig/settings.local.ymlにいい感じのkeyを書く。\n（keyはhttps://dev.twitter.com/appsとかにアクセスして作る。その後、設定でreadonlyになっているのをread-writeにする。Callback
      URLも書いた方がいいかも。）\n\n$ bundle install\n$ rails s\n\nんでhttp://127.0.0.1:3000/にアクセスするとTopページがかきかわっているので、ログインボタンを押したらログインできる気がする。\n\n\nエラー対応\n・401
      Unauthorizedが返ってくる。\n対策：readonlyになってる。readwriteに。\n\n\n&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;--\nもう一つの実装方法\nhttp://blog.twiwt.org/e/c3afce\nここをみてその通りにがんばる。\nただし現時点でのtwitterではうまく動かない。twitterからのレスポンスがかわったせいだと思われる。\n具体的には「User
      モデルの内容」を以下のように変更する。\nclass User < ActiveRecord::Base\n  # attr_accessible :title,
      :body\n  def self.create_with_omniauth(auth)\n    create! do |user|\n      user.provider
      = auth[\"provider\"]\n      user.uid = auth[\"uid\"]\n      user.name = auth[\"info\"][\"name\"]\n
      \     user.screen_name = auth[\"info\"][\"nickname\"]\n    end\n  end\nend\n\n\n&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;\nrailsではなく生のrubyファイルに実装する場合\nhttp://route477.net/w/?RubyTwitterJa\nが便利。簡単にかけてすぐ実行\nちなみにtwitterの改行コードは\\r\\nみたいです、おすし。\n"
    - '2012-08-02 00:00:00.000000'
    - '2012-08-02 00:00:00.000000'
    - 1
  - - 93
    - iphoneでのDB作成手順
    - ! "http://akabeko.me/blog/2011/11/ios-sqlite-fmdb/\nを参考にすればおk。\n\n注意点：\nこのソースをみるとFMDatabaseのインスタンスを使いまわしてやればいいように思えるが、それをやると動作が急に不安定になる。具体的にいうとたまにおちる。\nなので一回、一回クエリを発行する毎に下のようにFMDatabaseのインスタンスを作成し直し、open
      closeもやってやらないといけないようだ。\n\tFMDatabase* db = [self getConnection];\n\t[db open];\n\t\n\tBOOL
      isSucceeded = [db executeUpdate:SQL_UPDATE, book.author, book.title, book.copyright,
      [NSNumber numberWithInteger:book.bookId]];\n\t\n\t[db close];\n\n\n以下に実際に自分が書いたソースを書く。\n#import
      \"FMDatabase.h\"\n\n\n    NSArray*    paths = NSSearchPathForDirectoriesInDomains(
      NSDocumentDirectory, NSUserDomainMask, YES );\n    NSString*   dir   = [paths
      objectAtIndex:0];\n    FMDatabase* db    = [FMDatabase databaseWithPath:[dir
      stringByAppendingPathComponent:@\"test.db\"]];\n    \n    \n    [db open];\n
      \   NSString*   sql;\n    sql = @\"CREATE TABLE IF NOT EXISTS users (id INTEGER
      PRIMARY KEY AUTOINCREMENT, name TEXT);\";\n    [db executeUpdate:sql];\n    \n
      \   sql = @\"INSERT INTO users (name) VALUES (?)\";\n    [db executeUpdate:sql,
      @\"名前\"];\n    \n    sql = @\"SELECT * FROM users;\";\n    FMResultSet*    results
      = [db executeQuery:sql];\n    while( [results next] )\n    {\n        NSLog(@\"%@\",[results
      stringForColumn:@\"name\"]);\n    }\n    \n    [db close];\n"
    - '2012-08-07 00:00:00.000000'
    - '2012-08-07 00:00:00.000000'
    - 1
  - - 94
    - iosでのpush通知の設定方法
    - ! "サーバ側の言語はrubyとする。\n\nhttp://www.spritle.com/blogs/2012/03/21/iphone-push-notification-using-ruby/\nhttp://iphone.longearth.net/2009/09/01/%E3%80%90iphone%E3%80%91push-notification%E3%81%AE%E5%AE%9F%E8%A3%85%E6%96%B9%E6%B3%95/\nここが神サイトなのでこれをみてがんばる。\n最終的には上の
      gem を使って実装するが、英語つらいので、 itunsconectとかの方は下をみてやる感じで。\n\n以下上記のサイトを使い際の補足。\n・pem
      formatを作成する際にちょとわかりにくいが、▽マークを押して「秘密鍵」と「証明書」を同時に選んで証明書を作成している。\n・openssl pkcs12
      -in CertificateName.p12 -out CertificateName.pem -nodes\nというコマンドを実行している場所があるが、この「CertificateName.p12」は「証明書.p12」の名前を変更後の物だと思われる。またCertificateName.pemはcert.pemに変更しておいたほうがいい。\n・devicetokenを所得する方法であるが、ここに書いてる方法はよくわからん。iphone側でこう書いたら取得できる。書くクラスは「プロジェクト名AppDelegate」という自動生成されたクラスに書けばよい。\n・APNS
      GEMを使えば確かに英語は送れる。でも日本語はおくれない。なぜなら Unicode文字列に変換してくれないから。そのため手動で直す必要性があるみたい\n\n@implementation
      ???AppDelegate\n\n\n@synthesize window=_window;\n\n@synthesize viewController=_viewController;\n\n//
      アプリケーション起動直後に呼ばれる\n- (BOOL)application:(UIApplication *)application\ndidFinishLaunchingWithOptions:(NSDictionary
      *)launchOptions\n{    \n\n    [[UIApplication sharedApplication]\n     registerForRemoteNotificationTypes:(UIRemoteNotificationTypeAlert|UIRemoteNotificationTypeBadge|UIRemoteNotificationTypeSound)];//Push通知機能\n
      \   \n    return YES;\n}\n\n// デリゲーションメソッド\n- (void)application:(UIApplication
      *)app\ndidRegisterForRemoteNotificationsWithDeviceToken:(NSData *)devToken {\n
      \   NSLog(@\"deviceToken: %@\", [devToken description]); \n    //NSLog(@\"%s\",[devToken
      bytes]);\n}\n- (void)application:(UIApplication *)app\ndidFailToRegisterForRemoteNotificationsWithError:(NSError
      *)err {\n    NSLog(@\"Errorinregistration.Error:%@\",err);\n}\n"
    - '2012-08-22 00:00:00.000000'
    - '2012-08-22 00:00:00.000000'
    - 1
  - - 95
    - rubyでのactiverecoredのhelper
    - ! "相対的なrequreの指定方法も書いてる。\nactiverecordを生で使う機会があって、読み込みとか面倒なのでつくったモジュール。ファイル名はなんでもいい。\nLOAD_PATHを書き換えるより、require_relative
      使ったほうがいいみたい。これは上のディレクトリにいけない。\n\n# -*- encoding: UTF-8 -*-\nrequire \"active_record\"\n$LOAD_PATH
      << File.dirname(__FILE__)\nrequire 'models/talk'\nrequire 'models/counseling'\n\nActiveRecord::Base.establish_connection(\n
      \ :adapter  => \"mysql2\",\n  :host     => \"localhost\",\n  :username => \"root\",\n
      \ :password => \"\",\n  :database => \"development\",\n    port: 3306,\n    socket:
      '/tmp/mysql.sock'\n)\n"
    - '2012-08-27 00:00:00.000000'
    - '2012-08-27 00:00:00.000000'
    - 1
  - - 96
    - activerecoredに自前のクエリを追加したい
    - ! '対象となるmodelのクラスに

      scope :search_field, lambda { |field_name,search_word| where(field_name => search_worde)
      }

      こんな感じで追加すると

      model.search_field(1,2)

      みたいにアクセスできる。

      self.search_field

      でもいいきもするが・・・。

'
    - '2012-08-29 00:00:00.000000'
    - '2012-08-29 00:00:00.000000'
    - 1
  - - 97
    - mongoidでのwhereに対するorの指定の仕方
    - ! "mongoidで複数の条件に合致した物を全部とってきたいみたいな場合はこうかく。\n\nwhere_query = Array.new\n[\"fileld1\",\"field2\"].each
      do |field_name|\n    where_query << {field_name => Regexp.new(\".*\" + search_word
      + \".*\")}\nend\n    \nreturn Quiz.where('$or' => where_query)\n"
    - '2012-08-29 00:00:00.000000'
    - '2012-08-29 00:00:00.000000'
    - 1
  - - 98
    - mongodb で自動バックアップ
    - ! "crontab expectを組み合わせて使う。\n保存場所はbitbuketに保存する。\n\nまず ~/.crontab\n\n* 0 * *
      * ~/crontab_shell/mongo_backup.sh\n\n次に~/crontab_shell/mongo_backup.sh\nまたchmod
      +x mongo_backup.sh\nまた~/backup/mongo/　で git initをしておく事。\n\n#!/bin/sh\n\n/usr/local/bin/mongodump
      -o ~/backup/mongo/\ncd ~/backup/mongo/\ngit add .\ngit commit -m \"auto_backup\"\nexpect
      -c \"\nset timeout 20\nspawn git push https://??????????/mongodump.git master\nexpect
      \\\"Password:\\\"\nsend \\\"hogehoge\\n\\\"\nexpect {\n    \\\"denied\\\" {
      exit 1 }\n    eof { exit 0 }\n  }\n\"   \n\nこれで\n$crontab ~/.crontab\n\nとすれば毎日24時に自動的にバックアップをとり、差分があればコミットする。\n\nなお\n*/10
      * * * * ruby /home/lain/ruby/lain_bot/bot.rb 1>/home/lain/ruby/lain_bot/cron.log
      2>/home/lain/ruby/lain_bot/cron_error.log\nのようにしておくとログをメールではなくファイルに書くようになる。　＞だと上書きするのでいやなら＞＞にすればよし。\n"
    - '2012-09-02 00:00:00.000000'
    - '2012-09-02 00:00:00.000000'
    - 1
  - - 99
    - mysqlでの文字化け
    - ! 'まずはとりあえず

      SHOW CREATE TABLE tablename

      をしてcharsetを確認する。


      もしここがutf-8意外なら

      my.confを書き直して（設定はggr）

      再起動後（sudo /etc/init.d/mysql restart）(Ubuntu仕様)、

      DROP DATABASE DB名

      で落として再度DBを作り直せばutf-8になってるはず。

'
    - '2012-09-07 00:00:00.000000'
    - '2012-09-07 00:00:00.000000'
    - 1
  - - 100
    - rubyをcrontabで実行する
    - ! "やろうとしたらはまったのでメモ。\ncrontabでは通常時のPATHとは違うので、指定してやらないとrubyすら実行できない。さらにGEMを読み込むためにはGEM_HOMEを指定してやる必要性がある。\nなので最終的にはこうなった。PATHとかは動く環境のものをそのままコピーしてきたらいいと思う。\nLANG
      = en_US.UTF-8\nGEM_HOME = /home/lain/.rvm/gems/ruby-1.9.3-p194 \nPATH = /home/lain/.rvm/gems/ruby-1.9.3-p194/gems/:/home/lain/.rvm/gems/ruby-1.9.3-p194/bin:/home/lain/.rvm/gems/ruby-1.9.3-p194@global/bin:/home/lain/.rvm/rubies/ruby-1.9.3-p194/bin:/home/lain/.rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:\n\n23
      9,13,19 * * * ruby /home/lain/ruby/lain_bot/bot.rb 1>/home/lain/ruby/lain_bot/cron.log
      2>/home/lain/ruby/lain_bot/cron_error.log\n"
    - '2012-09-17 00:00:00.000000'
    - '2012-09-17 00:00:00.000000'
    - 1
  - - 101
    - rssの特定のサイト内での探し方
    - ! 'RSSフィードが目的のサイトにあるかどうかをどうやって調べるのだろうか？

      それはおそらくheadタグ内にある。

      <link rel=''alternate''>と書かれているタグのhrefのURL先に、atom.xmlみたいなのがおかれているはず。


      実例をだすと

      <link rel="alternate" type="application/rss+xml" title="RSS" href="/hotentry.rss">

      こんな感じ。

'
    - '2012-09-18 00:00:00.000000'
    - '2012-09-18 00:00:00.000000'
    - 1
  - - 102
    - ruby xml 操作
    - ! "REXMLはxmlを操作するためのライブラリ。以下に使い方を書く。\n\nrank_in_apps = Hpricot(open(\"https://play.google.com/store/apps/collection/topselling_free\")).search(\"ul.snippet-list
      li.goog-inline-block\")\n\n rss = REXML::Document.new \n rss << REXML::XMLDecl.new('1.0',
      'UTF-8') \n rss.add_element(\"rss\", { \"version\"=>\"2.0\"})\n\nchannel = REXML::Element.new(\"channel\")\nchannel.add_element(\"title\").add_text
      \"Android Ranking\"\nchannel.add_element(\"link\").add_text \"https://play.google.com/store/apps/collection/topselling_free\"\n\nelem
      = rank_in_apps[0].search(\"a.title\").first\nitem = channel.add_element(\"item\")\n"
    - '2012-09-20 00:00:00.000000'
    - '2012-09-20 00:00:00.000000'
    - 1
  - - 103
    - iPhone アプリ　公開停止
    - ! 'iphoneのアプリを一時的に公開停止にする方法。


      公開停止したいアプリのトップページから「Rights and Pricing」を押して、公開したい国を選択してい所のチェックを全て外せばおk

'
    - '2012-09-25 00:00:00.000000'
    - '2012-09-25 00:00:00.000000'
    - 1
  - - 104
    - RSSの文法等
    - ! "文法チェックサイト\nhttp://feedvalidator.org/\n\n自分でつくったrssの例：\n<?xml version='1.0'
      encoding='utf-8'?>\n<rss version=\"2.0\">\n    <channel>\n        <title>\n
      \           Android Ranking\n        </title>\n        <link>\n            https://play.google.com/store/apps/collection/topselling_free\n
      \       </link>\n        <description>\n            rss_test\n        </description>\n
      \       <item>\n            <title>\n                Googleマップのストリートビュー\n            </title>\n
      \           <link>\n                https://play.google.com/store/apps/details?id=com.google.android.street&feature=apps_topselling_free\n
      \           </link>\n            <description>\n                Googleマップのストリートビューで、実際に通りを歩くように世界を探索しよう。
      Googleマップのストリートビューで、実際に道を歩くように世界中でバー...\n            </description>\n        </item>\n
      \   </channel>\n</rss>\n"
    - '2012-09-27 00:00:00.000000'
    - '2012-09-27 00:00:00.000000'
    - 1
  - - 105
    - mongoでのクエリ逆引き
    - ! '・Update文

      http://www.mongodb.org/display/DOCS/SQL+to+Mongo+Mapping+Chart

      を参照。


      project_idが"503cb6a466e54144cb000005"の物の、update_versionを10に変更したい場合、

      db.quizzes.update({project_id:"503cb6a466e54144cb000005"},{$set:{update_version:10}},false,true)


      ・findでNot

      db.quizzes.find({project_id:"5035da5866e54112af000355",update_version:{$nin
      : [1]}})

      $nin書いて[]を書くと否定形？

'
    - '2012-09-27 00:00:00.000000'
    - '2012-09-27 00:00:00.000000'
    - 1
  - - 106
    - 桜VpsでrubyでHTTPS接続するとエラー？
    - ! 'Macではでなかったが、桜VPSでrubyでHTTPS系のサイトに接続するとエラーがでた。


      以下がエラーの内容：

      /home/lain/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/net/http.rb:799:in `connect'':
      SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate
      verify failed (OpenSSL::SSL::SSLError)


      対処方法は


      ```ruby

      require ''openssl''


      OpenSSL::SSL::VERIFY_PEER = OpenSSL::SSL::VERIFY_NONE

      ```


      を書き足すらしい。書き足す場所は悩んだけど、initalizersの中のdevise.rbに追加した。


      というかあれだね。どうもSSL証明書をいれてくれって警句でてて、うっせぇ、って無視するように設定してるっぽいね。

'
    - '2012-09-27 00:00:00.000000'
    - '2012-09-27 00:00:00.000000'
    - 1
  - - 107
    - sqliteのactiverecoredのConfig例
    - ! "railsをつかわずに、Activerecoredでsqlite3に接続する際、rubyに直接Configを書いた例を記述する。\n\nrequire
      \"active_record\"\nrequire_relative \"./../app/models/news\"#つかうModel\n\nActiveRecord::Base.establish_connection(
      \   \n  :adapter => \"sqlite3\",\n  :database => \"./../db/development.sqlite3\",\n
      \ :pool => 5,\n  :timeout => 5000\n)\n"
    - '2012-09-29 00:00:00.000000'
    - '2012-09-29 00:00:00.000000'
    - 1
  - - 108
    - activerecord 時間 比較
    - ! "activerecoredでwhereなどを使う際に、created_atなどを指定して時間を比較したいことはおおい。\nそこで便利なGem「squeel」を紹介する。https://github.com/ernie/squeel\n\n使いかたは\n
      @news = News.where{created_at >= 1.hours.ago}\nみたいに使えばいい。ここで注意すべきのはWhereを{}で使っている事だ。（）ではないから注意。\nまたcreated_atのように:を使わないので注意。\n"
    - '2012-09-29 00:00:00.000000'
    - '2012-09-29 00:00:00.000000'
    - 1
  - - 109
    - ruby パス 取得 現在
    - ! 'rubyで現在実行されているrubyファイルのディレクトリが欲しいということがあった。


      これをやるには

      File.expand_path(__FILE__)

      をやればとれるのだが、これでは/home/hoge.rbのようにrbまでとってしまう。こうなると.. 等をつかって上のディレクトリに移動することができない。

      そこで

      File.expand_path(__FILE__)[0..File.expand_path(__FILE__).rindex("/")]

      とかいた。

      これで/home/がとれるようになった。

'
    - '2012-09-30 00:00:00.000000'
    - '2012-09-30 00:00:00.000000'
    - 1
  - - 110
    - mongodbでのindexの付与
    - ! 'mongoに対するindexの張り方


      http://www.mongodb.org/pages/viewpage.action?pageId=5800049#%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9-%E8%A4%87%E5%90%88%E3%82%AD%E3%83%BC%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9

      を参照。


      具体例は、thingsというテーブルのjとnameカラムに対する複合keyindexを作りたかった場合

      db.things.ensureIndex({j:1, name:-1});

      こんな感じ。

      1とか-1は昇順降順を指定するための物。

      単品のindexの張り方は

      db.things.ensureIndex({j:1});

'
    - '2012-10-03 00:00:00.000000'
    - '2012-10-03 00:00:00.000000'
    - 1
  - - 111
    - mongodbでの負荷確認
    - ! "db.projects.find()\n例えばこんなクエリがどれくらい負荷をかかるか確かめる方法として\n.explain()をつければわかるようになる。具体的には\ndb.projects.find().explain()\nを実行するとおk。\n\n・結果\n{\n\t\"cursor\"
      : \"BasicCursor\",\n\t\"nscanned\" : 57,#いくつのテーブルを検索したか\n\t\"nscannedObjects\"
      : 57,\n\t\"n\" : 57,\n\t\"millis\" : 0,\n\t\"nYields\" : 0,\n\t\"nChunkSkips\"
      : 0,\n\t\"isMultiKey\" : false,\n\t\"indexOnly\" : false,\n\t\"indexBounds\"
      : {\n\t\t#ここに検索時に使用されたindexがあれば表示される\n\t}\n}\n\nあとはindexとかを張って\nnscannedの値が下がればおk\n"
    - '2012-10-03 00:00:00.000000'
    - '2012-10-03 00:00:00.000000'
    - 1
  - - 112
    - linux 負荷 確認
    - ! '・Topコマンドを使って確認する方法

      現在の負荷を知りたい場合はTopコマンドが便利。

      http://itpro.nikkeibp.co.jp/article/Watcher/20060404/234528/

      参照。


      top - 14:40:06 up 98 days, 15:59,  2 users,  load average: 1.18, 1.12, 1.07

      Tasks:  96 total,   1 running,  95 sleeping,   0 stopped,   0 zombie

      Cpu(s): 12.8%us,  0.3%sy,  0.2%ni, 86.2%id,  0.0%wa,  0.2%hi,  0.3%si,  0.0%st

      Mem:   1023268k total,   906872k used,   116396k free,    87660k buffers

      Swap:  2995192k total,    10696k used,  2984496k free,   261992k cached


      loadaverageはロードアベレージは処理を待っているプロセスの平均数を待っている数。1以下なら待ちがないという事でいい感じ。

      Cpu(s)の見方はhttp://q.hatena.ne.jp/1141721240を参照。

      ここで重要なのはidこれはアイドリングの待ちをしているCPUのパーセント表示。これが少ないほどヤバい。


      Memは当てにしちゃ駄目。開いてるMemoryはキャッシュに当てられているから当てにならない。

      具体的にはfreeコマンドを使う。




      ・特定の時間のAverageを確認する方法。

      平均的な負荷を確認する方法はSarを使ったほうがいい？。

      インストール方法はhttp://d.hatena.ne.jp/ksaito11/20100204/1265298538を参照。

      ただし apt-get install ""だからね。


      使い方はhttp://d.hatena.ne.jp/tetsuyai/20120105/1325750731を参照。


      ちなみに日別のログデータをみる場合は、

      sar -f /var/log/sysstat/sa03

'
    - '2012-10-03 00:00:00.000000'
    - '2012-10-03 00:00:00.000000'
    - 1
  - - 113
    - rubyでの正規表現逆引き
    - ! '・特定の文字に囲まれた物を取り出したい

      "192.168.1.3 - - [11/Jun/2012:23:59:28 +0900] \"GET / HTTP/1.1\" 200 44\n"

      こんな文字列があったとして、[]の中を取りたい場合は

      l.scan(/\[.*\]/)

      でおk

'
    - '2012-10-03 00:00:00.000000'
    - '2012-10-03 00:00:00.000000'
    - 1
  - - 114
    - linux 負荷 通知 monit
    - ! "UuntuでロードバランサーやCPUが一定の使用率を超えた場合に、メールでAlertを知らせるという仕組みの作り方。\n\nなんぞ色々やり方があるみたいだけど、今回は「monit」を使う。\n参照http://l-w-i.net/t/monit/conf_001.txt　設定ファイルについて色々かいてある。\n\napt-get
      install monit\nでインストールする。\n\nsudo vim /etc/default/monit\nでstartup=０.を１に変える。\n\nsudo
      /etc/init.d/monit start\nconfigがないって怒られる。\n\nsudo vim /etc/monit/monitrcで設定ファイルを開き、大量のコメントアウトの末尾にでも以下を追加する。\n\nset
      daemon  120           # １２０秒おきに実行\n    with start delay 240  \nset logfile /var/log/monit.log\nset
      idfile /var/.monit.id\nset statefile /var/.monit.state\nset httpd port 2812#Webページの管理画面。使ってないので適当。\n#
      アラートメールの送信元\nset mailserver smtp.gmail.com port 587 username \"アカウント名\" password
      \"パスワード\" using TLSV1\n# アラートメールの内容\n# -> 以下の内容を元に送信される\nset mail-format {\n
      From: monit-MESSANGER@$HOST\n Subject: $HOST monit alert -- $EVENT $SERVICE\n
      message:$EVENT Service $SERVICE\n      Date:        $DATE\n      Action:      $ACTION\n
      \     Host:        $HOST\n      Description: $DESCRIPTION\n\n monit detected
      alert.\n please check message or log.\n}\nset alert メールアドレス#受け取り先\n\ncheck system
      fedora.private.jp#どんな状況でアラート送るか\n  if loadavg (5min) > 1 then alert\n  if cpu
      usage (user) > 70% then alert\n  if cpu usage (system) > 30% then alert\n  if
      memory usage > 75% then alert\n\nあとはサービスを再起動でおk。\n"
    - '2012-10-06 00:00:00.000000'
    - '2012-10-06 00:00:00.000000'
    - 1
  - - 115
    - Ubuntuでfptサーバを立ち上げる
    - ! 'sudo apt-get install vsftpd

      これでインストールする。


      sudo vim /etc/vsftpd.confで開いて

      write_enable=YESにする。


      sudo /etc/init.d/vsftpd restart

      これで起動する。

'
    - '2012-10-09 00:00:00.000000'
    - '2012-10-09 00:00:00.000000'
    - 1
  - - 116
    - crontabでhpricot
    - ! '/usr/lib/ruby/gems/1.9.1/gems/hpricot-0.8.4/lib/hpricot/builder.rb:9:in `gsub'':
      invalid byte sequence in US-ASCII (ArgumentError)

      とかいうエラーがcrontabでhtpricotを使った際に出る問題。


      これはhttp://uenomemo.blog31.fc2.com/blog-entry-606.htmlでも書かれているがcrontabは$LANGを読み込まないかららしい。

      そこでcrontabの先頭にでも以下のように記述すればおk。

      LANG = en_US.UTF-8

'
    - '2012-10-14 00:00:00.000000'
    - '2012-10-14 00:00:00.000000'
    - 1
  - - 117
    - bootstrapのtabの使用例
    - ! "<ul class=\"nav nav-tabs\">\n  <li><a href=\"#home\" data-toggle=\"tab\">Home</a></li>\n
      \ <li><a href=\"#profile\" data-toggle=\"tab\">Profile</a></li>\n  <li><a href=\"#messages\"
      data-toggle=\"tab\">Messages</a></li>\n  <li><a href=\"#settings\" data-toggle=\"tab\">Settings</a></li>\n</ul>\n
      \n<div class=\"tab-content\">\n  <div class=\"tab-pane active\" id=\"home\">hoge</div>\n
      \ <div class=\"tab-pane\" id=\"profile\">fuga</div>\n  <div class=\"tab-pane\"
      id=\"messages\">jya</div>\n  <div class=\"tab-pane\" id=\"settings\">...</div>\n</div>\n\nこれをはりつけるだけでおk。\n
      data-toggleを使用しない方法ではjavascriptを書く必要性があるみたいだが、まだよくわかんない。\n"
    - '2012-10-18 00:00:00.000000'
    - '2012-10-18 00:00:00.000000'
    - 1
  - - 118
    - Hpricotの使用例
    - ! 'rank_in_apps = Hpricot(open("https://play.google.com/store/apps/collection/topselling_free")).search("ul.snippet-list
      li.goog-inline-block")


      rank_in_apps.each do |rank_in_app|

      　　rank_in_app.search(".thumbnail img").first["src"]#ここのFirstがみそ。Hpricot::ElementsからElementに変換する。

      end

'
    - '2012-10-20 00:00:00.000000'
    - '2012-10-20 00:00:00.000000'
    - 1
  - - 119
    - rssでitem毎にimageを追加する方法。
    - ! "rssでitem毎に画像を追加したい（サムネとか）場合があった。\n\nしかしrssのimageタグはchannelには設定できるが、item毎に設定することはできない。\n\nそこでニコニコのRSSを参考にやり方を見つけた。\n\n
      \     <item>\n            <title>\n                Google カレンダー\n            </title>\n
      \           <link>\n                https://play.google.com/store/apps/details?id=com.google.android.calendar&amp;feature=apps_topselling_free\n
      \           </link>\n            <description>\n                ![CDATA[&lt;p
      class=&quot;thumbnail&quot;&gt;&lt;img alt=&quot;noimage&quot; height=&quot;70&quot;
      width=&quot;94&quot; src=https://lh5.ggpht.com/5pnImMPykOgGFVeTSOQs7W9JbTK-ZhtxC1YS9t5kdwL73szjvKpOEsLVjZj0TplhDA=w78-h78&gt;&lt;p&gt;&lt;p
      class=&quot;description&quot;&gt;4.0.3 以降の端末で Google カレンダーをぜひお試しください カレンダー アプリは、Android
      搭載端末と同期している各 Google アカ...&lt;/p&gt;]]\n            </description>\n        </item>\n\nこの様にdescriptionの中に![CDATAでかこって、imgタグなどのhtmlを記述する。そうするとリーダではそのHTMLに従って表示することがおおい（少なくともGoogleリーダはそう）ため、アイテム毎にサムネが表示されるようになる\n"
    - '2012-10-21 00:00:00.000000'
    - '2012-10-21 00:00:00.000000'
    - 1
  - - 120
    - 部分テンプレートに引数を渡す例
    - ! "呼び出す側\n<%= render 'ranking_contents' ,:rankings => @rankings_free%>\n呼び出される側\n\t<%
      rankings.news.each do |news| %>\n\t<tr>\n\t\t<td><%= image_tag(news.get_changerank_icon,:size=>\"60x60\")
      %></td>\n\t\t<td><%= news.rank %>位</td>\n\t\t<td><%= image_tag (news.thumbnail_url)
      %></td>\n\t\t<td><%= link_to news.title, news.url %></td>\n\t\t<td><%= news.description
      %></td>\n\t</tr>\n\t<% end %>\n"
    - '2012-10-22 00:00:00.000000'
    - '2012-10-22 00:00:00.000000'
    - 1
  - - 121
    - ! '# rubyのarrayで独自クラスのソート'
    - ! '

'
    - '2012-10-23 00:00:00.000000'
    - '2012-10-23 00:00:00.000000'
    - 1
  - - 122
    - ActiveRecord::Associations::CollectionProxy:0x3fc04eec3f30
    - ! 'has_manyとかをつかって、一体多をやっているとこんなエラーがでることがある。


      ActiveRecord::Associations::CollectionProxy:0x3fc04eec3f30


      これは参照される先（has_one側）に「hoge_id」みたいなカラムが追加されていないため出るエラー。

'
    - '2012-10-26 00:00:00.000000'
    - '2012-10-26 00:00:00.000000'
    - 1
  - - 123
    - railsに日付を保存する。
    - ! 'rails g migration AddAccessedDateFromAcessLog AccessedDate:DataTime


      これでおk。

      DataTimeにしているのはDateだと時間が保存できないから。


      ついでにForamt例

      DateTime.strptime(date, "%d/%B/%Y:%H:%M:%S %Z")

'
    - '2012-10-29 00:00:00.000000'
    - '2012-10-29 00:00:00.000000'
    - 1
  - - 124
    - macでのftpの使い方
    - ! 'ftp 192.168.11.60

      を入力


      http://sasuke.main.jp/ftpcommand.html

      コマンドはだいたい上記に書いてある。


      ただし注意点としては

      put コマンドであげる際はアップするディレクトリを指定すると相対パスとftpの相対パスが一致しないとだめ。

      そのため、アップする際はアップしたいファイルがあるディレクトリがある所まで移動して、アップするのがよい。

'
    - '2012-11-01 00:00:00.000000'
    - '2012-11-01 00:00:00.000000'
    - 1
  - - 125
    - apache2のログを一日毎に保存させる
    - ! 'http://wimax.blog64.fc2.com/blog-entry-91.html

      を参照。


      様はこれをconfに書けばいいのだが、

      CustomLog "|/usr/local/apache2/bin/rotatelogs /usr/local/apache2/logs/access_log.%Y%m%d
      86400 540" combined

      ちゃんと動いてるか、確認して書いた方がいい。

      どうやって確認するかというと

      /usr/local/apache2/bin/rotatelogs /usr/local/apache2/logs/access_log.%Y%m%d
      86400 540" combined

      を実際に実行して、何も出力されなければおk。

      逆に何か文字などがでればいろいろと間違っている可能性がある。

      また既存のCustomlogはコメントあうとでもして、動作しないようにすること。

'
    - '2012-11-03 00:00:00.000000'
    - '2012-11-03 00:00:00.000000'
    - 1
  - - 126
    - railsでURLを抜き出す方法
    - ! 'request.path_info

      でいける？(いけた)

      でもなんかいけなかった気がしたから正規表現かいた。

      request.url.scan(/[^\/]\/[^\/][^\?]*/).first[1..-1]　

'
    - '2012-11-05 00:00:00.000000'
    - '2012-11-05 00:00:00.000000'
    - 1
  - - 127
    - activerecord 正規表現
    - ! 'Hoge.Where(/.*/)

      みたいな事がしたいと思って検索したけど、どうも正規表現はつかえない？


      かわりに

      Hoge.find(:all, :conditions=>["name like ''%hoge''"])

      のようにlikeをクエリでなげてにたようなことをやる。この例だとnameカラム内の.*hogeがヒットする感じ。

'
    - '2012-11-10 00:00:00.000000'
    - '2012-11-10 00:00:00.000000'
    - 1
  - - 128
    - Ubuntuにnokogiriを入れる
    - ! "Ubuntuにnokogiriのgemをいれようとするとエラーが…\n\nlain@www22057ue:~/rails/solrtest$ gem
      install nokogiri\nBuilding native extensions.  This could take a while...\nERROR:
      \ Error installing nokogiri:\n\tERROR: Failed to build gem native extension.\n\n
      \       /home/lain/.rvm/rubies/ruby-1.9.3-p194/bin/ruby extconf.rb\nchecking
      for libxml/parser.h... yes\nchecking for libxslt/xslt.h... no\n&#45;&#45;&#45;&#45;&#45;\nlibxslt
      is missing.  please visit http://nokogiri.org/tutorials/installing_nokogiri.html
      for help with installing dependencies.\n&#45;&#45;&#45;&#45;&#45;\n*** extconf.rb
      failed ***\nCould not create Makefile due to some reason, probably lack of\nnecessary
      libraries and/or headers.  Check the mkmf.log file for more\ndetails.  You may
      need configuration options.\n\n対策；\nsudo apt-get install libxml2\nsudo apt-get
      install libxml2-dev\nsudo apt-get install libxslt-dev\nをいれればおk。\n"
    - '2012-11-10 00:00:00.000000'
    - '2012-11-10 00:00:00.000000'
    - 1
  - - 129
    - railsで全文検索
    - ! "solrを使う。\n\n基本はhttp://railscasts.com/episodes/278-search-with-sunspot?language=ja&view=asciicastを参照。\n\nGemFileに\ngem
      'nokogiri'\ngem 'sunspot_rails'\ngem 'sunspot_solr'\nを書いて、インストール。\nその後\nrails
      g sunspot_rails:install\n\nrake sunspot:solr:start\n上のコマンドで起動だが、バックグラウンドがいやなら\nrake
      sunspot:solr:run\n\nモデルはこんな感じ\nclass News < ActiveRecord::Base\n  attr_accessible
      :content, :title\n  \n  searchable do\n    text :title, :boost => 5\n    text
      :content\n  end\nend\n\nこれでtitle,contentのカラムに全文検索を行う。boostはtitleカラムに一致したものに関しては重みを5増やすという意味。\n\nコントローラはこんな感じ\nresult
      = News.search do\n     fulltext \"hogehoge+searchword\"\n     paginate :page
      => page, :per_page => Kaminari.config.config[:default_per_page]\n     order_by
      :updated_at, :desc\nend\n@news = result.results\n\nまた過去にいれたデータにさくびきなどをつけたい場合は\nrake
      sunspot:reindex\n\nーーーーーーーーーーーーーーーーー\nまた、has_many関係にある物に対しても検索を行いたい場合は、\n\n```ruby\nclass
      Blog < ActiveRecord::Base\n  attr_accessible :content, :title\n  \n  belongs_to
      :user\n  \n  has_many :tags\n  \n  searchable do\n    text :title, :boost =>
      5\n    text :content\n    date :updated_at\n    integer :user_id\n    \n    text
      :tags do\n      self.tags.map(&:tag)\n    end\n  end\nend\n```\n\nこんな感じにかく。&:tagの意味がよく分かってないのだが、tagsの配列から:tag属性を引っ張りだしている？\nーーーーーーーーーーーーーーーーー\nしかしこのままRspec-Railsでテストを行うと、\n\n```\n
      \    Errno::ECONNREFUSED:\n       Connection refused - connect(2)\n```\nとエラーがでる。\nなので、gem
      \"sunspot_test\"を書いて、spec_helper.rbに\n\n```ruby\nrequire 'sunspot_test/rspec'\n```\nと書いておけばおk。でもうまく動いてないっぽい、indexがはれてない？\n\nーーーーーーーーーーーーーーーーー\n\nまた、これでは日本語を形態素解析できない。\nそこでここから改良をおこなっていく。\n\nまずsolr自体のバージョンをあげる。\nhttps://github.com/sunspot/sunspot/wiki/Upgrading-sunspot_solr-Solr-Instance\nやり方は上記参照。\n\nこのままではshame.xmlがsunspotインストール時のままなので、これも変更する。\nとりあえずテキストだけを以下のように書き換えた。\n\n```\n
      \   <fieldType name=\"text\" class=\"solr.TextField\" positionIncrementGap=\"100\"
      autoGeneratePhraseQueries=\"false\">\n      <analyzer>\n        <tokenizer class=\"solr.JapaneseTokenizerFactory\"
      mode=\"search\"/>\n        <!--<tokenizer class=\"solr.JapaneseTokenizerFactory\"
      mode=\"search\" userDictionary=\"lang/userdict_ja.txt\"/>-->\n        <!-- Reduces
      inflected verbs and adjectives to their base/dictionary forms (辞書形) -->\n        <filter
      class=\"solr.JapaneseBaseFormFilterFactory\"/>\n        <!-- Removes tokens
      with certain part-of-speech tags -->\n        <!-- <filter class=\"solr.JapanesePartOfSpeechStopFilterFactory\"
      tags=\"lang/stoptags_ja.txt\" enablePositionIncrements=\"true\"/> -->\n        <!--
      Normalizes full-width romaji to half-width and half-width kana to full-width
      (Unicode NFKC subset) -->\n        <filter class=\"solr.CJKWidthFilterFactory\"/>\n
      \       <!-- Removes common tokens typically not useful for search, but have
      a negative effect on ranking -->\n        <filter class=\"solr.StopFilterFactory\"
      ignoreCase=\"true\" words=\"lang/stopwords_ja.txt\" enablePositionIncrements=\"true\"
      />\n        <!-- Normalizes common katakana spelling variations by removing
      any last long sound character (U+30FC) -->\n        <filter class=\"solr.JapaneseKatakanaStemFilterFactory\"
      minimumLength=\"4\"/>\n        <!-- Lower-cases romaji characters -->\n        <filter
      class=\"solr.LowerCaseFilterFactory\"/>\n      </analyzer>\n    </fieldType>\n```\n\nJapanesePartOfSpeechStopFilterFactoryをコメントアウトしたのはエラーがでたから。\n\n次にsolr/confの下にはlang,velocity,xsltなどが入ってないのでこれも入れる。\n\nこれでおk。\nhttp://127.0.0.1:8982/solr/admin/analysis.jsp\n等にアクセスして試してみる。\n\n
      設定の参照URL諸々\nhttp://gendosu.jp/archives/1755\nhttp://treeapps.hatenablog.com/entry/20120501/p1\nhttp://tech.actindi.net/3559512282\nhttp://sunspot.github.com/docs/index.html#Search_In_Depth\n"
    - '2012-11-10 00:00:00.000000'
    - '2012-11-10 00:00:00.000000'
    - 1
  - - 130
    - railsでfacebookのソーシャルログイン機能の実装。
    - ! "http://npb.somewhatgood.com/blog/archives/715\nを参照すればおk。\n\nまず、\ngem 'omniauth'\ngem
      'omniauth-facebook'\nして、\n\n/config/initializers/\nにomniauth.rbというファイルをつくって\nRails.application.config.middleware.use
      OmniAuth::Builder do\n  provider :facebook,\"App ID\",\"App Secret\"\nend\nをかいて\n\nfacebookのページにいってアカウント登録。\nここで注意するべきは携帯かプリペイド認証をしたアカウントでないと登録できないのと、\n「アプリをFacebookに結合する方法を選択」を選択して、URLを入れないと駄目な点だ。\n\nこれができれば、適当なviewに\n　<div
      id=\"user_nav\">\n　　<%= link_to \"facebookでlogin\", \"/auth/facebook\" %>\n　</div>\nを書いてfacebookに飛ばさす。\n\nんでコールバックを書いていくのだがめんどくさいので以下全コピ\n\n\n\nconfig/routes.rb\n\nMonopon::Application.routes.draw
      do\n  get \"meet/index\"\n\n  resources :monosets\n  root :to => \"meet#index\"\n\n
      \ #OmniAuth\n  match \"/auth/:provider/callback\" => \"sessions#callback\"\n
      \ match \"/logout\" => \"sessions#destroy\", :as => :logout\n\n\nまだSessionsコントローラがありませんので、作っておきましょう。\n\n$
      rails g controller sessions\nsessionsコントローラに以下の記述をします。\n/app/controllers/sessions_controller.rb\n\n\nclass
      SessionsController < ApplicationController\n  def callback\n    raise request.env[\"omniauth.auth\"].to_yaml\n
      \ end\nend\n認証に成功してRailsアプリに戻ってくると、認証関連の情報をハッシュ形式で持つomniauth.authという環境変数が利用できるようになります。上の処理では、わざと例外を発生させてその環境変数の中身を表示させています。実際にログインして内容を表示させてみましょう。\n▼環境変数の中身\n\n:provider、:uid、[:info][:name]などでそれぞれの情報にアクセスできることがわかります。\n\nUserモデル、Sessionsコントローラーの処理\n\nではこのRailsアプリにUserモデルを作りましょう。プロバイダー名、UserID、名前を保持するためのカラムを用意します。\n\n$
      rails g model User provider:string uid:string name:string\n$ rake db:migrate\n再びSessionsコントローラーに戻って下記のとおりに修正します。\n\nclass
      SessionsController < ApplicationController\n  def callback\n\n    #omniauth.auth環境変数を取得\n
      \   auth = request.env[\"omniauth.auth\"]\n\n    #Userモデルを検索\n    user = User.find_by_provider_and_uid(auth[\"provider\"],
      auth[\"uid\"]) \n\n    if user\n       # 既存のユーザ情報があった場合　ルートに遷移させます\n       session[:user_id]
      = user.id\n       redirect_to root_url, :notice => \"ログインしました。\"\n    else\n
      \      # Userモデルに:providerと:uidが無い場合（外部認証していない）、保存してからルートへ遷移させる\n       User.create_with_omniauth(auth)\n
      \      redirect_to root_url, :notice => \"#{auth[\"info\"][\"name\"]}さんの#{auth[\"provider\"]}アカウントと接続しました。\"\n
      \   end \n\n  end\nend\n１行目では、omniauth.auth環境変数から、認証関連の情報をハッシュで取得しています（さきほどは例外を発生させていたのをやめたわけです）。２行目では、まず、providerとuidの値から既存ユーザとしてモデルに保存されていないか検索をしています。検索の結果、該当が無ければウェルカム(ユーザ登録)ページへ遷移させています。\n\nではUserモデルを編集しましょう。\napp/models/user.rb\n\n
      \   class User < ActiveRecord::Base\n      def self.create_with_omniauth(auth)\n
      \       create!do |user|\n          user.provider = auth[\"provider\"]\n          user.uid
      = auth[\"uid\"]\n\n          if user.provider == \"facebook\"\n             user.name
      = auth[\"info\"][\"name\"]\n          else\n             user.name = auth[\"info\"][\"nickname\"]\n
      \         end\n\n        end\n      end\n    end\nuser.nameの保存値だけは、facebookとそれ以外で分けています。twitterで発言したときなどに利用されている値は[info][nickname]なのに対して、facebookでは[info][name]の値のほうが一般的です。さきほど環境変数の中身を表示しましたが、twitterとfacebookそれぞれで返されたハッシュ値をよく見比べてみればわかります。\n\nログインリンクの修正\n\nログインしている最中には「ログアウト」のリンクを表示するようにします。これには、現在ログインしているのかどうかを判定するための仕組みが必要です。どのコントローラーかも使えるように、application_controller.rbに記述します。\n\napp/controllers/application_controller.rb\n\nclass
      ApplicationController < ActionController::Base\n  protect_from_forgery\n\n  helper_method
      :current_user\n\n  private\n  def current_user\n    @current_user ||= User.find(session[:user_id])
      if session[:user_id]\n  end\n\nend\nsession[:user_id]があれば、@curretn_userというインスタンス変数からアクセスできるようにしています。\n続いてViewの修正です。はじめに編集したレイアウトファイルを修正します。\n\n<body>\n
      \ <div id=\"user_nav\">\n    <% if current_user %>\n       <%= current_user.name
      %>さん <%= link_to \"ログアウト\" ,logout_path %>\n    <% else %>\n       <%= link_to
      \"Twitterでlogin\",\"/auth/twitter\" %>\n       <%= link_to \"facebookでlogin\",
      \"/auth/facebook\" %>\n    <% end %>\n</div>\n\n<%= yield %>\n\n</body>\n\nこれで最後です。ログアウトの処理をSessionsコントローラーに記述します。すでにログアウトのリンクはsessionsコントローラーのdestroyアクションを呼び出すようにしてありますので、その内容を記述するわけです。ここではdestroyアクションのみ書きます。\n\napp/controllers/sessions_controller.rb\n\nclass
      SessionsController < ApplicationController\n\ndef destroy\n    session[:user_id]
      = nil\n    redirect_to root_url, :notice => \"Log out\"\nend\n\nend\nこれでOmniAuthを使った認証の基本は終わりです。OmniAuthを使えばその他のサービスの認証も簡単に足せるようなので、そのうちトライしてみたいです。\n"
    - '2012-11-17 00:00:00.000000'
    - '2012-11-17 00:00:00.000000'
    - 1
  - - 131
    - railsでurlをnestした際に気をつけるべき事など
    - ! "ネストのさせ方\n\n  resources :users do\n    resources :blogs\n  end\n\nネスト先のlink_toの書き方\n<%=
      link_to 'New Blog', new_user_blog_path(params[:user_id]) %>\n\nform_forの書き方\n<%=
      form_for @blog, :url => user_blogs_path(params[:user_id]) do |f| %>\n\nredirect_toの書き方\nredirect_to
      user_blog_path(params[:user_id],@blog)\n\n上のやつ嘘\nform_for [@user,@blog]\nみたいにするといい感じ。\n"
    - '2012-11-17 00:00:00.000000'
    - '2012-11-17 00:00:00.000000'
    - 1
  - - 132
    - railsでマークダウン対応
    - ! "http://railscasts.com/episodes/272-markdown-with-redcarpet?language=ja&view=asciicast\nこのサイトのいう通りにすればおk。\n\nただし、\ngem
      'redcarpet','1.17.2'\nとかくこと。\n２はxhtmlとかをサポートするためにnewなどが使えなくなってる。（requireとかすればいいらしいが）\n\nどうもpygmentsが\n<span
      class=\"k\">print</span> <span class=\"s\">&quot;Hello World&quot;</span>\nみたいにいい感じに装飾してくれる。んで\nalbinoがpygmentsのrubyのためのラッパーみたい。\n\nまたこのサイトのやり方では、マークダウン対応したhtmlが\n<!DOCTYPE
      html PUBLIC \\\"-//W3C//DTD HTML 4.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/REC-html40/loose.dtd\\\">\\n<html><body>\\n<p>markdown
      test</p>\nこんな感じではきだれてしまう。つまりいらんヘッダが入ってる。\nそこで\n  def syntax_highlighter(html)\n
      \   doc = Nokogiri::HTML.fragment(html)\n    doc.xpath(\"pre\").each do |pre|\n
      \     pre.replace Albino.colorize(pre.text.rstrip, pre[:lang])\n    end\n    doc.to_s\n
      \ end\n上記の様に書き換える。\n"
    - '2012-11-18 00:00:00.000000'
    - '2012-11-18 00:00:00.000000'
    - 1
  - - 133
    - railsでスマフォ対応
    - ! 'jquery-mobileを使う。


      gem ''jquery_mobile_rails''

      をかいてbundleして


      その後、application.jsを

      //= require jquery

      //= require jquery_ujs

      //= require jquery.mobileNew

      みたいに書き足して


      application.css に

      *= require_self

      *= require_tree .

      *= require jquery.mobileNew

      みたいに書き足せば、これでjquerymobileが適用されている。


      ただPCサイトすべて、mobile対応してるるぅ…しかもマークダウン記法の部分がみえなくなってるぅ…がんばるぅ…

'
    - '2012-11-19 00:00:00.000000'
    - '2012-11-19 00:00:00.000000'
    - 1
  - - 134
    - facebookでログイン管理
    - ! "facebookとdebiseを連携して使う。\n\nhttp://blog.twiwt.org/e/61f562\nを参照すればおk。\n\nなんだけど、以外に手間取ったわ。\nhttps://developers.facebook.com/apps\nにアクセスすれば、新しいアプリ作れるよ！ローカル用とサーバ用二つあればいい感じなきがする。\n\nただし、routes.rbは上記に書いてある方法では駄目で、\n
      \ devise_for :users,:controllers => { \n    :omniauth_callbacks => \"users/omniauth_callbacks\"\n
      \ }\nみたいにcallbackに使うcontroller指定しないと、デフォルトのdeviseのコントローラ見に行く。\n\n       new_user_session
      GET    /users/sign_in(.:format)                 devise/sessions#new\n           user_session
      POST   /users/sign_in(.:format)                 devise/sessions#create\n   destroy_user_session
      DELETE /users/sign_out(.:format)                devise/sessions#destroy\nuser_omniauth_authorize
      \       /users/auth/:provider(.:format)          users/omniauth_callbacks#passthru
      {:provider=>/facebook/}\n user_omniauth_callback        /users/auth/:action/callback(.:format)
      \  users/omniauth_callbacks#(?-mix:facebook)\n\nみたいなrootがつくられるのだが、これは Userクラスで、\nclass
      User < ActiveRecord::Base\n  devise :database_authenticatable, :omniauthable\nend\nみたいに指定したから。\nどうもdatabase_authenticatable(訳；データベースを確証することができる？)が決まり文句の、databaseの指定を今からしますよ〜てきなあれで、\nominiauthhableでomniauthを使った認証をする事を指定しているためだと思われる。\n\nあと、\nrails
      g devise:viewsでviewを表示させて、\ndevise/sessions/new.html.erbを編集しておくこと。\nしてないとfacebook以外のsigninの方法が表示される。\n"
    - '2012-11-21 00:00:00.000000'
    - '2012-11-21 00:00:00.000000'
    - 1
  - - 135
    - rspec覚え書き
    - ! "rails3 でrspec2を使う場合は\nhttp://d.hatena.ne.jp/CortYuming/20120526/p3\nが参考になる\n\n・describe
      \ndescribe \"GET index\" do\nの様にどのメソッドのテストをしたいかを書く。\n\n・it\nit \"値が取得できること\"
      do\nみたいに、どんな結果を期待するかを書く。\n\n・context\ncontext '正常値' do\nみたいに、入力されるデータの状態を書く。\n\n・assigns\nこれで事前に実行したコントローラの中身のインスタンス変数とかにアクセスできる？\n\nまとめ\n
      \  1| describe Stack do\n   2|    describe '#push' do\n   3|      context '正常値'
      do\n   4|        it '値が保存されること'\n   5|      end\n   6|\n   7|      context 'nilの場合'
      do\n   8|        it '例外になること'\n   9|      end\n  10|    end\n  11|  end\n\n\n・should\nit
      \"1 + 1 = 2\" do\n    (1+1).should == 2\nend\n\n・DB関連\nfixturesでymlからデータを引っ張ってきてDBに保存するみたい。\nつまり\nuser.ymlに\none:\n
      \ id: 1\nが書いてあって、\nこれを\nfixtures　:users\nと書くと、DBにid;1のuserが保存される。詳しくは\nhttp://railsdoc.com/references/fixtures\n参照。\nまたymlのデータを参照するときには\n@user
      = users(:one)\nとかく。\n"
    - '2012-11-25 00:00:00.000000'
    - '2012-11-25 00:00:00.000000'
    - 1
  - - 136
    - オブジェクトをjsonに変換する
    - ! "色々方法があると思うが、hashにかえて変換するのがいいとおもうの。\n\n```ruby\nclass Blog\n  attr_accessor
      :title,:content,:category\n  \n  def to_hash\n    h = {\"title\"=>@title, \"content\"=>@content,
      \"category\"=>@category}\n  end\nend\n\nblogs = []\nblogs << blog.to_hash\np
      JSON[blogs]\n```\n"
    - '2012-11-29 00:00:00.000000'
    - '2012-11-29 00:00:00.000000'
    - 1
  - - 137
    - HTTPステタースコードを操る方法
    - ! 'http://www.func09.com/wordpress/archives/1226


      ここに全部乗ってる。


      実際に使う時は

      format.json { head :no_content }

      こんな感じ。

'
    - '2012-11-29 00:00:00.000000'
    - '2012-11-29 00:00:00.000000'
    - 1
  - - 138
    - routes関連逆引き
    - ! 'routes.rbの書き方逆引き。


      ・matchの使い方

      match ''users/:user_id/blogs/import/new'' => ''blogs#import_new'' ,:via => "get",:as
      => ''import_new_user_blog''

'
    - '2012-11-30 00:00:00.000000'
    - '2012-11-30 00:00:00.000000'
    - 1
  - - 139
    - rubyでpush通知
    - ! "APNS をrubyで実装したかったら、 https://github.com/jpoz/APNSを使う。\n\nのだが、日本語には対応してない様子。\n\nまたpemをクラス変数にいれちゃうので、\n複数のpemを使い分けつつ、railsとかのマルチスレッドでやったときには何かバグがおこりそう。\n\nそこで、自前で実装した。\n\nただ、このrequire
      'json'だが、これはruby標準のやつでは日本語が送れないから指定している。\nしかしrails3.2で使った時はこのrequireがあったせいで送れないとかいう状態が発生した。\n逐次つけかえ？\n\n#
      coding: UTF-8\n#require './lib/apns'\n\nrequire 'json'\nrequire 'socket'\nrequire
      'openssl'\n\nclass Apns\n    class << self\n    attr_accessor :host, :port\nend\n\ndef
      send_message(device_token,pem,message)\n    context      = OpenSSL::SSL::SSLContext.new\n
      \   context.cert = OpenSSL::X509::Certificate.new(File.read(pem))\n    context.key
      \ = OpenSSL::PKey::RSA.new(File.read(pem), nil)\n    \n    sock         = TCPSocket.new(Apns.host,
      Apns.port)\n    ssl          = OpenSSL::SSL::SSLSocket.new(sock,context)\n    ssl.connect\n
      \   \n    pm = {\"aps\"=>{\"alert\" => message}}.to_json\n    pt = [device_token.gsub(/[\\s|<|>]/,'')].pack('H*')\n\n
      \   write_s = [0, 0, 32, pt, 0, pm.bytesize, pm].pack(\"ccca*cca*\")\n    ssl.write(write_s)\n
      \   \n    ssl.close\n    sock.close\nend\nend\n\nApns.host = 'gateway.sandbox.push.apple.com'\nApns.port
      = 2195\napns = Apns.new\n\n\ndevice_token = '??????? ??????? ??????? ???????
      ??????? ??????? ??????? ???????'\napns.send_message(device_token,\"./cert.pem\",\"あいうえo\")\n"
    - '2012-11-30 00:00:00.000000'
    - '2012-11-30 00:00:00.000000'
    - 1
  - - 140
    - ! '# css逆引き'
    - ! '

'
    - '2012-12-06 00:00:00.000000'
    - '2012-12-06 00:00:00.000000'
    - 1
  - - 141
    - Framework search pathで相対パスを指定する
    - ! 'Xcodeの設定の話ですん。


      "${SRCROOT}/imobile_for_SP_app_iOS_SDK_1.2/lib"

      こんな感じ。

      HOMEとかもあるみたい。

'
    - '2012-12-06 00:00:00.000000'
    - '2012-12-06 00:00:00.000000'
    - 1
  - - 142
    - activerecordにarrayを保存する
    - ! 'serializeを使えばできる。詳しくは

      http://www.func09.com/wordpress/archives/577

      を参照。


      が、しかし、検索がめんどい

      例えば["aaa","bbb"]を保存したとしても、これを検索するにはfind_by_array(["aaa","bbb"].to_yaml)

      でしかできない。["aaa"]とかは引っかからない。これはしんどい。


      おとなしく複数のテーブルを定義するべきか。

'
    - '2012-12-07 00:00:00.000000'
    - '2012-12-07 00:00:00.000000'
    - 1
  - - 143
    - Macで特定のPortを占有してるデーモンをキル
    - ! 'lsof -i:8982

      で占有しているアプリのPIDを調べて、

      kill ？？？？

      でキル。

'
    - '2012-12-10 00:00:00.000000'
    - '2012-12-10 00:00:00.000000'
    - 1
  - - 144
    - activerecordのsaveでTimestanpを更新しない
    - ! "saveとかかいちゃうとTimestanpが勝手に更新されてしまう。\nでも更新せずに自分で定義したい場合もあるよね。\nなのでこうする。\n\n```ruby\nActiveRecord::Base.record_timestamps
      = false\nblog.save\nActiveRecord::Base.record_timestamps = true\n```\n\nこれインスタンス毎とかできないのだろうか。\nあと、falseにしたからには自分で必ずUpdate_ato,created_atを書く事。でないと\n\n```\nActiveRecord::StatementInvalid:\n
      \      SQLite3::ConstraintException\n```\nというエラーが出る。\n"
    - '2012-12-12 00:00:00.000000'
    - '2012-12-12 00:00:00.000000'
    - 1
  - - 145
    - railsでtweetbutton
    - ! 'Railsでいい感じのtweetbuttonないかな〜、と思ってたらあった。


      https://github.com/intridea/tweet-button/

      使い方は


      application_helperに```include TweetButton```と書くだけ。


      あとはViewに```<%= tweet_button(:text => @blog.title) %>```と書けばおk。

'
    - '2012-12-16 00:00:00.000000'
    - '2012-12-16 00:00:00.000000'
    - 1
  - - 146
    - ! '`require'': cannot load such file -- readline'
    - ! '`require'': cannot load such file -- readline

      と怒られたときの対処方法。

      どうもrvmのインストールを強行したのが原因？rails cうつとおこられた。


      ```

      sudo aptitude install libreadline5-dev libncurses5-dev

      cd /home/lain/.rvm/src/ruby-1.9.3-p194/ext/readline/

      ruby extconf.rb

      make

      make install

      ```


      でおk。

'
    - '2012-12-17 00:00:00.000000'
    - '2012-12-17 00:00:00.000000'
    - 1
  - - 147
    - 画面起動後に別のViewを表示する。
    - ! "http://blog.ps-ax.info/archives/295\r\n上記参照。\r\n\r\nようはこう書く。\r\n- (void)viewDidAppear:(BOOL)animated\r\n{\r\n
      \   DescriptionViewController *viewController;\r\n    viewController = [[DescriptionViewController
      alloc] init];\r\n    \r\n    [self presentModalViewController:viewController
      animated:YES];\r\n    [viewController release];\r\n}\r\n"
    - '2012-12-19 00:00:00.000000'
    - '2013-01-08 04:09:31.939624'
    - 1
  - - 148
    - a
    - b
    - '2013-01-08 04:09:44.970537'
    - '2013-01-08 04:09:44.970537'
    - 1

---
tags:
  columns:
  - id
  - tag
  - created_at
  - updated_at
  records: 
  - - 1
    - その他技術
    - '2013-01-08 04:09:15.644561'
    - '2013-01-08 04:09:15.644561'
  - - 2
    - tomcat
    - '2013-01-08 04:09:16.763601'
    - '2013-01-08 04:09:16.763601'
  - - 3
    - eclipse
    - '2013-01-08 04:09:16.876426'
    - '2013-01-08 04:09:16.876426'
  - - 4
    - sql
    - '2013-01-08 04:09:16.918043'
    - '2013-01-08 04:09:16.918043'
  - - 5
    - データベース関連
    - '2013-01-08 04:09:16.961461'
    - '2013-01-08 04:09:16.961461'
  - - 6
    - spring
    - '2013-01-08 04:09:16.996192'
    - '2013-01-08 04:09:16.996192'
  - - 7
    - 未分類
    - '2013-01-08 04:09:17.284495'
    - '2013-01-08 04:09:17.284495'
  - - 8
    - 技術
    - '2013-01-08 04:09:17.469157'
    - '2013-01-08 04:09:17.469157'
  - - 9
    - struts2
    - '2013-01-08 04:09:17.606482'
    - '2013-01-08 04:09:17.606482'
  - - 10
    - maven2
    - '2013-01-08 04:09:17.735708'
    - '2013-01-08 04:09:17.735708'
  - - 11
    - memcached
    - '2013-01-08 04:09:17.984162'
    - '2013-01-08 04:09:17.984162'
  - - 12
    - html&jquery
    - '2013-01-08 04:09:18.057636'
    - '2013-01-08 04:09:18.057636'
  - - 13
    - rails
    - '2013-01-08 04:09:18.157240'
    - '2013-01-08 04:09:18.157240'
  - - 14
    - linuxとvirtualbox
    - '2013-01-08 04:09:18.219131'
    - '2013-01-08 04:09:18.219131'
  - - 15
    - iphone&objective-c
    - '2013-01-08 04:09:18.413302'
    - '2013-01-08 04:09:18.413302'
  - - 16
    - mac
    - '2013-01-08 04:09:18.551034'
    - '2013-01-08 04:09:18.551034'
  - - 17
    - ruby
    - '2013-01-08 04:09:18.632650'
    - '2013-01-08 04:09:18.632650'
  - - 18
    - apache
    - '2013-01-08 04:09:18.823655'
    - '2013-01-08 04:09:18.823655'
  - - 19
    - json
    - '2013-01-08 04:09:18.928476'
    - '2013-01-08 04:09:18.928476'
  - - 20
    - git
    - '2013-01-08 04:09:19.079737'
    - '2013-01-08 04:09:19.079737'
  - - 21
    - mongo
    - '2013-01-08 04:09:19.379373'
    - '2013-01-08 04:09:19.379373'
  - - 22
    - html
    - '2013-01-08 04:09:19.542263'
    - '2013-01-08 04:09:19.542263'
  - - 23
    - rss
    - '2013-01-08 04:09:19.623297'
    - '2013-01-08 04:09:19.623297'
  - - 24
    - c
    - '2013-01-08 04:09:44.945937'
    - '2013-01-08 04:09:44.945937'
